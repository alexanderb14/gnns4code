* Source Code Miner

The miner is supposed to extract certain characteristics from llvm bit code
files.

** Compilation

   LLVM needs to be installed in the system. CMake should find all dependencies
   automagically. To build, simply run the following commands:

   #+BEGIN_SRC sh
   mkdir build
   cd build
   cmake ..
   make
   #+END_SRC

** Usage

   First you need to create a bit code file:

   #+BEGIN_SRC sh
   clang -c -emit-llvm <c/c++ file>
   #+END_SRC

   The miner can be run as a standalone executable:

   #+BEGIN_SRC sh
   ./bin/miner <bitcode file> <target json file>
   #+END_SRC


   The miner can also be run as a LLVM pass:

   #+BEGIN_SRC sh
   opt -load lib/libminer_pass.so -miner <bitcode file> out2.json -f -o out.bc
   #+END_SRC

** Todos and Issues

*** BUG Standalone does not work
    Currently the miner only runs as a pass loaded with opt. The standalone
    version segfaults, probably because the Memory SSA pass does not run. This
    is most likely an issue with the pass manager configuration.

*** TODO Always ensure correct mapping of IDs to their vector position
    The code for dumping instructions and memory accesses assumes that the ID
    is equal to the position in the vector. This seems to work for now, but is
    not really safe. The code should ensure, that an object is always inserted
    at the position of its ID.
