typedef uchar uint8_t; typedef char int8_t; typedef ushort uint16_t; typedef short int16_t; typedef uint uint32_t; typedef int int32_t; typedef ulong uint64_t; typedef long int64_t; typedef uint32_t host_size_t; typedef struct dyna_salt_t {
  host_size_t salt_cmp_size;
  host_size_t bitfield_and_offset;
} dyna_salt;
inline uint A(uint a) {
  return bitselect(rotate(a, 24U), rotate(a, 8U), 0x00FF00FFU);
}
__constant unsigned int Ga[256] = {0xC66363A5U, 0xF87C7C84U, 0xEE777799U, 0xF67B7B8DU, 0xFFF2F20DU, 0xD66B6BBDU, 0xDE6F6FB1U, 0x91C5C554U, 0x60303050U, 0x02010103U, 0xCE6767A9U, 0x562B2B7DU, 0xE7FEFE19U, 0xB5D7D762U, 0x4DABABE6U, 0xEC76769AU, 0x8FCACA45U, 0x1F82829DU, 0x89C9C940U, 0xFA7D7D87U, 0xEFFAFA15U, 0xB25959EBU, 0x8E4747C9U, 0xFBF0F00BU, 0x41ADADECU, 0xB3D4D467U, 0x5FA2A2FDU, 0x45AFAFEAU, 0x239C9CBFU, 0x53A4A4F7U, 0xE4727296U, 0x9BC0C05BU,
                                   0x75B7B7C2U, 0xE1FDFD1CU, 0x3D9393AEU, 0x4C26266AU, 0x6C36365AU, 0x7E3F3F41U, 0xF5F7F702U, 0x83CCCC4FU, 0x6834345CU, 0x51A5A5F4U, 0xD1E5E534U, 0xF9F1F108U, 0xE2717193U, 0xABD8D873U, 0x62313153U, 0x2A15153FU, 0x0804040CU, 0x95C7C752U, 0x46232365U, 0x9DC3C35EU, 0x30181828U, 0x379696A1U, 0x0A05050FU, 0x2F9A9AB5U, 0x0E070709U, 0x24121236U, 0x1B80809BU, 0xDFE2E23DU, 0xCDEBEB26U, 0x4E272769U, 0x7FB2B2CDU, 0xEA75759FU,
                                   0x1209091BU, 0x1D83839EU, 0x582C2C74U, 0x341A1A2EU, 0x361B1B2DU, 0xDC6E6EB2U, 0xB45A5AEEU, 0x5BA0A0FBU, 0xA45252F6U, 0x763B3B4DU, 0xB7D6D661U, 0x7DB3B3CEU, 0x5229297BU, 0xDDE3E33EU, 0x5E2F2F71U, 0x13848497U, 0xA65353F5U, 0xB9D1D168U, 0x00000000U, 0xC1EDED2CU, 0x40202060U, 0xE3FCFC1FU, 0x79B1B1C8U, 0xB65B5BEDU, 0xD46A6ABEU, 0x8DCBCB46U, 0x67BEBED9U, 0x7239394BU, 0x944A4ADEU, 0x984C4CD4U, 0xB05858E8U, 0x85CFCF4AU,
                                   0xBBD0D06BU, 0xC5EFEF2AU, 0x4FAAAAE5U, 0xEDFBFB16U, 0x864343C5U, 0x9A4D4DD7U, 0x66333355U, 0x11858594U, 0x8A4545CFU, 0xE9F9F910U, 0x04020206U, 0xFE7F7F81U, 0xA05050F0U, 0x783C3C44U, 0x259F9FBAU, 0x4BA8A8E3U, 0xA25151F3U, 0x5DA3A3FEU, 0x804040C0U, 0x058F8F8AU, 0x3F9292ADU, 0x219D9DBCU, 0x70383848U, 0xF1F5F504U, 0x63BCBCDFU, 0x77B6B6C1U, 0xAFDADA75U, 0x42212163U, 0x20101030U, 0xE5FFFF1AU, 0xFDF3F30EU, 0xBFD2D26DU,
                                   0x81CDCD4CU, 0x180C0C14U, 0x26131335U, 0xC3ECEC2FU, 0xBE5F5FE1U, 0x359797A2U, 0x884444CCU, 0x2E171739U, 0x93C4C457U, 0x55A7A7F2U, 0xFC7E7E82U, 0x7A3D3D47U, 0xC86464ACU, 0xBA5D5DE7U, 0x3219192BU, 0xE6737395U, 0xC06060A0U, 0x19818198U, 0x9E4F4FD1U, 0xA3DCDC7FU, 0x44222266U, 0x542A2A7EU, 0x3B9090ABU, 0x0B888883U, 0x8C4646CAU, 0xC7EEEE29U, 0x6BB8B8D3U, 0x2814143CU, 0xA7DEDE79U, 0xBC5E5EE2U, 0x160B0B1DU, 0xADDBDB76U,
                                   0xDBE0E03BU, 0x64323256U, 0x743A3A4EU, 0x140A0A1EU, 0x924949DBU, 0x0C06060AU, 0x4824246CU, 0xB85C5CE4U, 0x9FC2C25DU, 0xBDD3D36EU, 0x43ACACEFU, 0xC46262A6U, 0x399191A8U, 0x319595A4U, 0xD3E4E437U, 0xF279798BU, 0xD5E7E732U, 0x8BC8C843U, 0x6E373759U, 0xDA6D6DB7U, 0x018D8D8CU, 0xB1D5D564U, 0x9C4E4ED2U, 0x49A9A9E0U, 0xD86C6CB4U, 0xAC5656FAU, 0xF3F4F407U, 0xCFEAEA25U, 0xCA6565AFU, 0xF47A7A8EU, 0x47AEAEE9U, 0x10080818U,
                                   0x6FBABAD5U, 0xF0787888U, 0x4A25256FU, 0x5C2E2E72U, 0x381C1C24U, 0x57A6A6F1U, 0x73B4B4C7U, 0x97C6C651U, 0xCBE8E823U, 0xA1DDDD7CU, 0xE874749CU, 0x3E1F1F21U, 0x964B4BDDU, 0x61BDBDDCU, 0x0D8B8B86U, 0x0F8A8A85U, 0xE0707090U, 0x7C3E3E42U, 0x71B5B5C4U, 0xCC6666AAU, 0x904848D8U, 0x06030305U, 0xF7F6F601U, 0x1C0E0E12U, 0xC26161A3U, 0x6A35355FU, 0xAE5757F9U, 0x69B9B9D0U, 0x17868691U, 0x99C1C158U, 0x3A1D1D27U, 0x279E9EB9U,
                                   0xD9E1E138U, 0xEBF8F813U, 0x2B9898B3U, 0x22111133U, 0xD26969BBU, 0xA9D9D970U, 0x078E8E89U, 0x339494A7U, 0x2D9B9BB6U, 0x3C1E1E22U, 0x15878792U, 0xC9E9E920U, 0x87CECE49U, 0xAA5555FFU, 0x50282878U, 0xA5DFDF7AU, 0x038C8C8FU, 0x59A1A1F8U, 0x09898980U, 0x1A0D0D17U, 0x65BFBFDAU, 0xD7E6E631U, 0x844242C6U, 0xD06868B8U, 0x824141C3U, 0x299999B0U, 0x5A2D2D77U, 0x1E0F0F11U, 0x7BB0B0CBU, 0xA85454FCU, 0x6DBBBBD6U, 0x2C16163AU};

__constant unsigned int Gb[256] = {0xA5C66363U, 0x84F87C7CU, 0x99EE7777U, 0x8DF67B7BU, 0x0DFFF2F2U, 0xBDD66B6BU, 0xB1DE6F6FU, 0x5491C5C5U, 0x50603030U, 0x03020101U, 0xA9CE6767U, 0x7D562B2BU, 0x19E7FEFEU, 0x62B5D7D7U, 0xE64DABABU, 0x9AEC7676U, 0x458FCACAU, 0x9D1F8282U, 0x4089C9C9U, 0x87FA7D7DU, 0x15EFFAFAU, 0xEBB25959U, 0xC98E4747U, 0x0BFBF0F0U, 0xEC41ADADU, 0x67B3D4D4U, 0xFD5FA2A2U, 0xEA45AFAFU, 0xBF239C9CU, 0xF753A4A4U, 0x96E47272U, 0x5B9BC0C0U,
                                   0xC275B7B7U, 0x1CE1FDFDU, 0xAE3D9393U, 0x6A4C2626U, 0x5A6C3636U, 0x417E3F3FU, 0x02F5F7F7U, 0x4F83CCCCU, 0x5C683434U, 0xF451A5A5U, 0x34D1E5E5U, 0x08F9F1F1U, 0x93E27171U, 0x73ABD8D8U, 0x53623131U, 0x3F2A1515U, 0x0C080404U, 0x5295C7C7U, 0x65462323U, 0x5E9DC3C3U, 0x28301818U, 0xA1379696U, 0x0F0A0505U, 0xB52F9A9AU, 0x090E0707U, 0x36241212U, 0x9B1B8080U, 0x3DDFE2E2U, 0x26CDEBEBU, 0x694E2727U, 0xCD7FB2B2U, 0x9FEA7575U,
                                   0x1B120909U, 0x9E1D8383U, 0x74582C2CU, 0x2E341A1AU, 0x2D361B1BU, 0xB2DC6E6EU, 0xEEB45A5AU, 0xFB5BA0A0U, 0xF6A45252U, 0x4D763B3BU, 0x61B7D6D6U, 0xCE7DB3B3U, 0x7B522929U, 0x3EDDE3E3U, 0x715E2F2FU, 0x97138484U, 0xF5A65353U, 0x68B9D1D1U, 0x00000000U, 0x2CC1EDEDU, 0x60402020U, 0x1FE3FCFCU, 0xC879B1B1U, 0xEDB65B5BU, 0xBED46A6AU, 0x468DCBCBU, 0xD967BEBEU, 0x4B723939U, 0xDE944A4AU, 0xD4984C4CU, 0xE8B05858U, 0x4A85CFCFU,
                                   0x6BBBD0D0U, 0x2AC5EFEFU, 0xE54FAAAAU, 0x16EDFBFBU, 0xC5864343U, 0xD79A4D4DU, 0x55663333U, 0x94118585U, 0xCF8A4545U, 0x10E9F9F9U, 0x06040202U, 0x81FE7F7FU, 0xF0A05050U, 0x44783C3CU, 0xBA259F9FU, 0xE34BA8A8U, 0xF3A25151U, 0xFE5DA3A3U, 0xC0804040U, 0x8A058F8FU, 0xAD3F9292U, 0xBC219D9DU, 0x48703838U, 0x04F1F5F5U, 0xDF63BCBCU, 0xC177B6B6U, 0x75AFDADAU, 0x63422121U, 0x30201010U, 0x1AE5FFFFU, 0x0EFDF3F3U, 0x6DBFD2D2U,
                                   0x4C81CDCDU, 0x14180C0CU, 0x35261313U, 0x2FC3ECECU, 0xE1BE5F5FU, 0xA2359797U, 0xCC884444U, 0x392E1717U, 0x5793C4C4U, 0xF255A7A7U, 0x82FC7E7EU, 0x477A3D3DU, 0xACC86464U, 0xE7BA5D5DU, 0x2B321919U, 0x95E67373U, 0xA0C06060U, 0x98198181U, 0xD19E4F4FU, 0x7FA3DCDCU, 0x66442222U, 0x7E542A2AU, 0xAB3B9090U, 0x830B8888U, 0xCA8C4646U, 0x29C7EEEEU, 0xD36BB8B8U, 0x3C281414U, 0x79A7DEDEU, 0xE2BC5E5EU, 0x1D160B0BU, 0x76ADDBDBU,
                                   0x3BDBE0E0U, 0x56643232U, 0x4E743A3AU, 0x1E140A0AU, 0xDB924949U, 0x0A0C0606U, 0x6C482424U, 0xE4B85C5CU, 0x5D9FC2C2U, 0x6EBDD3D3U, 0xEF43ACACU, 0xA6C46262U, 0xA8399191U, 0xA4319595U, 0x37D3E4E4U, 0x8BF27979U, 0x32D5E7E7U, 0x438BC8C8U, 0x596E3737U, 0xB7DA6D6DU, 0x8C018D8DU, 0x64B1D5D5U, 0xD29C4E4EU, 0xE049A9A9U, 0xB4D86C6CU, 0xFAAC5656U, 0x07F3F4F4U, 0x25CFEAEAU, 0xAFCA6565U, 0x8EF47A7AU, 0xE947AEAEU, 0x18100808U,
                                   0xD56FBABAU, 0x88F07878U, 0x6F4A2525U, 0x725C2E2EU, 0x24381C1CU, 0xF157A6A6U, 0xC773B4B4U, 0x5197C6C6U, 0x23CBE8E8U, 0x7CA1DDDDU, 0x9CE87474U, 0x213E1F1FU, 0xDD964B4BU, 0xDC61BDBDU, 0x860D8B8BU, 0x850F8A8AU, 0x90E07070U, 0x427C3E3EU, 0xC471B5B5U, 0xAACC6666U, 0xD8904848U, 0x05060303U, 0x01F7F6F6U, 0x121C0E0EU, 0xA3C26161U, 0x5F6A3535U, 0xF9AE5757U, 0xD069B9B9U, 0x91178686U, 0x5899C1C1U, 0x273A1D1DU, 0xB9279E9EU,
                                   0x38D9E1E1U, 0x13EBF8F8U, 0xB32B9898U, 0x33221111U, 0xBBD26969U, 0x70A9D9D9U, 0x89078E8EU, 0xA7339494U, 0xB62D9B9BU, 0x223C1E1EU, 0x92158787U, 0x20C9E9E9U, 0x4987CECEU, 0xFFAA5555U, 0x78502828U, 0x7AA5DFDFU, 0x8F038C8CU, 0xF859A1A1U, 0x80098989U, 0x171A0D0DU, 0xDA65BFBFU, 0x31D7E6E6U, 0xC6844242U, 0xB8D06868U, 0xC3824141U, 0xB0299999U, 0x775A2D2DU, 0x111E0F0FU, 0xCB7BB0B0U, 0xFCA85454U, 0xD66DBBBBU, 0x3A2C1616U};

__constant unsigned int Gc[256] = {0x63A5C663U, 0x7C84F87CU, 0x7799EE77U, 0x7B8DF67BU, 0xF20DFFF2U, 0x6BBDD66BU, 0x6FB1DE6FU, 0xC55491C5U, 0x30506030U, 0x01030201U, 0x67A9CE67U, 0x2B7D562BU, 0xFE19E7FEU, 0xD762B5D7U, 0xABE64DABU, 0x769AEC76U, 0xCA458FCAU, 0x829D1F82U, 0xC94089C9U, 0x7D87FA7DU, 0xFA15EFFAU, 0x59EBB259U, 0x47C98E47U, 0xF00BFBF0U, 0xADEC41ADU, 0xD467B3D4U, 0xA2FD5FA2U, 0xAFEA45AFU, 0x9CBF239CU, 0xA4F753A4U, 0x7296E472U, 0xC05B9BC0U,
                                   0xB7C275B7U, 0xFD1CE1FDU, 0x93AE3D93U, 0x266A4C26U, 0x365A6C36U, 0x3F417E3FU, 0xF702F5F7U, 0xCC4F83CCU, 0x345C6834U, 0xA5F451A5U, 0xE534D1E5U, 0xF108F9F1U, 0x7193E271U, 0xD873ABD8U, 0x31536231U, 0x153F2A15U, 0x040C0804U, 0xC75295C7U, 0x23654623U, 0xC35E9DC3U, 0x18283018U, 0x96A13796U, 0x050F0A05U, 0x9AB52F9AU, 0x07090E07U, 0x12362412U, 0x809B1B80U, 0xE23DDFE2U, 0xEB26CDEBU, 0x27694E27U, 0xB2CD7FB2U, 0x759FEA75U,
                                   0x091B1209U, 0x839E1D83U, 0x2C74582CU, 0x1A2E341AU, 0x1B2D361BU, 0x6EB2DC6EU, 0x5AEEB45AU, 0xA0FB5BA0U, 0x52F6A452U, 0x3B4D763BU, 0xD661B7D6U, 0xB3CE7DB3U, 0x297B5229U, 0xE33EDDE3U, 0x2F715E2FU, 0x84971384U, 0x53F5A653U, 0xD168B9D1U, 0x00000000U, 0xED2CC1EDU, 0x20604020U, 0xFC1FE3FCU, 0xB1C879B1U, 0x5BEDB65BU, 0x6ABED46AU, 0xCB468DCBU, 0xBED967BEU, 0x394B7239U, 0x4ADE944AU, 0x4CD4984CU, 0x58E8B058U, 0xCF4A85CFU,
                                   0xD06BBBD0U, 0xEF2AC5EFU, 0xAAE54FAAU, 0xFB16EDFBU, 0x43C58643U, 0x4DD79A4DU, 0x33556633U, 0x85941185U, 0x45CF8A45U, 0xF910E9F9U, 0x02060402U, 0x7F81FE7FU, 0x50F0A050U, 0x3C44783CU, 0x9FBA259FU, 0xA8E34BA8U, 0x51F3A251U, 0xA3FE5DA3U, 0x40C08040U, 0x8F8A058FU, 0x92AD3F92U, 0x9DBC219DU, 0x38487038U, 0xF504F1F5U, 0xBCDF63BCU, 0xB6C177B6U, 0xDA75AFDAU, 0x21634221U, 0x10302010U, 0xFF1AE5FFU, 0xF30EFDF3U, 0xD26DBFD2U,
                                   0xCD4C81CDU, 0x0C14180CU, 0x13352613U, 0xEC2FC3ECU, 0x5FE1BE5FU, 0x97A23597U, 0x44CC8844U, 0x17392E17U, 0xC45793C4U, 0xA7F255A7U, 0x7E82FC7EU, 0x3D477A3DU, 0x64ACC864U, 0x5DE7BA5DU, 0x192B3219U, 0x7395E673U, 0x60A0C060U, 0x81981981U, 0x4FD19E4FU, 0xDC7FA3DCU, 0x22664422U, 0x2A7E542AU, 0x90AB3B90U, 0x88830B88U, 0x46CA8C46U, 0xEE29C7EEU, 0xB8D36BB8U, 0x143C2814U, 0xDE79A7DEU, 0x5EE2BC5EU, 0x0B1D160BU, 0xDB76ADDBU,
                                   0xE03BDBE0U, 0x32566432U, 0x3A4E743AU, 0x0A1E140AU, 0x49DB9249U, 0x060A0C06U, 0x246C4824U, 0x5CE4B85CU, 0xC25D9FC2U, 0xD36EBDD3U, 0xACEF43ACU, 0x62A6C462U, 0x91A83991U, 0x95A43195U, 0xE437D3E4U, 0x798BF279U, 0xE732D5E7U, 0xC8438BC8U, 0x37596E37U, 0x6DB7DA6DU, 0x8D8C018DU, 0xD564B1D5U, 0x4ED29C4EU, 0xA9E049A9U, 0x6CB4D86CU, 0x56FAAC56U, 0xF407F3F4U, 0xEA25CFEAU, 0x65AFCA65U, 0x7A8EF47AU, 0xAEE947AEU, 0x08181008U,
                                   0xBAD56FBAU, 0x7888F078U, 0x256F4A25U, 0x2E725C2EU, 0x1C24381CU, 0xA6F157A6U, 0xB4C773B4U, 0xC65197C6U, 0xE823CBE8U, 0xDD7CA1DDU, 0x749CE874U, 0x1F213E1FU, 0x4BDD964BU, 0xBDDC61BDU, 0x8B860D8BU, 0x8A850F8AU, 0x7090E070U, 0x3E427C3EU, 0xB5C471B5U, 0x66AACC66U, 0x48D89048U, 0x03050603U, 0xF601F7F6U, 0x0E121C0EU, 0x61A3C261U, 0x355F6A35U, 0x57F9AE57U, 0xB9D069B9U, 0x86911786U, 0xC15899C1U, 0x1D273A1DU, 0x9EB9279EU,
                                   0xE138D9E1U, 0xF813EBF8U, 0x98B32B98U, 0x11332211U, 0x69BBD269U, 0xD970A9D9U, 0x8E89078EU, 0x94A73394U, 0x9BB62D9BU, 0x1E223C1EU, 0x87921587U, 0xE920C9E9U, 0xCE4987CEU, 0x55FFAA55U, 0x28785028U, 0xDF7AA5DFU, 0x8C8F038CU, 0xA1F859A1U, 0x89800989U, 0x0D171A0DU, 0xBFDA65BFU, 0xE631D7E6U, 0x42C68442U, 0x68B8D068U, 0x41C38241U, 0x99B02999U, 0x2D775A2DU, 0x0F111E0FU, 0xB0CB7BB0U, 0x54FCA854U, 0xBBD66DBBU, 0x163A2C16U};

__constant unsigned int Gd[256] = {0x6363A5C6U, 0x7C7C84F8U, 0x777799EEU, 0x7B7B8DF6U, 0xF2F20DFFU, 0x6B6BBDD6U, 0x6F6FB1DEU, 0xC5C55491U, 0x30305060U, 0x01010302U, 0x6767A9CEU, 0x2B2B7D56U, 0xFEFE19E7U, 0xD7D762B5U, 0xABABE64DU, 0x76769AECU, 0xCACA458FU, 0x82829D1FU, 0xC9C94089U, 0x7D7D87FAU, 0xFAFA15EFU, 0x5959EBB2U, 0x4747C98EU, 0xF0F00BFBU, 0xADADEC41U, 0xD4D467B3U, 0xA2A2FD5FU, 0xAFAFEA45U, 0x9C9CBF23U, 0xA4A4F753U, 0x727296E4U, 0xC0C05B9BU,
                                   0xB7B7C275U, 0xFDFD1CE1U, 0x9393AE3DU, 0x26266A4CU, 0x36365A6CU, 0x3F3F417EU, 0xF7F702F5U, 0xCCCC4F83U, 0x34345C68U, 0xA5A5F451U, 0xE5E534D1U, 0xF1F108F9U, 0x717193E2U, 0xD8D873ABU, 0x31315362U, 0x15153F2AU, 0x04040C08U, 0xC7C75295U, 0x23236546U, 0xC3C35E9DU, 0x18182830U, 0x9696A137U, 0x05050F0AU, 0x9A9AB52FU, 0x0707090EU, 0x12123624U, 0x80809B1BU, 0xE2E23DDFU, 0xEBEB26CDU, 0x2727694EU, 0xB2B2CD7FU, 0x75759FEAU,
                                   0x09091B12U, 0x83839E1DU, 0x2C2C7458U, 0x1A1A2E34U, 0x1B1B2D36U, 0x6E6EB2DCU, 0x5A5AEEB4U, 0xA0A0FB5BU, 0x5252F6A4U, 0x3B3B4D76U, 0xD6D661B7U, 0xB3B3CE7DU, 0x29297B52U, 0xE3E33EDDU, 0x2F2F715EU, 0x84849713U, 0x5353F5A6U, 0xD1D168B9U, 0x00000000U, 0xEDED2CC1U, 0x20206040U, 0xFCFC1FE3U, 0xB1B1C879U, 0x5B5BEDB6U, 0x6A6ABED4U, 0xCBCB468DU, 0xBEBED967U, 0x39394B72U, 0x4A4ADE94U, 0x4C4CD498U, 0x5858E8B0U, 0xCFCF4A85U,
                                   0xD0D06BBBU, 0xEFEF2AC5U, 0xAAAAE54FU, 0xFBFB16EDU, 0x4343C586U, 0x4D4DD79AU, 0x33335566U, 0x85859411U, 0x4545CF8AU, 0xF9F910E9U, 0x02020604U, 0x7F7F81FEU, 0x5050F0A0U, 0x3C3C4478U, 0x9F9FBA25U, 0xA8A8E34BU, 0x5151F3A2U, 0xA3A3FE5DU, 0x4040C080U, 0x8F8F8A05U, 0x9292AD3FU, 0x9D9DBC21U, 0x38384870U, 0xF5F504F1U, 0xBCBCDF63U, 0xB6B6C177U, 0xDADA75AFU, 0x21216342U, 0x10103020U, 0xFFFF1AE5U, 0xF3F30EFDU, 0xD2D26DBFU,
                                   0xCDCD4C81U, 0x0C0C1418U, 0x13133526U, 0xECEC2FC3U, 0x5F5FE1BEU, 0x9797A235U, 0x4444CC88U, 0x1717392EU, 0xC4C45793U, 0xA7A7F255U, 0x7E7E82FCU, 0x3D3D477AU, 0x6464ACC8U, 0x5D5DE7BAU, 0x19192B32U, 0x737395E6U, 0x6060A0C0U, 0x81819819U, 0x4F4FD19EU, 0xDCDC7FA3U, 0x22226644U, 0x2A2A7E54U, 0x9090AB3BU, 0x8888830BU, 0x4646CA8CU, 0xEEEE29C7U, 0xB8B8D36BU, 0x14143C28U, 0xDEDE79A7U, 0x5E5EE2BCU, 0x0B0B1D16U, 0xDBDB76ADU,
                                   0xE0E03BDBU, 0x32325664U, 0x3A3A4E74U, 0x0A0A1E14U, 0x4949DB92U, 0x06060A0CU, 0x24246C48U, 0x5C5CE4B8U, 0xC2C25D9FU, 0xD3D36EBDU, 0xACACEF43U, 0x6262A6C4U, 0x9191A839U, 0x9595A431U, 0xE4E437D3U, 0x79798BF2U, 0xE7E732D5U, 0xC8C8438BU, 0x3737596EU, 0x6D6DB7DAU, 0x8D8D8C01U, 0xD5D564B1U, 0x4E4ED29CU, 0xA9A9E049U, 0x6C6CB4D8U, 0x5656FAACU, 0xF4F407F3U, 0xEAEA25CFU, 0x6565AFCAU, 0x7A7A8EF4U, 0xAEAEE947U, 0x08081810U,
                                   0xBABAD56FU, 0x787888F0U, 0x25256F4AU, 0x2E2E725CU, 0x1C1C2438U, 0xA6A6F157U, 0xB4B4C773U, 0xC6C65197U, 0xE8E823CBU, 0xDDDD7CA1U, 0x74749CE8U, 0x1F1F213EU, 0x4B4BDD96U, 0xBDBDDC61U, 0x8B8B860DU, 0x8A8A850FU, 0x707090E0U, 0x3E3E427CU, 0xB5B5C471U, 0x6666AACCU, 0x4848D890U, 0x03030506U, 0xF6F601F7U, 0x0E0E121CU, 0x6161A3C2U, 0x35355F6AU, 0x5757F9AEU, 0xB9B9D069U, 0x86869117U, 0xC1C15899U, 0x1D1D273AU, 0x9E9EB927U,
                                   0xE1E138D9U, 0xF8F813EBU, 0x9898B32BU, 0x11113322U, 0x6969BBD2U, 0xD9D970A9U, 0x8E8E8907U, 0x9494A733U, 0x9B9BB62DU, 0x1E1E223CU, 0x87879215U, 0xE9E920C9U, 0xCECE4987U, 0x5555FFAAU, 0x28287850U, 0xDFDF7AA5U, 0x8C8C8F03U, 0xA1A1F859U, 0x89898009U, 0x0D0D171AU, 0xBFBFDA65U, 0xE6E631D7U, 0x4242C684U, 0x6868B8D0U, 0x4141C382U, 0x9999B029U, 0x2D2D775AU, 0x0F0F111EU, 0xB0B0CB7BU, 0x5454FCA8U, 0xBBBBD66DU, 0x16163A2CU};
inline unsigned int B(unsigned int a, unsigned int b, unsigned int c) {
  return a ^ b ^ c;
}

inline unsigned int C(unsigned int a, unsigned int b, unsigned int c) {
  return (a ^ (b & (c ^ a)));
}

inline unsigned int D(unsigned int a, unsigned int b, unsigned int c) {
  return ((a & (b | c)) | (b & c));
}
__kernel void E(__global unsigned char* a, __global unsigned char* b, __global unsigned int* c) {
  unsigned long d = get_global_id(0);
  unsigned char e[64];
  int f, g;

  for (f = 0; f < 16; f++)
    e[f] = a[f];

  f += 8;

  for (g = 0; g < 40; f++, g++)
    e[f] = b[g];

  while (d < 0x100000) {
    e[16] = (unsigned char)(d >> (0 * 8));
    e[17] = (unsigned char)(d >> (1 * 8));
    e[18] = (unsigned char)(d >> (2 * 8));
    e[19] = (unsigned char)(d >> (3 * 8));
    e[20] = (unsigned char)(d >> (4 * 8));
    e[21] = (unsigned char)(d >> (5 * 8));
    e[22] = (unsigned char)(d >> (6 * 8));
    e[23] = (unsigned char)(d >> (7 * 8));

    c[(64 * d) + 0] = (unsigned int)e[0 * 4 + 0] << 24 | (unsigned int)e[0 * 4 + 1] << 16 | (unsigned int)e[0 * 4 + 2] << 8 | (unsigned int)e[0 * 4 + 3];
    c[(64 * d) + 1] = (unsigned int)e[1 * 4 + 0] << 24 | (unsigned int)e[1 * 4 + 1] << 16 | (unsigned int)e[1 * 4 + 2] << 8 | (unsigned int)e[1 * 4 + 3];
    c[(64 * d) + 2] = (unsigned int)e[2 * 4 + 0] << 24 | (unsigned int)e[2 * 4 + 1] << 16 | (unsigned int)e[2 * 4 + 2] << 8 | (unsigned int)e[2 * 4 + 3];
    c[(64 * d) + 3] = (unsigned int)e[3 * 4 + 0] << 24 | (unsigned int)e[3 * 4 + 1] << 16 | (unsigned int)e[3 * 4 + 2] << 8 | (unsigned int)e[3 * 4 + 3];
    c[(64 * d) + 4] = (unsigned int)e[4 * 4 + 0] << 24 | (unsigned int)e[4 * 4 + 1] << 16 | (unsigned int)e[4 * 4 + 2] << 8 | (unsigned int)e[4 * 4 + 3];
    c[(64 * d) + 5] = (unsigned int)e[5 * 4 + 0] << 24 | (unsigned int)e[5 * 4 + 1] << 16 | (unsigned int)e[5 * 4 + 2] << 8 | (unsigned int)e[5 * 4 + 3];
    c[(64 * d) + 6] = (unsigned int)e[6 * 4 + 0] << 24 | (unsigned int)e[6 * 4 + 1] << 16 | (unsigned int)e[6 * 4 + 2] << 8 | (unsigned int)e[6 * 4 + 3];
    c[(64 * d) + 7] = (unsigned int)e[7 * 4 + 0] << 24 | (unsigned int)e[7 * 4 + 1] << 16 | (unsigned int)e[7 * 4 + 2] << 8 | (unsigned int)e[7 * 4 + 3];
    c[(64 * d) + 8] = (unsigned int)e[8 * 4 + 0] << 24 | (unsigned int)e[8 * 4 + 1] << 16 | (unsigned int)e[8 * 4 + 2] << 8 | (unsigned int)e[8 * 4 + 3];
    c[(64 * d) + 9] = (unsigned int)e[9 * 4 + 0] << 24 | (unsigned int)e[9 * 4 + 1] << 16 | (unsigned int)e[9 * 4 + 2] << 8 | (unsigned int)e[9 * 4 + 3];
    c[(64 * d) + 10] = (unsigned int)e[10 * 4 + 0] << 24 | (unsigned int)e[10 * 4 + 1] << 16 | (unsigned int)e[10 * 4 + 2] << 8 | (unsigned int)e[10 * 4 + 3];
    c[(64 * d) + 11] = (unsigned int)e[11 * 4 + 0] << 24 | (unsigned int)e[11 * 4 + 1] << 16 | (unsigned int)e[11 * 4 + 2] << 8 | (unsigned int)e[11 * 4 + 3];
    c[(64 * d) + 12] = (unsigned int)e[12 * 4 + 0] << 24 | (unsigned int)e[12 * 4 + 1] << 16 | (unsigned int)e[12 * 4 + 2] << 8 | (unsigned int)e[12 * 4 + 3];
    c[(64 * d) + 13] = (unsigned int)e[13 * 4 + 0] << 24 | (unsigned int)e[13 * 4 + 1] << 16 | (unsigned int)e[13 * 4 + 2] << 8 | (unsigned int)e[13 * 4 + 3];
    c[(64 * d) + 14] = (unsigned int)e[14 * 4 + 0] << 24 | (unsigned int)e[14 * 4 + 1] << 16 | (unsigned int)e[14 * 4 + 2] << 8 | (unsigned int)e[14 * 4 + 3];
    c[(64 * d) + 15] = (unsigned int)e[15 * 4 + 0] << 24 | (unsigned int)e[15 * 4 + 1] << 16 | (unsigned int)e[15 * 4 + 2] << 8 | (unsigned int)e[15 * 4 + 3];
    c[(64 * d) + 16] = c[(64 * d) + 16 - 16] + c[(64 * d) + 16 - 7] + ((((c[(64 * d) + 16 - 15]) << (32 - (7))) | ((c[(64 * d) + 16 - 15]) >> (7))) ^ (((c[(64 * d) + 16 - 15]) << (32 - (18))) | ((c[(64 * d) + 16 - 15]) >> (18))) ^ (c[(64 * d) + 16 - 15] >> 3)) + ((((c[(64 * d) + 16 - 2]) << (32 - (17))) | ((c[(64 * d) + 16 - 2]) >> (17))) ^ (((c[(64 * d) + 16 - 2]) << (32 - (19))) | ((c[(64 * d) + 16 - 2]) >> (19))) ^ (c[(64 * d) + 16 - 2] >> 10));
    c[(64 * d) + 17] = c[(64 * d) + 17 - 16] + c[(64 * d) + 17 - 7] + ((((c[(64 * d) + 17 - 15]) << (32 - (7))) | ((c[(64 * d) + 17 - 15]) >> (7))) ^ (((c[(64 * d) + 17 - 15]) << (32 - (18))) | ((c[(64 * d) + 17 - 15]) >> (18))) ^ (c[(64 * d) + 17 - 15] >> 3)) + ((((c[(64 * d) + 17 - 2]) << (32 - (17))) | ((c[(64 * d) + 17 - 2]) >> (17))) ^ (((c[(64 * d) + 17 - 2]) << (32 - (19))) | ((c[(64 * d) + 17 - 2]) >> (19))) ^ (c[(64 * d) + 17 - 2] >> 10));
    c[(64 * d) + 18] = c[(64 * d) + 18 - 16] + c[(64 * d) + 18 - 7] + ((((c[(64 * d) + 18 - 15]) << (32 - (7))) | ((c[(64 * d) + 18 - 15]) >> (7))) ^ (((c[(64 * d) + 18 - 15]) << (32 - (18))) | ((c[(64 * d) + 18 - 15]) >> (18))) ^ (c[(64 * d) + 18 - 15] >> 3)) + ((((c[(64 * d) + 18 - 2]) << (32 - (17))) | ((c[(64 * d) + 18 - 2]) >> (17))) ^ (((c[(64 * d) + 18 - 2]) << (32 - (19))) | ((c[(64 * d) + 18 - 2]) >> (19))) ^ (c[(64 * d) + 18 - 2] >> 10));
    c[(64 * d) + 19] = c[(64 * d) + 19 - 16] + c[(64 * d) + 19 - 7] + ((((c[(64 * d) + 19 - 15]) << (32 - (7))) | ((c[(64 * d) + 19 - 15]) >> (7))) ^ (((c[(64 * d) + 19 - 15]) << (32 - (18))) | ((c[(64 * d) + 19 - 15]) >> (18))) ^ (c[(64 * d) + 19 - 15] >> 3)) + ((((c[(64 * d) + 19 - 2]) << (32 - (17))) | ((c[(64 * d) + 19 - 2]) >> (17))) ^ (((c[(64 * d) + 19 - 2]) << (32 - (19))) | ((c[(64 * d) + 19 - 2]) >> (19))) ^ (c[(64 * d) + 19 - 2] >> 10));
    c[(64 * d) + 20] = c[(64 * d) + 20 - 16] + c[(64 * d) + 20 - 7] + ((((c[(64 * d) + 20 - 15]) << (32 - (7))) | ((c[(64 * d) + 20 - 15]) >> (7))) ^ (((c[(64 * d) + 20 - 15]) << (32 - (18))) | ((c[(64 * d) + 20 - 15]) >> (18))) ^ (c[(64 * d) + 20 - 15] >> 3)) + ((((c[(64 * d) + 20 - 2]) << (32 - (17))) | ((c[(64 * d) + 20 - 2]) >> (17))) ^ (((c[(64 * d) + 20 - 2]) << (32 - (19))) | ((c[(64 * d) + 20 - 2]) >> (19))) ^ (c[(64 * d) + 20 - 2] >> 10));
    c[(64 * d) + 21] = c[(64 * d) + 21 - 16] + c[(64 * d) + 21 - 7] + ((((c[(64 * d) + 21 - 15]) << (32 - (7))) | ((c[(64 * d) + 21 - 15]) >> (7))) ^ (((c[(64 * d) + 21 - 15]) << (32 - (18))) | ((c[(64 * d) + 21 - 15]) >> (18))) ^ (c[(64 * d) + 21 - 15] >> 3)) + ((((c[(64 * d) + 21 - 2]) << (32 - (17))) | ((c[(64 * d) + 21 - 2]) >> (17))) ^ (((c[(64 * d) + 21 - 2]) << (32 - (19))) | ((c[(64 * d) + 21 - 2]) >> (19))) ^ (c[(64 * d) + 21 - 2] >> 10));
    c[(64 * d) + 22] = c[(64 * d) + 22 - 16] + c[(64 * d) + 22 - 7] + ((((c[(64 * d) + 22 - 15]) << (32 - (7))) | ((c[(64 * d) + 22 - 15]) >> (7))) ^ (((c[(64 * d) + 22 - 15]) << (32 - (18))) | ((c[(64 * d) + 22 - 15]) >> (18))) ^ (c[(64 * d) + 22 - 15] >> 3)) + ((((c[(64 * d) + 22 - 2]) << (32 - (17))) | ((c[(64 * d) + 22 - 2]) >> (17))) ^ (((c[(64 * d) + 22 - 2]) << (32 - (19))) | ((c[(64 * d) + 22 - 2]) >> (19))) ^ (c[(64 * d) + 22 - 2] >> 10));
    c[(64 * d) + 23] = c[(64 * d) + 23 - 16] + c[(64 * d) + 23 - 7] + ((((c[(64 * d) + 23 - 15]) << (32 - (7))) | ((c[(64 * d) + 23 - 15]) >> (7))) ^ (((c[(64 * d) + 23 - 15]) << (32 - (18))) | ((c[(64 * d) + 23 - 15]) >> (18))) ^ (c[(64 * d) + 23 - 15] >> 3)) + ((((c[(64 * d) + 23 - 2]) << (32 - (17))) | ((c[(64 * d) + 23 - 2]) >> (17))) ^ (((c[(64 * d) + 23 - 2]) << (32 - (19))) | ((c[(64 * d) + 23 - 2]) >> (19))) ^ (c[(64 * d) + 23 - 2] >> 10));
    c[(64 * d) + 24] = c[(64 * d) + 24 - 16] + c[(64 * d) + 24 - 7] + ((((c[(64 * d) + 24 - 15]) << (32 - (7))) | ((c[(64 * d) + 24 - 15]) >> (7))) ^ (((c[(64 * d) + 24 - 15]) << (32 - (18))) | ((c[(64 * d) + 24 - 15]) >> (18))) ^ (c[(64 * d) + 24 - 15] >> 3)) + ((((c[(64 * d) + 24 - 2]) << (32 - (17))) | ((c[(64 * d) + 24 - 2]) >> (17))) ^ (((c[(64 * d) + 24 - 2]) << (32 - (19))) | ((c[(64 * d) + 24 - 2]) >> (19))) ^ (c[(64 * d) + 24 - 2] >> 10));
    c[(64 * d) + 25] = c[(64 * d) + 25 - 16] + c[(64 * d) + 25 - 7] + ((((c[(64 * d) + 25 - 15]) << (32 - (7))) | ((c[(64 * d) + 25 - 15]) >> (7))) ^ (((c[(64 * d) + 25 - 15]) << (32 - (18))) | ((c[(64 * d) + 25 - 15]) >> (18))) ^ (c[(64 * d) + 25 - 15] >> 3)) + ((((c[(64 * d) + 25 - 2]) << (32 - (17))) | ((c[(64 * d) + 25 - 2]) >> (17))) ^ (((c[(64 * d) + 25 - 2]) << (32 - (19))) | ((c[(64 * d) + 25 - 2]) >> (19))) ^ (c[(64 * d) + 25 - 2] >> 10));
    c[(64 * d) + 26] = c[(64 * d) + 26 - 16] + c[(64 * d) + 26 - 7] + ((((c[(64 * d) + 26 - 15]) << (32 - (7))) | ((c[(64 * d) + 26 - 15]) >> (7))) ^ (((c[(64 * d) + 26 - 15]) << (32 - (18))) | ((c[(64 * d) + 26 - 15]) >> (18))) ^ (c[(64 * d) + 26 - 15] >> 3)) + ((((c[(64 * d) + 26 - 2]) << (32 - (17))) | ((c[(64 * d) + 26 - 2]) >> (17))) ^ (((c[(64 * d) + 26 - 2]) << (32 - (19))) | ((c[(64 * d) + 26 - 2]) >> (19))) ^ (c[(64 * d) + 26 - 2] >> 10));
    c[(64 * d) + 27] = c[(64 * d) + 27 - 16] + c[(64 * d) + 27 - 7] + ((((c[(64 * d) + 27 - 15]) << (32 - (7))) | ((c[(64 * d) + 27 - 15]) >> (7))) ^ (((c[(64 * d) + 27 - 15]) << (32 - (18))) | ((c[(64 * d) + 27 - 15]) >> (18))) ^ (c[(64 * d) + 27 - 15] >> 3)) + ((((c[(64 * d) + 27 - 2]) << (32 - (17))) | ((c[(64 * d) + 27 - 2]) >> (17))) ^ (((c[(64 * d) + 27 - 2]) << (32 - (19))) | ((c[(64 * d) + 27 - 2]) >> (19))) ^ (c[(64 * d) + 27 - 2] >> 10));
    c[(64 * d) + 28] = c[(64 * d) + 28 - 16] + c[(64 * d) + 28 - 7] + ((((c[(64 * d) + 28 - 15]) << (32 - (7))) | ((c[(64 * d) + 28 - 15]) >> (7))) ^ (((c[(64 * d) + 28 - 15]) << (32 - (18))) | ((c[(64 * d) + 28 - 15]) >> (18))) ^ (c[(64 * d) + 28 - 15] >> 3)) + ((((c[(64 * d) + 28 - 2]) << (32 - (17))) | ((c[(64 * d) + 28 - 2]) >> (17))) ^ (((c[(64 * d) + 28 - 2]) << (32 - (19))) | ((c[(64 * d) + 28 - 2]) >> (19))) ^ (c[(64 * d) + 28 - 2] >> 10));
    c[(64 * d) + 29] = c[(64 * d) + 29 - 16] + c[(64 * d) + 29 - 7] + ((((c[(64 * d) + 29 - 15]) << (32 - (7))) | ((c[(64 * d) + 29 - 15]) >> (7))) ^ (((c[(64 * d) + 29 - 15]) << (32 - (18))) | ((c[(64 * d) + 29 - 15]) >> (18))) ^ (c[(64 * d) + 29 - 15] >> 3)) + ((((c[(64 * d) + 29 - 2]) << (32 - (17))) | ((c[(64 * d) + 29 - 2]) >> (17))) ^ (((c[(64 * d) + 29 - 2]) << (32 - (19))) | ((c[(64 * d) + 29 - 2]) >> (19))) ^ (c[(64 * d) + 29 - 2] >> 10));
    c[(64 * d) + 30] = c[(64 * d) + 30 - 16] + c[(64 * d) + 30 - 7] + ((((c[(64 * d) + 30 - 15]) << (32 - (7))) | ((c[(64 * d) + 30 - 15]) >> (7))) ^ (((c[(64 * d) + 30 - 15]) << (32 - (18))) | ((c[(64 * d) + 30 - 15]) >> (18))) ^ (c[(64 * d) + 30 - 15] >> 3)) + ((((c[(64 * d) + 30 - 2]) << (32 - (17))) | ((c[(64 * d) + 30 - 2]) >> (17))) ^ (((c[(64 * d) + 30 - 2]) << (32 - (19))) | ((c[(64 * d) + 30 - 2]) >> (19))) ^ (c[(64 * d) + 30 - 2] >> 10));
    c[(64 * d) + 31] = c[(64 * d) + 31 - 16] + c[(64 * d) + 31 - 7] + ((((c[(64 * d) + 31 - 15]) << (32 - (7))) | ((c[(64 * d) + 31 - 15]) >> (7))) ^ (((c[(64 * d) + 31 - 15]) << (32 - (18))) | ((c[(64 * d) + 31 - 15]) >> (18))) ^ (c[(64 * d) + 31 - 15] >> 3)) + ((((c[(64 * d) + 31 - 2]) << (32 - (17))) | ((c[(64 * d) + 31 - 2]) >> (17))) ^ (((c[(64 * d) + 31 - 2]) << (32 - (19))) | ((c[(64 * d) + 31 - 2]) >> (19))) ^ (c[(64 * d) + 31 - 2] >> 10));
    c[(64 * d) + 32] = c[(64 * d) + 32 - 16] + c[(64 * d) + 32 - 7] + ((((c[(64 * d) + 32 - 15]) << (32 - (7))) | ((c[(64 * d) + 32 - 15]) >> (7))) ^ (((c[(64 * d) + 32 - 15]) << (32 - (18))) | ((c[(64 * d) + 32 - 15]) >> (18))) ^ (c[(64 * d) + 32 - 15] >> 3)) + ((((c[(64 * d) + 32 - 2]) << (32 - (17))) | ((c[(64 * d) + 32 - 2]) >> (17))) ^ (((c[(64 * d) + 32 - 2]) << (32 - (19))) | ((c[(64 * d) + 32 - 2]) >> (19))) ^ (c[(64 * d) + 32 - 2] >> 10));
    c[(64 * d) + 33] = c[(64 * d) + 33 - 16] + c[(64 * d) + 33 - 7] + ((((c[(64 * d) + 33 - 15]) << (32 - (7))) | ((c[(64 * d) + 33 - 15]) >> (7))) ^ (((c[(64 * d) + 33 - 15]) << (32 - (18))) | ((c[(64 * d) + 33 - 15]) >> (18))) ^ (c[(64 * d) + 33 - 15] >> 3)) + ((((c[(64 * d) + 33 - 2]) << (32 - (17))) | ((c[(64 * d) + 33 - 2]) >> (17))) ^ (((c[(64 * d) + 33 - 2]) << (32 - (19))) | ((c[(64 * d) + 33 - 2]) >> (19))) ^ (c[(64 * d) + 33 - 2] >> 10));
    c[(64 * d) + 34] = c[(64 * d) + 34 - 16] + c[(64 * d) + 34 - 7] + ((((c[(64 * d) + 34 - 15]) << (32 - (7))) | ((c[(64 * d) + 34 - 15]) >> (7))) ^ (((c[(64 * d) + 34 - 15]) << (32 - (18))) | ((c[(64 * d) + 34 - 15]) >> (18))) ^ (c[(64 * d) + 34 - 15] >> 3)) + ((((c[(64 * d) + 34 - 2]) << (32 - (17))) | ((c[(64 * d) + 34 - 2]) >> (17))) ^ (((c[(64 * d) + 34 - 2]) << (32 - (19))) | ((c[(64 * d) + 34 - 2]) >> (19))) ^ (c[(64 * d) + 34 - 2] >> 10));
    c[(64 * d) + 35] = c[(64 * d) + 35 - 16] + c[(64 * d) + 35 - 7] + ((((c[(64 * d) + 35 - 15]) << (32 - (7))) | ((c[(64 * d) + 35 - 15]) >> (7))) ^ (((c[(64 * d) + 35 - 15]) << (32 - (18))) | ((c[(64 * d) + 35 - 15]) >> (18))) ^ (c[(64 * d) + 35 - 15] >> 3)) + ((((c[(64 * d) + 35 - 2]) << (32 - (17))) | ((c[(64 * d) + 35 - 2]) >> (17))) ^ (((c[(64 * d) + 35 - 2]) << (32 - (19))) | ((c[(64 * d) + 35 - 2]) >> (19))) ^ (c[(64 * d) + 35 - 2] >> 10));
    c[(64 * d) + 36] = c[(64 * d) + 36 - 16] + c[(64 * d) + 36 - 7] + ((((c[(64 * d) + 36 - 15]) << (32 - (7))) | ((c[(64 * d) + 36 - 15]) >> (7))) ^ (((c[(64 * d) + 36 - 15]) << (32 - (18))) | ((c[(64 * d) + 36 - 15]) >> (18))) ^ (c[(64 * d) + 36 - 15] >> 3)) + ((((c[(64 * d) + 36 - 2]) << (32 - (17))) | ((c[(64 * d) + 36 - 2]) >> (17))) ^ (((c[(64 * d) + 36 - 2]) << (32 - (19))) | ((c[(64 * d) + 36 - 2]) >> (19))) ^ (c[(64 * d) + 36 - 2] >> 10));
    c[(64 * d) + 37] = c[(64 * d) + 37 - 16] + c[(64 * d) + 37 - 7] + ((((c[(64 * d) + 37 - 15]) << (32 - (7))) | ((c[(64 * d) + 37 - 15]) >> (7))) ^ (((c[(64 * d) + 37 - 15]) << (32 - (18))) | ((c[(64 * d) + 37 - 15]) >> (18))) ^ (c[(64 * d) + 37 - 15] >> 3)) + ((((c[(64 * d) + 37 - 2]) << (32 - (17))) | ((c[(64 * d) + 37 - 2]) >> (17))) ^ (((c[(64 * d) + 37 - 2]) << (32 - (19))) | ((c[(64 * d) + 37 - 2]) >> (19))) ^ (c[(64 * d) + 37 - 2] >> 10));
    c[(64 * d) + 38] = c[(64 * d) + 38 - 16] + c[(64 * d) + 38 - 7] + ((((c[(64 * d) + 38 - 15]) << (32 - (7))) | ((c[(64 * d) + 38 - 15]) >> (7))) ^ (((c[(64 * d) + 38 - 15]) << (32 - (18))) | ((c[(64 * d) + 38 - 15]) >> (18))) ^ (c[(64 * d) + 38 - 15] >> 3)) + ((((c[(64 * d) + 38 - 2]) << (32 - (17))) | ((c[(64 * d) + 38 - 2]) >> (17))) ^ (((c[(64 * d) + 38 - 2]) << (32 - (19))) | ((c[(64 * d) + 38 - 2]) >> (19))) ^ (c[(64 * d) + 38 - 2] >> 10));
    c[(64 * d) + 39] = c[(64 * d) + 39 - 16] + c[(64 * d) + 39 - 7] + ((((c[(64 * d) + 39 - 15]) << (32 - (7))) | ((c[(64 * d) + 39 - 15]) >> (7))) ^ (((c[(64 * d) + 39 - 15]) << (32 - (18))) | ((c[(64 * d) + 39 - 15]) >> (18))) ^ (c[(64 * d) + 39 - 15] >> 3)) + ((((c[(64 * d) + 39 - 2]) << (32 - (17))) | ((c[(64 * d) + 39 - 2]) >> (17))) ^ (((c[(64 * d) + 39 - 2]) << (32 - (19))) | ((c[(64 * d) + 39 - 2]) >> (19))) ^ (c[(64 * d) + 39 - 2] >> 10));
    c[(64 * d) + 40] = c[(64 * d) + 40 - 16] + c[(64 * d) + 40 - 7] + ((((c[(64 * d) + 40 - 15]) << (32 - (7))) | ((c[(64 * d) + 40 - 15]) >> (7))) ^ (((c[(64 * d) + 40 - 15]) << (32 - (18))) | ((c[(64 * d) + 40 - 15]) >> (18))) ^ (c[(64 * d) + 40 - 15] >> 3)) + ((((c[(64 * d) + 40 - 2]) << (32 - (17))) | ((c[(64 * d) + 40 - 2]) >> (17))) ^ (((c[(64 * d) + 40 - 2]) << (32 - (19))) | ((c[(64 * d) + 40 - 2]) >> (19))) ^ (c[(64 * d) + 40 - 2] >> 10));
    c[(64 * d) + 41] = c[(64 * d) + 41 - 16] + c[(64 * d) + 41 - 7] + ((((c[(64 * d) + 41 - 15]) << (32 - (7))) | ((c[(64 * d) + 41 - 15]) >> (7))) ^ (((c[(64 * d) + 41 - 15]) << (32 - (18))) | ((c[(64 * d) + 41 - 15]) >> (18))) ^ (c[(64 * d) + 41 - 15] >> 3)) + ((((c[(64 * d) + 41 - 2]) << (32 - (17))) | ((c[(64 * d) + 41 - 2]) >> (17))) ^ (((c[(64 * d) + 41 - 2]) << (32 - (19))) | ((c[(64 * d) + 41 - 2]) >> (19))) ^ (c[(64 * d) + 41 - 2] >> 10));
    c[(64 * d) + 42] = c[(64 * d) + 42 - 16] + c[(64 * d) + 42 - 7] + ((((c[(64 * d) + 42 - 15]) << (32 - (7))) | ((c[(64 * d) + 42 - 15]) >> (7))) ^ (((c[(64 * d) + 42 - 15]) << (32 - (18))) | ((c[(64 * d) + 42 - 15]) >> (18))) ^ (c[(64 * d) + 42 - 15] >> 3)) + ((((c[(64 * d) + 42 - 2]) << (32 - (17))) | ((c[(64 * d) + 42 - 2]) >> (17))) ^ (((c[(64 * d) + 42 - 2]) << (32 - (19))) | ((c[(64 * d) + 42 - 2]) >> (19))) ^ (c[(64 * d) + 42 - 2] >> 10));
    c[(64 * d) + 43] = c[(64 * d) + 43 - 16] + c[(64 * d) + 43 - 7] + ((((c[(64 * d) + 43 - 15]) << (32 - (7))) | ((c[(64 * d) + 43 - 15]) >> (7))) ^ (((c[(64 * d) + 43 - 15]) << (32 - (18))) | ((c[(64 * d) + 43 - 15]) >> (18))) ^ (c[(64 * d) + 43 - 15] >> 3)) + ((((c[(64 * d) + 43 - 2]) << (32 - (17))) | ((c[(64 * d) + 43 - 2]) >> (17))) ^ (((c[(64 * d) + 43 - 2]) << (32 - (19))) | ((c[(64 * d) + 43 - 2]) >> (19))) ^ (c[(64 * d) + 43 - 2] >> 10));
    c[(64 * d) + 44] = c[(64 * d) + 44 - 16] + c[(64 * d) + 44 - 7] + ((((c[(64 * d) + 44 - 15]) << (32 - (7))) | ((c[(64 * d) + 44 - 15]) >> (7))) ^ (((c[(64 * d) + 44 - 15]) << (32 - (18))) | ((c[(64 * d) + 44 - 15]) >> (18))) ^ (c[(64 * d) + 44 - 15] >> 3)) + ((((c[(64 * d) + 44 - 2]) << (32 - (17))) | ((c[(64 * d) + 44 - 2]) >> (17))) ^ (((c[(64 * d) + 44 - 2]) << (32 - (19))) | ((c[(64 * d) + 44 - 2]) >> (19))) ^ (c[(64 * d) + 44 - 2] >> 10));
    c[(64 * d) + 45] = c[(64 * d) + 45 - 16] + c[(64 * d) + 45 - 7] + ((((c[(64 * d) + 45 - 15]) << (32 - (7))) | ((c[(64 * d) + 45 - 15]) >> (7))) ^ (((c[(64 * d) + 45 - 15]) << (32 - (18))) | ((c[(64 * d) + 45 - 15]) >> (18))) ^ (c[(64 * d) + 45 - 15] >> 3)) + ((((c[(64 * d) + 45 - 2]) << (32 - (17))) | ((c[(64 * d) + 45 - 2]) >> (17))) ^ (((c[(64 * d) + 45 - 2]) << (32 - (19))) | ((c[(64 * d) + 45 - 2]) >> (19))) ^ (c[(64 * d) + 45 - 2] >> 10));
    c[(64 * d) + 46] = c[(64 * d) + 46 - 16] + c[(64 * d) + 46 - 7] + ((((c[(64 * d) + 46 - 15]) << (32 - (7))) | ((c[(64 * d) + 46 - 15]) >> (7))) ^ (((c[(64 * d) + 46 - 15]) << (32 - (18))) | ((c[(64 * d) + 46 - 15]) >> (18))) ^ (c[(64 * d) + 46 - 15] >> 3)) + ((((c[(64 * d) + 46 - 2]) << (32 - (17))) | ((c[(64 * d) + 46 - 2]) >> (17))) ^ (((c[(64 * d) + 46 - 2]) << (32 - (19))) | ((c[(64 * d) + 46 - 2]) >> (19))) ^ (c[(64 * d) + 46 - 2] >> 10));
    c[(64 * d) + 47] = c[(64 * d) + 47 - 16] + c[(64 * d) + 47 - 7] + ((((c[(64 * d) + 47 - 15]) << (32 - (7))) | ((c[(64 * d) + 47 - 15]) >> (7))) ^ (((c[(64 * d) + 47 - 15]) << (32 - (18))) | ((c[(64 * d) + 47 - 15]) >> (18))) ^ (c[(64 * d) + 47 - 15] >> 3)) + ((((c[(64 * d) + 47 - 2]) << (32 - (17))) | ((c[(64 * d) + 47 - 2]) >> (17))) ^ (((c[(64 * d) + 47 - 2]) << (32 - (19))) | ((c[(64 * d) + 47 - 2]) >> (19))) ^ (c[(64 * d) + 47 - 2] >> 10));
    c[(64 * d) + 48] = c[(64 * d) + 48 - 16] + c[(64 * d) + 48 - 7] + ((((c[(64 * d) + 48 - 15]) << (32 - (7))) | ((c[(64 * d) + 48 - 15]) >> (7))) ^ (((c[(64 * d) + 48 - 15]) << (32 - (18))) | ((c[(64 * d) + 48 - 15]) >> (18))) ^ (c[(64 * d) + 48 - 15] >> 3)) + ((((c[(64 * d) + 48 - 2]) << (32 - (17))) | ((c[(64 * d) + 48 - 2]) >> (17))) ^ (((c[(64 * d) + 48 - 2]) << (32 - (19))) | ((c[(64 * d) + 48 - 2]) >> (19))) ^ (c[(64 * d) + 48 - 2] >> 10));
    c[(64 * d) + 49] = c[(64 * d) + 49 - 16] + c[(64 * d) + 49 - 7] + ((((c[(64 * d) + 49 - 15]) << (32 - (7))) | ((c[(64 * d) + 49 - 15]) >> (7))) ^ (((c[(64 * d) + 49 - 15]) << (32 - (18))) | ((c[(64 * d) + 49 - 15]) >> (18))) ^ (c[(64 * d) + 49 - 15] >> 3)) + ((((c[(64 * d) + 49 - 2]) << (32 - (17))) | ((c[(64 * d) + 49 - 2]) >> (17))) ^ (((c[(64 * d) + 49 - 2]) << (32 - (19))) | ((c[(64 * d) + 49 - 2]) >> (19))) ^ (c[(64 * d) + 49 - 2] >> 10));
    c[(64 * d) + 50] = c[(64 * d) + 50 - 16] + c[(64 * d) + 50 - 7] + ((((c[(64 * d) + 50 - 15]) << (32 - (7))) | ((c[(64 * d) + 50 - 15]) >> (7))) ^ (((c[(64 * d) + 50 - 15]) << (32 - (18))) | ((c[(64 * d) + 50 - 15]) >> (18))) ^ (c[(64 * d) + 50 - 15] >> 3)) + ((((c[(64 * d) + 50 - 2]) << (32 - (17))) | ((c[(64 * d) + 50 - 2]) >> (17))) ^ (((c[(64 * d) + 50 - 2]) << (32 - (19))) | ((c[(64 * d) + 50 - 2]) >> (19))) ^ (c[(64 * d) + 50 - 2] >> 10));
    c[(64 * d) + 51] = c[(64 * d) + 51 - 16] + c[(64 * d) + 51 - 7] + ((((c[(64 * d) + 51 - 15]) << (32 - (7))) | ((c[(64 * d) + 51 - 15]) >> (7))) ^ (((c[(64 * d) + 51 - 15]) << (32 - (18))) | ((c[(64 * d) + 51 - 15]) >> (18))) ^ (c[(64 * d) + 51 - 15] >> 3)) + ((((c[(64 * d) + 51 - 2]) << (32 - (17))) | ((c[(64 * d) + 51 - 2]) >> (17))) ^ (((c[(64 * d) + 51 - 2]) << (32 - (19))) | ((c[(64 * d) + 51 - 2]) >> (19))) ^ (c[(64 * d) + 51 - 2] >> 10));
    c[(64 * d) + 52] = c[(64 * d) + 52 - 16] + c[(64 * d) + 52 - 7] + ((((c[(64 * d) + 52 - 15]) << (32 - (7))) | ((c[(64 * d) + 52 - 15]) >> (7))) ^ (((c[(64 * d) + 52 - 15]) << (32 - (18))) | ((c[(64 * d) + 52 - 15]) >> (18))) ^ (c[(64 * d) + 52 - 15] >> 3)) + ((((c[(64 * d) + 52 - 2]) << (32 - (17))) | ((c[(64 * d) + 52 - 2]) >> (17))) ^ (((c[(64 * d) + 52 - 2]) << (32 - (19))) | ((c[(64 * d) + 52 - 2]) >> (19))) ^ (c[(64 * d) + 52 - 2] >> 10));
    c[(64 * d) + 53] = c[(64 * d) + 53 - 16] + c[(64 * d) + 53 - 7] + ((((c[(64 * d) + 53 - 15]) << (32 - (7))) | ((c[(64 * d) + 53 - 15]) >> (7))) ^ (((c[(64 * d) + 53 - 15]) << (32 - (18))) | ((c[(64 * d) + 53 - 15]) >> (18))) ^ (c[(64 * d) + 53 - 15] >> 3)) + ((((c[(64 * d) + 53 - 2]) << (32 - (17))) | ((c[(64 * d) + 53 - 2]) >> (17))) ^ (((c[(64 * d) + 53 - 2]) << (32 - (19))) | ((c[(64 * d) + 53 - 2]) >> (19))) ^ (c[(64 * d) + 53 - 2] >> 10));
    c[(64 * d) + 54] = c[(64 * d) + 54 - 16] + c[(64 * d) + 54 - 7] + ((((c[(64 * d) + 54 - 15]) << (32 - (7))) | ((c[(64 * d) + 54 - 15]) >> (7))) ^ (((c[(64 * d) + 54 - 15]) << (32 - (18))) | ((c[(64 * d) + 54 - 15]) >> (18))) ^ (c[(64 * d) + 54 - 15] >> 3)) + ((((c[(64 * d) + 54 - 2]) << (32 - (17))) | ((c[(64 * d) + 54 - 2]) >> (17))) ^ (((c[(64 * d) + 54 - 2]) << (32 - (19))) | ((c[(64 * d) + 54 - 2]) >> (19))) ^ (c[(64 * d) + 54 - 2] >> 10));
    c[(64 * d) + 55] = c[(64 * d) + 55 - 16] + c[(64 * d) + 55 - 7] + ((((c[(64 * d) + 55 - 15]) << (32 - (7))) | ((c[(64 * d) + 55 - 15]) >> (7))) ^ (((c[(64 * d) + 55 - 15]) << (32 - (18))) | ((c[(64 * d) + 55 - 15]) >> (18))) ^ (c[(64 * d) + 55 - 15] >> 3)) + ((((c[(64 * d) + 55 - 2]) << (32 - (17))) | ((c[(64 * d) + 55 - 2]) >> (17))) ^ (((c[(64 * d) + 55 - 2]) << (32 - (19))) | ((c[(64 * d) + 55 - 2]) >> (19))) ^ (c[(64 * d) + 55 - 2] >> 10));
    c[(64 * d) + 56] = c[(64 * d) + 56 - 16] + c[(64 * d) + 56 - 7] + ((((c[(64 * d) + 56 - 15]) << (32 - (7))) | ((c[(64 * d) + 56 - 15]) >> (7))) ^ (((c[(64 * d) + 56 - 15]) << (32 - (18))) | ((c[(64 * d) + 56 - 15]) >> (18))) ^ (c[(64 * d) + 56 - 15] >> 3)) + ((((c[(64 * d) + 56 - 2]) << (32 - (17))) | ((c[(64 * d) + 56 - 2]) >> (17))) ^ (((c[(64 * d) + 56 - 2]) << (32 - (19))) | ((c[(64 * d) + 56 - 2]) >> (19))) ^ (c[(64 * d) + 56 - 2] >> 10));
    c[(64 * d) + 57] = c[(64 * d) + 57 - 16] + c[(64 * d) + 57 - 7] + ((((c[(64 * d) + 57 - 15]) << (32 - (7))) | ((c[(64 * d) + 57 - 15]) >> (7))) ^ (((c[(64 * d) + 57 - 15]) << (32 - (18))) | ((c[(64 * d) + 57 - 15]) >> (18))) ^ (c[(64 * d) + 57 - 15] >> 3)) + ((((c[(64 * d) + 57 - 2]) << (32 - (17))) | ((c[(64 * d) + 57 - 2]) >> (17))) ^ (((c[(64 * d) + 57 - 2]) << (32 - (19))) | ((c[(64 * d) + 57 - 2]) >> (19))) ^ (c[(64 * d) + 57 - 2] >> 10));
    c[(64 * d) + 58] = c[(64 * d) + 58 - 16] + c[(64 * d) + 58 - 7] + ((((c[(64 * d) + 58 - 15]) << (32 - (7))) | ((c[(64 * d) + 58 - 15]) >> (7))) ^ (((c[(64 * d) + 58 - 15]) << (32 - (18))) | ((c[(64 * d) + 58 - 15]) >> (18))) ^ (c[(64 * d) + 58 - 15] >> 3)) + ((((c[(64 * d) + 58 - 2]) << (32 - (17))) | ((c[(64 * d) + 58 - 2]) >> (17))) ^ (((c[(64 * d) + 58 - 2]) << (32 - (19))) | ((c[(64 * d) + 58 - 2]) >> (19))) ^ (c[(64 * d) + 58 - 2] >> 10));
    c[(64 * d) + 59] = c[(64 * d) + 59 - 16] + c[(64 * d) + 59 - 7] + ((((c[(64 * d) + 59 - 15]) << (32 - (7))) | ((c[(64 * d) + 59 - 15]) >> (7))) ^ (((c[(64 * d) + 59 - 15]) << (32 - (18))) | ((c[(64 * d) + 59 - 15]) >> (18))) ^ (c[(64 * d) + 59 - 15] >> 3)) + ((((c[(64 * d) + 59 - 2]) << (32 - (17))) | ((c[(64 * d) + 59 - 2]) >> (17))) ^ (((c[(64 * d) + 59 - 2]) << (32 - (19))) | ((c[(64 * d) + 59 - 2]) >> (19))) ^ (c[(64 * d) + 59 - 2] >> 10));
    c[(64 * d) + 60] = c[(64 * d) + 60 - 16] + c[(64 * d) + 60 - 7] + ((((c[(64 * d) + 60 - 15]) << (32 - (7))) | ((c[(64 * d) + 60 - 15]) >> (7))) ^ (((c[(64 * d) + 60 - 15]) << (32 - (18))) | ((c[(64 * d) + 60 - 15]) >> (18))) ^ (c[(64 * d) + 60 - 15] >> 3)) + ((((c[(64 * d) + 60 - 2]) << (32 - (17))) | ((c[(64 * d) + 60 - 2]) >> (17))) ^ (((c[(64 * d) + 60 - 2]) << (32 - (19))) | ((c[(64 * d) + 60 - 2]) >> (19))) ^ (c[(64 * d) + 60 - 2] >> 10));

    c[(64 * d) + 61] = c[(64 * d) + 61 - 16] + c[(64 * d) + 61 - 7] + ((((c[(64 * d) + 61 - 15]) << (32 - (7))) | ((c[(64 * d) + 61 - 15]) >> (7))) ^ (((c[(64 * d) + 61 - 15]) << (32 - (18))) | ((c[(64 * d) + 61 - 15]) >> (18))) ^ (c[(64 * d) + 61 - 15] >> 3)) + ((((c[(64 * d) + 61 - 2]) << (32 - (17))) | ((c[(64 * d) + 61 - 2]) >> (17))) ^ (((c[(64 * d) + 61 - 2]) << (32 - (19))) | ((c[(64 * d) + 61 - 2]) >> (19))) ^ (c[(64 * d) + 61 - 2] >> 10));
    c[(64 * d) + 62] = c[(64 * d) + 62 - 16] + c[(64 * d) + 62 - 7] + ((((c[(64 * d) + 62 - 15]) << (32 - (7))) | ((c[(64 * d) + 62 - 15]) >> (7))) ^ (((c[(64 * d) + 62 - 15]) << (32 - (18))) | ((c[(64 * d) + 62 - 15]) >> (18))) ^ (c[(64 * d) + 62 - 15] >> 3)) + ((((c[(64 * d) + 62 - 2]) << (32 - (17))) | ((c[(64 * d) + 62 - 2]) >> (17))) ^ (((c[(64 * d) + 62 - 2]) << (32 - (19))) | ((c[(64 * d) + 62 - 2]) >> (19))) ^ (c[(64 * d) + 62 - 2] >> 10));
    c[(64 * d) + 63] = c[(64 * d) + 63 - 16] + c[(64 * d) + 63 - 7] + ((((c[(64 * d) + 63 - 15]) << (32 - (7))) | ((c[(64 * d) + 63 - 15]) >> (7))) ^ (((c[(64 * d) + 63 - 15]) << (32 - (18))) | ((c[(64 * d) + 63 - 15]) >> (18))) ^ (c[(64 * d) + 63 - 15] >> 3)) + ((((c[(64 * d) + 63 - 2]) << (32 - (17))) | ((c[(64 * d) + 63 - 2]) >> (17))) ^ (((c[(64 * d) + 63 - 2]) << (32 - (19))) | ((c[(64 * d) + 63 - 2]) >> (19))) ^ (c[(64 * d) + 63 - 2] >> 10));

    d += get_global_size(0);
  }
}

__kernel void F(__global int* a, __global unsigned char* b, __global int* c, __global int* d, __global int* e) {
  int f = get_global_id(0);

  unsigned int g;
  unsigned int h;
  unsigned int i;
  unsigned int j;
  unsigned int k;
  unsigned int l;
  unsigned int m;
  unsigned int n;
  unsigned int o;
  unsigned int p;
  unsigned int q;
  unsigned int r;
  unsigned int s;
  unsigned int t;
  unsigned int u;
  unsigned int v;
  unsigned int w;
  unsigned int x;
  unsigned int y;
  unsigned int z;
  unsigned int aa;
  unsigned int ab;
  unsigned int ac;
  unsigned int ad;
  unsigned int ae;
  unsigned int af;
  unsigned int ag;
  unsigned int ah;
  unsigned int ai;
  unsigned int aj;
  unsigned int ak;
  unsigned int al;

  unsigned int am, an, ao, ap, aq, ar, as, at;
  int au;
  unsigned int av;
  unsigned int aw;
  unsigned int ax;
  unsigned int ay;
  unsigned int az;
  unsigned int ba;
  unsigned int bb;
  unsigned int bc;
  int bd = a[0];

  unsigned int be = (f * 16);

  while (f < bd) {
    au = c[f];
    av = 0x6A09E667;
    aw = 0xBB67AE85;
    ax = 0x3C6EF372;
    ay = 0xA54FF53A;
    az = 0x510E527F;
    ba = 0x9B05688C;
    bb = 0x1F83D9AB;
    bc = 0x5BE0CD19;

    am = 0x6A09E667;
    an = 0xBB67AE85;
    ao = 0x3C6EF372;
    ap = 0xA54FF53A;
    aq = 0x510E527F;
    ar = 0x9B05688C;
    as = 0x1F83D9AB;
    at = 0x5BE0CD19;

    be = (f * 16);

    g = (((unsigned int)b[(be + 0)]) << 24) | 0 | (((unsigned int)b[(be + 1)]) << 8) | 0;
    h = (((unsigned int)b[(be + 2)]) << 24) | 0 | (((unsigned int)b[(be + 3)]) << 8) | 0;
    i = (((unsigned int)b[(be + 4)]) << 24) | 0 | (((unsigned int)b[(be + 5)]) << 8) | 0;
    j = (((unsigned int)b[(be + 6)]) << 24) | 0 | (((unsigned int)b[(be + 7)]) << 8) | 0;
    k = (((unsigned int)b[(be + 8)]) << 24) | 0 | (((unsigned int)b[(be + 9)]) << 8) | 0;
    l = (((unsigned int)b[(be + 10)]) << 24) | 0 | (((unsigned int)b[(be + 11)]) << 8) | 0;
    m = (((unsigned int)b[(be + 12)]) << 24) | 0 | (((unsigned int)b[(be + 13)]) << 8) | 0;
    n = (((unsigned int)b[(be + 14)]) << 24) | 0 | (((unsigned int)b[(be + 15)]) << 8) | 0;

    if (au == 16)
      o = 0x80000000;
    else
      o = 0;
    p = 0;
    q = 0;
    r = 0;
    s = 0;
    t = 0;
    u = 0;
    au *= 2;
    v = ((unsigned char)((au << 3) >> 8)) << 8 | ((unsigned char)(au << 3));
    w = g + p + B((((h) << 25) | ((h) >> 7)), (((h) << 14) | ((h) >> 18)), (h >> 3)) + B((((u) << 15) | ((u) >> 17)), (((u) << 13) | ((u) >> 19)), (u >> 10));
    x = h + q + B((((i) << 25) | ((i) >> 7)), (((i) << 14) | ((i) >> 18)), (i >> 3)) + B((((v) << 15) | ((v) >> 17)), (((v) << 13) | ((v) >> 19)), (v >> 10));
    y = i + r + B((((j) << 25) | ((j) >> 7)), (((j) << 14) | ((j) >> 18)), (j >> 3)) + B((((w) << 15) | ((w) >> 17)), (((w) << 13) | ((w) >> 19)), (w >> 10));
    z = j + s + B((((k) << 25) | ((k) >> 7)), (((k) << 14) | ((k) >> 18)), (k >> 3)) + B((((x) << 15) | ((x) >> 17)), (((x) << 13) | ((x) >> 19)), (x >> 10));
    aa = k + t + B((((l) << 25) | ((l) >> 7)), (((l) << 14) | ((l) >> 18)), (l >> 3)) + B((((y) << 15) | ((y) >> 17)), (((y) << 13) | ((y) >> 19)), (y >> 10));
    ab = l + u + B((((m) << 25) | ((m) >> 7)), (((m) << 14) | ((m) >> 18)), (m >> 3)) + B((((z) << 15) | ((z) >> 17)), (((z) << 13) | ((z) >> 19)), (z >> 10));
    ac = m + v + B((((n) << 25) | ((n) >> 7)), (((n) << 14) | ((n) >> 18)), (n >> 3)) + B((((aa) << 15) | ((aa) >> 17)), (((aa) << 13) | ((aa) >> 19)), (aa >> 10));
    ad = n + w + B((((o) << 25) | ((o) >> 7)), (((o) << 14) | ((o) >> 18)), (o >> 3)) + B((((ab) << 15) | ((ab) >> 17)), (((ab) << 13) | ((ab) >> 19)), (ab >> 10));
    ae = o + x + B((((p) << 25) | ((p) >> 7)), (((p) << 14) | ((p) >> 18)), (p >> 3)) + B((((ac) << 15) | ((ac) >> 17)), (((ac) << 13) | ((ac) >> 19)), (ac >> 10));
    af = p + y + B((((q) << 25) | ((q) >> 7)), (((q) << 14) | ((q) >> 18)), (q >> 3)) + B((((ad) << 15) | ((ad) >> 17)), (((ad) << 13) | ((ad) >> 19)), (ad >> 10));
    ag = q + z + B((((r) << 25) | ((r) >> 7)), (((r) << 14) | ((r) >> 18)), (r >> 3)) + B((((ae) << 15) | ((ae) >> 17)), (((ae) << 13) | ((ae) >> 19)), (ae >> 10));
    ah = r + aa + B((((s) << 25) | ((s) >> 7)), (((s) << 14) | ((s) >> 18)), (s >> 3)) + B((((af) << 15) | ((af) >> 17)), (((af) << 13) | ((af) >> 19)), (af >> 10));
    ai = s + ab + B((((t) << 25) | ((t) >> 7)), (((t) << 14) | ((t) >> 18)), (t >> 3)) + B((((ag) << 15) | ((ag) >> 17)), (((ag) << 13) | ((ag) >> 19)), (ag >> 10));
    aj = t + ac + B((((u) << 25) | ((u) >> 7)), (((u) << 14) | ((u) >> 18)), (u >> 3)) + B((((ah) << 15) | ((ah) >> 17)), (((ah) << 13) | ((ah) >> 19)), (ah >> 10));
    ak = u + ad + B((((v) << 25) | ((v) >> 7)), (((v) << 14) | ((v) >> 18)), (v >> 3)) + B((((ai) << 15) | ((ai) >> 17)), (((ai) << 13) | ((ai) >> 19)), (ai >> 10));
    al = v + ae + B((((w) << 25) | ((w) >> 7)), (((w) << 14) | ((w) >> 18)), (w >> 3)) + B((((aj) << 15) | ((aj) >> 17)), (((aj) << 13) | ((aj) >> 19)), (aj >> 10));

    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x428A2F98 + g;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x71374491 + h;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0xB5C0FBCF + i;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0xE9B5DBA5 + j;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x3956C25B + k;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x59F111F1 + l;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x923F82A4 + m;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0xAB1C5ED5 + n;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0xD807AA98 + o;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x12835B01 + p;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x243185BE + q;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x550C7DC3 + r;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x72BE5D74 + s;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x80DEB1FE + t;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x9BDC06A7 + u;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0xC19BF174 + v;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0xE49B69C1 + w;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0xEFBE4786 + x;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x0FC19DC6 + y;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x240CA1CC + z;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x2DE92C6F + aa;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x4A7484AA + ab;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x5CB0A9DC + ac;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x76F988DA + ad;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x983E5152 + ae;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0xA831C66D + af;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0xB00327C8 + ag;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0xBF597FC7 + ah;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0xC6E00BF3 + ai;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0xD5A79147 + aj;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x06CA6351 + ak;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x14292967 + al;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);

    g = w + af + B((((x) << 25) | ((x) >> 7)), (((x) << 14) | ((x) >> 18)), (x >> 3)) + B((((ak) << 15) | ((ak) >> 17)), (((ak) << 13) | ((ak) >> 19)), (ak >> 10));
    h = x + ag + B((((y) << 25) | ((y) >> 7)), (((y) << 14) | ((y) >> 18)), (y >> 3)) + B((((al) << 15) | ((al) >> 17)), (((al) << 13) | ((al) >> 19)), (al >> 10));
    i = y + ah + B((((z) << 25) | ((z) >> 7)), (((z) << 14) | ((z) >> 18)), (z >> 3)) + B((((g) << 15) | ((g) >> 17)), (((g) << 13) | ((g) >> 19)), (g >> 10));
    j = z + ai + B((((aa) << 25) | ((aa) >> 7)), (((aa) << 14) | ((aa) >> 18)), (aa >> 3)) + B((((h) << 15) | ((h) >> 17)), (((h) << 13) | ((h) >> 19)), (h >> 10));
    k = aa + aj + B((((ab) << 25) | ((ab) >> 7)), (((ab) << 14) | ((ab) >> 18)), (ab >> 3)) + B((((i) << 15) | ((i) >> 17)), (((i) << 13) | ((i) >> 19)), (i >> 10));
    l = ab + ak + B((((ac) << 25) | ((ac) >> 7)), (((ac) << 14) | ((ac) >> 18)), (ac >> 3)) + B((((j) << 15) | ((j) >> 17)), (((j) << 13) | ((j) >> 19)), (j >> 10));
    m = ac + al + B((((ad) << 25) | ((ad) >> 7)), (((ad) << 14) | ((ad) >> 18)), (ad >> 3)) + B((((k) << 15) | ((k) >> 17)), (((k) << 13) | ((k) >> 19)), (k >> 10));
    n = ad + g + B((((ae) << 25) | ((ae) >> 7)), (((ae) << 14) | ((ae) >> 18)), (ae >> 3)) + B((((l) << 15) | ((l) >> 17)), (((l) << 13) | ((l) >> 19)), (l >> 10));
    o = ae + h + B((((af) << 25) | ((af) >> 7)), (((af) << 14) | ((af) >> 18)), (af >> 3)) + B((((m) << 15) | ((m) >> 17)), (((m) << 13) | ((m) >> 19)), (m >> 10));
    p = af + i + B((((ag) << 25) | ((ag) >> 7)), (((ag) << 14) | ((ag) >> 18)), (ag >> 3)) + B((((n) << 15) | ((n) >> 17)), (((n) << 13) | ((n) >> 19)), (n >> 10));
    q = ag + j + B((((ah) << 25) | ((ah) >> 7)), (((ah) << 14) | ((ah) >> 18)), (ah >> 3)) + B((((o) << 15) | ((o) >> 17)), (((o) << 13) | ((o) >> 19)), (o >> 10));
    r = ah + k + B((((ai) << 25) | ((ai) >> 7)), (((ai) << 14) | ((ai) >> 18)), (ai >> 3)) + B((((p) << 15) | ((p) >> 17)), (((p) << 13) | ((p) >> 19)), (p >> 10));
    s = ai + l + B((((aj) << 25) | ((aj) >> 7)), (((aj) << 14) | ((aj) >> 18)), (aj >> 3)) + B((((q) << 15) | ((q) >> 17)), (((q) << 13) | ((q) >> 19)), (q >> 10));
    t = aj + m + B((((ak) << 25) | ((ak) >> 7)), (((ak) << 14) | ((ak) >> 18)), (ak >> 3)) + B((((r) << 15) | ((r) >> 17)), (((r) << 13) | ((r) >> 19)), (r >> 10));
    u = ak + n + B((((al) << 25) | ((al) >> 7)), (((al) << 14) | ((al) >> 18)), (al >> 3)) + B((((s) << 15) | ((s) >> 17)), (((s) << 13) | ((s) >> 19)), (s >> 10));
    v = al + o + B((((g) << 25) | ((g) >> 7)), (((g) << 14) | ((g) >> 18)), (g >> 3)) + B((((t) << 15) | ((t) >> 17)), (((t) << 13) | ((t) >> 19)), (t >> 10));
    w = g + p + B((((h) << 25) | ((h) >> 7)), (((h) << 14) | ((h) >> 18)), (h >> 3)) + B((((u) << 15) | ((u) >> 17)), (((u) << 13) | ((u) >> 19)), (u >> 10));
    x = h + q + B((((i) << 25) | ((i) >> 7)), (((i) << 14) | ((i) >> 18)), (i >> 3)) + B((((v) << 15) | ((v) >> 17)), (((v) << 13) | ((v) >> 19)), (v >> 10));
    y = i + r + B((((j) << 25) | ((j) >> 7)), (((j) << 14) | ((j) >> 18)), (j >> 3)) + B((((w) << 15) | ((w) >> 17)), (((w) << 13) | ((w) >> 19)), (w >> 10));
    z = j + s + B((((k) << 25) | ((k) >> 7)), (((k) << 14) | ((k) >> 18)), (k >> 3)) + B((((x) << 15) | ((x) >> 17)), (((x) << 13) | ((x) >> 19)), (x >> 10));
    aa = k + t + B((((l) << 25) | ((l) >> 7)), (((l) << 14) | ((l) >> 18)), (l >> 3)) + B((((y) << 15) | ((y) >> 17)), (((y) << 13) | ((y) >> 19)), (y >> 10));
    ab = l + u + B((((m) << 25) | ((m) >> 7)), (((m) << 14) | ((m) >> 18)), (m >> 3)) + B((((z) << 15) | ((z) >> 17)), (((z) << 13) | ((z) >> 19)), (z >> 10));
    ac = m + v + B((((n) << 25) | ((n) >> 7)), (((n) << 14) | ((n) >> 18)), (n >> 3)) + B((((aa) << 15) | ((aa) >> 17)), (((aa) << 13) | ((aa) >> 19)), (aa >> 10));
    ad = n + w + B((((o) << 25) | ((o) >> 7)), (((o) << 14) | ((o) >> 18)), (o >> 3)) + B((((ab) << 15) | ((ab) >> 17)), (((ab) << 13) | ((ab) >> 19)), (ab >> 10));
    ae = o + x + B((((p) << 25) | ((p) >> 7)), (((p) << 14) | ((p) >> 18)), (p >> 3)) + B((((ac) << 15) | ((ac) >> 17)), (((ac) << 13) | ((ac) >> 19)), (ac >> 10));
    af = p + y + B((((q) << 25) | ((q) >> 7)), (((q) << 14) | ((q) >> 18)), (q >> 3)) + B((((ad) << 15) | ((ad) >> 17)), (((ad) << 13) | ((ad) >> 19)), (ad >> 10));
    ag = q + z + B((((r) << 25) | ((r) >> 7)), (((r) << 14) | ((r) >> 18)), (r >> 3)) + B((((ae) << 15) | ((ae) >> 17)), (((ae) << 13) | ((ae) >> 19)), (ae >> 10));
    ah = r + aa + B((((s) << 25) | ((s) >> 7)), (((s) << 14) | ((s) >> 18)), (s >> 3)) + B((((af) << 15) | ((af) >> 17)), (((af) << 13) | ((af) >> 19)), (af >> 10));
    ai = s + ab + B((((t) << 25) | ((t) >> 7)), (((t) << 14) | ((t) >> 18)), (t >> 3)) + B((((ag) << 15) | ((ag) >> 17)), (((ag) << 13) | ((ag) >> 19)), (ag >> 10));
    aj = t + ac + B((((u) << 25) | ((u) >> 7)), (((u) << 14) | ((u) >> 18)), (u >> 3)) + B((((ah) << 15) | ((ah) >> 17)), (((ah) << 13) | ((ah) >> 19)), (ah >> 10));
    ak = u + ad + B((((v) << 25) | ((v) >> 7)), (((v) << 14) | ((v) >> 18)), (v >> 3)) + B((((ai) << 15) | ((ai) >> 17)), (((ai) << 13) | ((ai) >> 19)), (ai >> 10));
    al = v + ae + B((((w) << 25) | ((w) >> 7)), (((w) << 14) | ((w) >> 18)), (w >> 3)) + B((((aj) << 15) | ((aj) >> 17)), (((aj) << 13) | ((aj) >> 19)), (aj >> 10));

    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x27B70A85 + g;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x2E1B2138 + h;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x4D2C6DFC + i;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x53380D13 + j;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x650A7354 + k;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x766A0ABB + l;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x81C2C92E + m;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x92722C85 + n;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0xA2BFE8A1 + o;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0xA81A664B + p;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0xC24B8B70 + q;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0xC76C51A3 + r;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0xD192E819 + s;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0xD6990624 + t;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0xF40E3585 + u;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x106AA070 + v;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x19A4C116 + w;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x1E376C08 + x;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x2748774C + y;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x34B0BCB5 + z;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x391C0CB3 + aa;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x4ED8AA4A + ab;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x5B9CCA4F + ac;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x682E6FF3 + ad;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x748F82EE + ae;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x78A5636F + af;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x84C87814 + ag;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x8CC70208 + ah;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x90BEFFFA + ai;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0xA4506CEB + aj;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0xBEF9A3F7 + ak;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0xC67178F2 + al;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);

    av += am;
    aw += an;
    ax += ao;
    ay += ap;
    az += aq;
    ba += ar;
    bb += as;
    bc += at;

    g = av;
    h = aw;
    i = ax;
    j = ay;
    k = az;
    l = ba;
    m = bb;
    n = bc;
    o = 0x80000000;
    p = 0;
    q = 0;
    r = 0;
    s = 0;
    t = 0;
    u = 0;
    v = 0x100;

    av = 0x6A09E667;
    aw = 0xBB67AE85;
    ax = 0x3C6EF372;
    ay = 0xA54FF53A;
    az = 0x510E527F;
    ba = 0x9B05688C;
    bb = 0x1F83D9AB;
    bc = 0x5BE0CD19;

    am = av;
    an = aw;
    ao = ax;
    ap = ay;
    aq = az;
    ar = ba;
    as = bb;
    at = bc;

    w = g + p + B((((h) << 25) | ((h) >> 7)), (((h) << 14) | ((h) >> 18)), (h >> 3)) + B((((u) << 15) | ((u) >> 17)), (((u) << 13) | ((u) >> 19)), (u >> 10));
    x = h + q + B((((i) << 25) | ((i) >> 7)), (((i) << 14) | ((i) >> 18)), (i >> 3)) + B((((v) << 15) | ((v) >> 17)), (((v) << 13) | ((v) >> 19)), (v >> 10));
    y = i + r + B((((j) << 25) | ((j) >> 7)), (((j) << 14) | ((j) >> 18)), (j >> 3)) + B((((w) << 15) | ((w) >> 17)), (((w) << 13) | ((w) >> 19)), (w >> 10));
    z = j + s + B((((k) << 25) | ((k) >> 7)), (((k) << 14) | ((k) >> 18)), (k >> 3)) + B((((x) << 15) | ((x) >> 17)), (((x) << 13) | ((x) >> 19)), (x >> 10));
    aa = k + t + B((((l) << 25) | ((l) >> 7)), (((l) << 14) | ((l) >> 18)), (l >> 3)) + B((((y) << 15) | ((y) >> 17)), (((y) << 13) | ((y) >> 19)), (y >> 10));
    ab = l + u + B((((m) << 25) | ((m) >> 7)), (((m) << 14) | ((m) >> 18)), (m >> 3)) + B((((z) << 15) | ((z) >> 17)), (((z) << 13) | ((z) >> 19)), (z >> 10));
    ac = m + v + B((((n) << 25) | ((n) >> 7)), (((n) << 14) | ((n) >> 18)), (n >> 3)) + B((((aa) << 15) | ((aa) >> 17)), (((aa) << 13) | ((aa) >> 19)), (aa >> 10));
    ad = n + w + B((((o) << 25) | ((o) >> 7)), (((o) << 14) | ((o) >> 18)), (o >> 3)) + B((((ab) << 15) | ((ab) >> 17)), (((ab) << 13) | ((ab) >> 19)), (ab >> 10));
    ae = o + x + B((((p) << 25) | ((p) >> 7)), (((p) << 14) | ((p) >> 18)), (p >> 3)) + B((((ac) << 15) | ((ac) >> 17)), (((ac) << 13) | ((ac) >> 19)), (ac >> 10));
    af = p + y + B((((q) << 25) | ((q) >> 7)), (((q) << 14) | ((q) >> 18)), (q >> 3)) + B((((ad) << 15) | ((ad) >> 17)), (((ad) << 13) | ((ad) >> 19)), (ad >> 10));
    ag = q + z + B((((r) << 25) | ((r) >> 7)), (((r) << 14) | ((r) >> 18)), (r >> 3)) + B((((ae) << 15) | ((ae) >> 17)), (((ae) << 13) | ((ae) >> 19)), (ae >> 10));
    ah = r + aa + B((((s) << 25) | ((s) >> 7)), (((s) << 14) | ((s) >> 18)), (s >> 3)) + B((((af) << 15) | ((af) >> 17)), (((af) << 13) | ((af) >> 19)), (af >> 10));
    ai = s + ab + B((((t) << 25) | ((t) >> 7)), (((t) << 14) | ((t) >> 18)), (t >> 3)) + B((((ag) << 15) | ((ag) >> 17)), (((ag) << 13) | ((ag) >> 19)), (ag >> 10));
    aj = t + ac + B((((u) << 25) | ((u) >> 7)), (((u) << 14) | ((u) >> 18)), (u >> 3)) + B((((ah) << 15) | ((ah) >> 17)), (((ah) << 13) | ((ah) >> 19)), (ah >> 10));
    ak = u + ad + B((((v) << 25) | ((v) >> 7)), (((v) << 14) | ((v) >> 18)), (v >> 3)) + B((((ai) << 15) | ((ai) >> 17)), (((ai) << 13) | ((ai) >> 19)), (ai >> 10));
    al = v + ae + B((((w) << 25) | ((w) >> 7)), (((w) << 14) | ((w) >> 18)), (w >> 3)) + B((((aj) << 15) | ((aj) >> 17)), (((aj) << 13) | ((aj) >> 19)), (aj >> 10));

    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x428A2F98 + g;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x71374491 + h;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0xB5C0FBCF + i;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0xE9B5DBA5 + j;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x3956C25B + k;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x59F111F1 + l;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x923F82A4 + m;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0xAB1C5ED5 + n;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0xD807AA98 + o;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x12835B01 + p;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x243185BE + q;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x550C7DC3 + r;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x72BE5D74 + s;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x80DEB1FE + t;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x9BDC06A7 + u;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0xC19BF174 + v;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0xE49B69C1 + w;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0xEFBE4786 + x;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x0FC19DC6 + y;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x240CA1CC + z;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x2DE92C6F + aa;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x4A7484AA + ab;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x5CB0A9DC + ac;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x76F988DA + ad;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x983E5152 + ae;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0xA831C66D + af;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0xB00327C8 + ag;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0xBF597FC7 + ah;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0xC6E00BF3 + ai;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0xD5A79147 + aj;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x06CA6351 + ak;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x14292967 + al;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);

    g = w + af + B((((x) << 25) | ((x) >> 7)), (((x) << 14) | ((x) >> 18)), (x >> 3)) + B((((ak) << 15) | ((ak) >> 17)), (((ak) << 13) | ((ak) >> 19)), (ak >> 10));
    h = x + ag + B((((y) << 25) | ((y) >> 7)), (((y) << 14) | ((y) >> 18)), (y >> 3)) + B((((al) << 15) | ((al) >> 17)), (((al) << 13) | ((al) >> 19)), (al >> 10));
    i = y + ah + B((((z) << 25) | ((z) >> 7)), (((z) << 14) | ((z) >> 18)), (z >> 3)) + B((((g) << 15) | ((g) >> 17)), (((g) << 13) | ((g) >> 19)), (g >> 10));
    j = z + ai + B((((aa) << 25) | ((aa) >> 7)), (((aa) << 14) | ((aa) >> 18)), (aa >> 3)) + B((((h) << 15) | ((h) >> 17)), (((h) << 13) | ((h) >> 19)), (h >> 10));
    k = aa + aj + B((((ab) << 25) | ((ab) >> 7)), (((ab) << 14) | ((ab) >> 18)), (ab >> 3)) + B((((i) << 15) | ((i) >> 17)), (((i) << 13) | ((i) >> 19)), (i >> 10));
    l = ab + ak + B((((ac) << 25) | ((ac) >> 7)), (((ac) << 14) | ((ac) >> 18)), (ac >> 3)) + B((((j) << 15) | ((j) >> 17)), (((j) << 13) | ((j) >> 19)), (j >> 10));
    m = ac + al + B((((ad) << 25) | ((ad) >> 7)), (((ad) << 14) | ((ad) >> 18)), (ad >> 3)) + B((((k) << 15) | ((k) >> 17)), (((k) << 13) | ((k) >> 19)), (k >> 10));
    n = ad + g + B((((ae) << 25) | ((ae) >> 7)), (((ae) << 14) | ((ae) >> 18)), (ae >> 3)) + B((((l) << 15) | ((l) >> 17)), (((l) << 13) | ((l) >> 19)), (l >> 10));
    o = ae + h + B((((af) << 25) | ((af) >> 7)), (((af) << 14) | ((af) >> 18)), (af >> 3)) + B((((m) << 15) | ((m) >> 17)), (((m) << 13) | ((m) >> 19)), (m >> 10));
    p = af + i + B((((ag) << 25) | ((ag) >> 7)), (((ag) << 14) | ((ag) >> 18)), (ag >> 3)) + B((((n) << 15) | ((n) >> 17)), (((n) << 13) | ((n) >> 19)), (n >> 10));
    q = ag + j + B((((ah) << 25) | ((ah) >> 7)), (((ah) << 14) | ((ah) >> 18)), (ah >> 3)) + B((((o) << 15) | ((o) >> 17)), (((o) << 13) | ((o) >> 19)), (o >> 10));
    r = ah + k + B((((ai) << 25) | ((ai) >> 7)), (((ai) << 14) | ((ai) >> 18)), (ai >> 3)) + B((((p) << 15) | ((p) >> 17)), (((p) << 13) | ((p) >> 19)), (p >> 10));
    s = ai + l + B((((aj) << 25) | ((aj) >> 7)), (((aj) << 14) | ((aj) >> 18)), (aj >> 3)) + B((((q) << 15) | ((q) >> 17)), (((q) << 13) | ((q) >> 19)), (q >> 10));
    t = aj + m + B((((ak) << 25) | ((ak) >> 7)), (((ak) << 14) | ((ak) >> 18)), (ak >> 3)) + B((((r) << 15) | ((r) >> 17)), (((r) << 13) | ((r) >> 19)), (r >> 10));
    u = ak + n + B((((al) << 25) | ((al) >> 7)), (((al) << 14) | ((al) >> 18)), (al >> 3)) + B((((s) << 15) | ((s) >> 17)), (((s) << 13) | ((s) >> 19)), (s >> 10));
    v = al + o + B((((g) << 25) | ((g) >> 7)), (((g) << 14) | ((g) >> 18)), (g >> 3)) + B((((t) << 15) | ((t) >> 17)), (((t) << 13) | ((t) >> 19)), (t >> 10));
    w = g + p + B((((h) << 25) | ((h) >> 7)), (((h) << 14) | ((h) >> 18)), (h >> 3)) + B((((u) << 15) | ((u) >> 17)), (((u) << 13) | ((u) >> 19)), (u >> 10));
    x = h + q + B((((i) << 25) | ((i) >> 7)), (((i) << 14) | ((i) >> 18)), (i >> 3)) + B((((v) << 15) | ((v) >> 17)), (((v) << 13) | ((v) >> 19)), (v >> 10));
    y = i + r + B((((j) << 25) | ((j) >> 7)), (((j) << 14) | ((j) >> 18)), (j >> 3)) + B((((w) << 15) | ((w) >> 17)), (((w) << 13) | ((w) >> 19)), (w >> 10));
    z = j + s + B((((k) << 25) | ((k) >> 7)), (((k) << 14) | ((k) >> 18)), (k >> 3)) + B((((x) << 15) | ((x) >> 17)), (((x) << 13) | ((x) >> 19)), (x >> 10));
    aa = k + t + B((((l) << 25) | ((l) >> 7)), (((l) << 14) | ((l) >> 18)), (l >> 3)) + B((((y) << 15) | ((y) >> 17)), (((y) << 13) | ((y) >> 19)), (y >> 10));
    ab = l + u + B((((m) << 25) | ((m) >> 7)), (((m) << 14) | ((m) >> 18)), (m >> 3)) + B((((z) << 15) | ((z) >> 17)), (((z) << 13) | ((z) >> 19)), (z >> 10));
    ac = m + v + B((((n) << 25) | ((n) >> 7)), (((n) << 14) | ((n) >> 18)), (n >> 3)) + B((((aa) << 15) | ((aa) >> 17)), (((aa) << 13) | ((aa) >> 19)), (aa >> 10));
    ad = n + w + B((((o) << 25) | ((o) >> 7)), (((o) << 14) | ((o) >> 18)), (o >> 3)) + B((((ab) << 15) | ((ab) >> 17)), (((ab) << 13) | ((ab) >> 19)), (ab >> 10));
    ae = o + x + B((((p) << 25) | ((p) >> 7)), (((p) << 14) | ((p) >> 18)), (p >> 3)) + B((((ac) << 15) | ((ac) >> 17)), (((ac) << 13) | ((ac) >> 19)), (ac >> 10));
    af = p + y + B((((q) << 25) | ((q) >> 7)), (((q) << 14) | ((q) >> 18)), (q >> 3)) + B((((ad) << 15) | ((ad) >> 17)), (((ad) << 13) | ((ad) >> 19)), (ad >> 10));
    ag = q + z + B((((r) << 25) | ((r) >> 7)), (((r) << 14) | ((r) >> 18)), (r >> 3)) + B((((ae) << 15) | ((ae) >> 17)), (((ae) << 13) | ((ae) >> 19)), (ae >> 10));
    ah = r + aa + B((((s) << 25) | ((s) >> 7)), (((s) << 14) | ((s) >> 18)), (s >> 3)) + B((((af) << 15) | ((af) >> 17)), (((af) << 13) | ((af) >> 19)), (af >> 10));
    ai = s + ab + B((((t) << 25) | ((t) >> 7)), (((t) << 14) | ((t) >> 18)), (t >> 3)) + B((((ag) << 15) | ((ag) >> 17)), (((ag) << 13) | ((ag) >> 19)), (ag >> 10));
    aj = t + ac + B((((u) << 25) | ((u) >> 7)), (((u) << 14) | ((u) >> 18)), (u >> 3)) + B((((ah) << 15) | ((ah) >> 17)), (((ah) << 13) | ((ah) >> 19)), (ah >> 10));
    ak = u + ad + B((((v) << 25) | ((v) >> 7)), (((v) << 14) | ((v) >> 18)), (v >> 3)) + B((((ai) << 15) | ((ai) >> 17)), (((ai) << 13) | ((ai) >> 19)), (ai >> 10));
    al = v + ae + B((((w) << 25) | ((w) >> 7)), (((w) << 14) | ((w) >> 18)), (w >> 3)) + B((((aj) << 15) | ((aj) >> 17)), (((aj) << 13) | ((aj) >> 19)), (aj >> 10));

    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x27B70A85 + g;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x2E1B2138 + h;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x4D2C6DFC + i;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x53380D13 + j;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x650A7354 + k;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x766A0ABB + l;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x81C2C92E + m;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x92722C85 + n;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0xA2BFE8A1 + o;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0xA81A664B + p;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0xC24B8B70 + q;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0xC76C51A3 + r;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0xD192E819 + s;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0xD6990624 + t;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0xF40E3585 + u;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x106AA070 + v;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x19A4C116 + w;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x1E376C08 + x;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x2748774C + y;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x34B0BCB5 + z;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x391C0CB3 + aa;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0x4ED8AA4A + ab;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0x5B9CCA4F + ac;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0x682E6FF3 + ad;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);
    at += B((((aq) << 26) | ((aq) >> 6)), (((aq) << 21) | ((aq) >> 11)), (((aq) << 7) | ((aq) >> 25))) + C(as, aq, ar) + 0x748F82EE + ae;
    ap += at;
    at += B((((am) << 30) | ((am) >> 2)), (((am) << 19) | ((am) >> 13)), (((am) << 10) | ((am) >> 22))) + D(am, an, ao);
    as += B((((ap) << 26) | ((ap) >> 6)), (((ap) << 21) | ((ap) >> 11)), (((ap) << 7) | ((ap) >> 25))) + C(ar, ap, aq) + 0x78A5636F + af;
    ao += as;
    as += B((((at) << 30) | ((at) >> 2)), (((at) << 19) | ((at) >> 13)), (((at) << 10) | ((at) >> 22))) + D(at, am, an);
    ar += B((((ao) << 26) | ((ao) >> 6)), (((ao) << 21) | ((ao) >> 11)), (((ao) << 7) | ((ao) >> 25))) + C(aq, ao, ap) + 0x84C87814 + ag;
    an += ar;
    ar += B((((as) << 30) | ((as) >> 2)), (((as) << 19) | ((as) >> 13)), (((as) << 10) | ((as) >> 22))) + D(as, at, am);
    aq += B((((an) << 26) | ((an) >> 6)), (((an) << 21) | ((an) >> 11)), (((an) << 7) | ((an) >> 25))) + C(ap, an, ao) + 0x8CC70208 + ah;
    am += aq;
    aq += B((((ar) << 30) | ((ar) >> 2)), (((ar) << 19) | ((ar) >> 13)), (((ar) << 10) | ((ar) >> 22))) + D(ar, as, at);
    ap += B((((am) << 26) | ((am) >> 6)), (((am) << 21) | ((am) >> 11)), (((am) << 7) | ((am) >> 25))) + C(ao, am, an) + 0x90BEFFFA + ai;
    at += ap;
    ap += B((((aq) << 30) | ((aq) >> 2)), (((aq) << 19) | ((aq) >> 13)), (((aq) << 10) | ((aq) >> 22))) + D(aq, ar, as);
    ao += B((((at) << 26) | ((at) >> 6)), (((at) << 21) | ((at) >> 11)), (((at) << 7) | ((at) >> 25))) + C(an, at, am) + 0xA4506CEB + aj;
    as += ao;
    ao += B((((ap) << 30) | ((ap) >> 2)), (((ap) << 19) | ((ap) >> 13)), (((ap) << 10) | ((ap) >> 22))) + D(ap, aq, ar);
    an += B((((as) << 26) | ((as) >> 6)), (((as) << 21) | ((as) >> 11)), (((as) << 7) | ((as) >> 25))) + C(am, as, at) + 0xBEF9A3F7 + ak;
    ar += an;
    an += B((((ao) << 30) | ((ao) >> 2)), (((ao) << 19) | ((ao) >> 13)), (((ao) << 10) | ((ao) >> 22))) + D(ao, ap, aq);
    am += B((((ar) << 26) | ((ar) >> 6)), (((ar) << 21) | ((ar) >> 11)), (((ar) << 7) | ((ar) >> 25))) + C(at, ar, as) + 0xC67178F2 + al;
    aq += am;
    am += B((((an) << 30) | ((an) >> 2)), (((an) << 19) | ((an) >> 13)), (((an) << 10) | ((an) >> 22))) + D(an, ao, ap);

    av += am;
    aw += an;
    ax += ao;
    ay += ap;
    az += aq;
    ba += ar;
    bb += as;
    bc += at;

    d[(f * 8) + 0] = av;
    d[(f * 8) + 1] = aw;
    d[(f * 8) + 2] = ax;
    d[(f * 8) + 3] = ay;
    d[(f * 8) + 4] = az;
    d[(f * 8) + 5] = ba;
    d[(f * 8) + 6] = bb;
    d[(f * 8) + 7] = bc;
    f += get_global_size(0);
  }
}

__kernel void G(__global int* a, __global unsigned int* b, __global int* c, __global int* d, __global int* e) {
  int f = get_global_id(0);

  unsigned int g;
  unsigned int h;
  unsigned int i;
  unsigned int j;
  unsigned int k;
  unsigned int l;
  unsigned int m;
  unsigned int n;

  unsigned int o;
  unsigned int p;
  unsigned int q;
  unsigned int r;
  unsigned int s;
  unsigned int t;
  unsigned int u;
  unsigned int v;
  unsigned int w;
  unsigned int x;
  unsigned int y;
  unsigned int z;
  unsigned int aa;
  unsigned int ab;
  unsigned int ac;
  unsigned int ad;
  unsigned int ae;
  unsigned int af;
  unsigned int ag;
  unsigned int ah;
  unsigned int ai;
  unsigned int aj;
  unsigned int ak;
  unsigned int al;
  unsigned int am;
  unsigned int an;
  unsigned int ao;
  unsigned int ap;
  unsigned int aq;
  unsigned int ar;
  unsigned int as;
  unsigned int at;

  unsigned int au, av, aw, ax, ay, az, ba, bb;
  unsigned int bc;
  unsigned int bd;
  unsigned int be;
  unsigned int bf;
  unsigned int bg;
  unsigned int bh;
  unsigned int bi;
  unsigned int bj;
  int bk = a[0];
  int bl = e[0];
  unsigned int bm = 0;
  int bn = 0;

  while (f < bk) {
    bm = (64 * bl * 256);

    bc = c[(f * 8) + 0];
    bd = c[(f * 8) + 1];
    be = c[(f * 8) + 2];
    bf = c[(f * 8) + 3];
    bg = c[(f * 8) + 4];
    bh = c[(f * 8) + 5];
    bi = c[(f * 8) + 6];
    bj = c[(f * 8) + 7];

    g = d[(f * 8) + 0];
    h = d[(f * 8) + 1];
    i = d[(f * 8) + 2];
    j = d[(f * 8) + 3];
    k = d[(f * 8) + 4];
    l = d[(f * 8) + 5];
    m = d[(f * 8) + 6];
    n = d[(f * 8) + 7];
    for (bn = 0; bn < 256; bn++) {
      au = 0x6A09E667;
      av = 0xBB67AE85;
      aw = 0x3C6EF372;
      ax = 0xA54FF53A;
      ay = 0x510E527F;
      az = 0x9B05688C;
      ba = 0x1F83D9AB;
      bb = 0x5BE0CD19;

      o = g;
      p = h;
      q = i;
      r = j;
      s = k;
      t = l;
      u = m;
      v = n;

      w = bc;
      x = bd;
      y = be;
      z = bf;
      aa = bg;
      ab = bh;
      ac = bi;
      ad = bj;

      ae = o + x + B((((p) << 25) | ((p) >> 7)), (((p) << 14) | ((p) >> 18)), (p >> 3)) + B((((ac) << 15) | ((ac) >> 17)), (((ac) << 13) | ((ac) >> 19)), (ac >> 10));
      af = p + y + B((((q) << 25) | ((q) >> 7)), (((q) << 14) | ((q) >> 18)), (q >> 3)) + B((((ad) << 15) | ((ad) >> 17)), (((ad) << 13) | ((ad) >> 19)), (ad >> 10));
      ag = q + z + B((((r) << 25) | ((r) >> 7)), (((r) << 14) | ((r) >> 18)), (r >> 3)) + B((((ae) << 15) | ((ae) >> 17)), (((ae) << 13) | ((ae) >> 19)), (ae >> 10));
      ah = r + aa + B((((s) << 25) | ((s) >> 7)), (((s) << 14) | ((s) >> 18)), (s >> 3)) + B((((af) << 15) | ((af) >> 17)), (((af) << 13) | ((af) >> 19)), (af >> 10));
      ai = s + ab + B((((t) << 25) | ((t) >> 7)), (((t) << 14) | ((t) >> 18)), (t >> 3)) + B((((ag) << 15) | ((ag) >> 17)), (((ag) << 13) | ((ag) >> 19)), (ag >> 10));
      aj = t + ac + B((((u) << 25) | ((u) >> 7)), (((u) << 14) | ((u) >> 18)), (u >> 3)) + B((((ah) << 15) | ((ah) >> 17)), (((ah) << 13) | ((ah) >> 19)), (ah >> 10));
      ak = u + ad + B((((v) << 25) | ((v) >> 7)), (((v) << 14) | ((v) >> 18)), (v >> 3)) + B((((ai) << 15) | ((ai) >> 17)), (((ai) << 13) | ((ai) >> 19)), (ai >> 10));
      al = v + ae + B((((w) << 25) | ((w) >> 7)), (((w) << 14) | ((w) >> 18)), (w >> 3)) + B((((aj) << 15) | ((aj) >> 17)), (((aj) << 13) | ((aj) >> 19)), (aj >> 10));
      am = w + af + B((((x) << 25) | ((x) >> 7)), (((x) << 14) | ((x) >> 18)), (x >> 3)) + B((((ak) << 15) | ((ak) >> 17)), (((ak) << 13) | ((ak) >> 19)), (ak >> 10));
      an = x + ag + B((((y) << 25) | ((y) >> 7)), (((y) << 14) | ((y) >> 18)), (y >> 3)) + B((((al) << 15) | ((al) >> 17)), (((al) << 13) | ((al) >> 19)), (al >> 10));
      ao = y + ah + B((((z) << 25) | ((z) >> 7)), (((z) << 14) | ((z) >> 18)), (z >> 3)) + B((((am) << 15) | ((am) >> 17)), (((am) << 13) | ((am) >> 19)), (am >> 10));
      ap = z + ai + B((((aa) << 25) | ((aa) >> 7)), (((aa) << 14) | ((aa) >> 18)), (aa >> 3)) + B((((an) << 15) | ((an) >> 17)), (((an) << 13) | ((an) >> 19)), (an >> 10));
      aq = aa + aj + B((((ab) << 25) | ((ab) >> 7)), (((ab) << 14) | ((ab) >> 18)), (ab >> 3)) + B((((ao) << 15) | ((ao) >> 17)), (((ao) << 13) | ((ao) >> 19)), (ao >> 10));
      ar = ab + ak + B((((ac) << 25) | ((ac) >> 7)), (((ac) << 14) | ((ac) >> 18)), (ac >> 3)) + B((((ap) << 15) | ((ap) >> 17)), (((ap) << 13) | ((ap) >> 19)), (ap >> 10));
      as = ac + al + B((((ad) << 25) | ((ad) >> 7)), (((ad) << 14) | ((ad) >> 18)), (ad >> 3)) + B((((aq) << 15) | ((aq) >> 17)), (((aq) << 13) | ((aq) >> 19)), (aq >> 10));
      at = ad + am + B((((ae) << 25) | ((ae) >> 7)), (((ae) << 14) | ((ae) >> 18)), (ae >> 3)) + B((((ar) << 15) | ((ar) >> 17)), (((ar) << 13) | ((ar) >> 19)), (ar >> 10));

      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x428A2F98 + o;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x71374491 + p;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0xB5C0FBCF + q;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0xE9B5DBA5 + r;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x3956C25B + s;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x59F111F1 + t;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x923F82A4 + u;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0xAB1C5ED5 + v;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0xD807AA98 + w;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x12835B01 + x;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x243185BE + y;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x550C7DC3 + z;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x72BE5D74 + aa;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x80DEB1FE + ab;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x9BDC06A7 + ac;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0xC19BF174 + ad;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0xE49B69C1 + ae;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0xEFBE4786 + af;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x0FC19DC6 + ag;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x240CA1CC + ah;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x2DE92C6F + ai;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x4A7484AA + aj;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x5CB0A9DC + ak;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x76F988DA + al;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x983E5152 + am;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0xA831C66D + an;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0xB00327C8 + ao;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0xBF597FC7 + ap;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0xC6E00BF3 + aq;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0xD5A79147 + ar;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x06CA6351 + as;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x14292967 + at;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);

      o = ae + an + B((((af) << 25) | ((af) >> 7)), (((af) << 14) | ((af) >> 18)), (af >> 3)) + B((((as) << 15) | ((as) >> 17)), (((as) << 13) | ((as) >> 19)), (as >> 10));
      p = af + ao + B((((ag) << 25) | ((ag) >> 7)), (((ag) << 14) | ((ag) >> 18)), (ag >> 3)) + B((((at) << 15) | ((at) >> 17)), (((at) << 13) | ((at) >> 19)), (at >> 10));
      q = ag + ap + B((((ah) << 25) | ((ah) >> 7)), (((ah) << 14) | ((ah) >> 18)), (ah >> 3)) + B((((o) << 15) | ((o) >> 17)), (((o) << 13) | ((o) >> 19)), (o >> 10));
      r = ah + aq + B((((ai) << 25) | ((ai) >> 7)), (((ai) << 14) | ((ai) >> 18)), (ai >> 3)) + B((((p) << 15) | ((p) >> 17)), (((p) << 13) | ((p) >> 19)), (p >> 10));
      s = ai + ar + B((((aj) << 25) | ((aj) >> 7)), (((aj) << 14) | ((aj) >> 18)), (aj >> 3)) + B((((q) << 15) | ((q) >> 17)), (((q) << 13) | ((q) >> 19)), (q >> 10));
      t = aj + as + B((((ak) << 25) | ((ak) >> 7)), (((ak) << 14) | ((ak) >> 18)), (ak >> 3)) + B((((r) << 15) | ((r) >> 17)), (((r) << 13) | ((r) >> 19)), (r >> 10));
      u = ak + at + B((((al) << 25) | ((al) >> 7)), (((al) << 14) | ((al) >> 18)), (al >> 3)) + B((((s) << 15) | ((s) >> 17)), (((s) << 13) | ((s) >> 19)), (s >> 10));
      v = al + o + B((((am) << 25) | ((am) >> 7)), (((am) << 14) | ((am) >> 18)), (am >> 3)) + B((((t) << 15) | ((t) >> 17)), (((t) << 13) | ((t) >> 19)), (t >> 10));
      w = am + p + B((((an) << 25) | ((an) >> 7)), (((an) << 14) | ((an) >> 18)), (an >> 3)) + B((((u) << 15) | ((u) >> 17)), (((u) << 13) | ((u) >> 19)), (u >> 10));
      x = an + q + B((((ao) << 25) | ((ao) >> 7)), (((ao) << 14) | ((ao) >> 18)), (ao >> 3)) + B((((v) << 15) | ((v) >> 17)), (((v) << 13) | ((v) >> 19)), (v >> 10));
      y = ao + r + B((((ap) << 25) | ((ap) >> 7)), (((ap) << 14) | ((ap) >> 18)), (ap >> 3)) + B((((w) << 15) | ((w) >> 17)), (((w) << 13) | ((w) >> 19)), (w >> 10));
      z = ap + s + B((((aq) << 25) | ((aq) >> 7)), (((aq) << 14) | ((aq) >> 18)), (aq >> 3)) + B((((x) << 15) | ((x) >> 17)), (((x) << 13) | ((x) >> 19)), (x >> 10));
      aa = aq + t + B((((ar) << 25) | ((ar) >> 7)), (((ar) << 14) | ((ar) >> 18)), (ar >> 3)) + B((((y) << 15) | ((y) >> 17)), (((y) << 13) | ((y) >> 19)), (y >> 10));
      ab = ar + u + B((((as) << 25) | ((as) >> 7)), (((as) << 14) | ((as) >> 18)), (as >> 3)) + B((((z) << 15) | ((z) >> 17)), (((z) << 13) | ((z) >> 19)), (z >> 10));
      ac = as + v + B((((at) << 25) | ((at) >> 7)), (((at) << 14) | ((at) >> 18)), (at >> 3)) + B((((aa) << 15) | ((aa) >> 17)), (((aa) << 13) | ((aa) >> 19)), (aa >> 10));
      ad = at + w + B((((o) << 25) | ((o) >> 7)), (((o) << 14) | ((o) >> 18)), (o >> 3)) + B((((ab) << 15) | ((ab) >> 17)), (((ab) << 13) | ((ab) >> 19)), (ab >> 10));
      ae = o + x + B((((p) << 25) | ((p) >> 7)), (((p) << 14) | ((p) >> 18)), (p >> 3)) + B((((ac) << 15) | ((ac) >> 17)), (((ac) << 13) | ((ac) >> 19)), (ac >> 10));
      af = p + y + B((((q) << 25) | ((q) >> 7)), (((q) << 14) | ((q) >> 18)), (q >> 3)) + B((((ad) << 15) | ((ad) >> 17)), (((ad) << 13) | ((ad) >> 19)), (ad >> 10));
      ag = q + z + B((((r) << 25) | ((r) >> 7)), (((r) << 14) | ((r) >> 18)), (r >> 3)) + B((((ae) << 15) | ((ae) >> 17)), (((ae) << 13) | ((ae) >> 19)), (ae >> 10));
      ah = r + aa + B((((s) << 25) | ((s) >> 7)), (((s) << 14) | ((s) >> 18)), (s >> 3)) + B((((af) << 15) | ((af) >> 17)), (((af) << 13) | ((af) >> 19)), (af >> 10));
      ai = s + ab + B((((t) << 25) | ((t) >> 7)), (((t) << 14) | ((t) >> 18)), (t >> 3)) + B((((ag) << 15) | ((ag) >> 17)), (((ag) << 13) | ((ag) >> 19)), (ag >> 10));
      aj = t + ac + B((((u) << 25) | ((u) >> 7)), (((u) << 14) | ((u) >> 18)), (u >> 3)) + B((((ah) << 15) | ((ah) >> 17)), (((ah) << 13) | ((ah) >> 19)), (ah >> 10));
      ak = u + ad + B((((v) << 25) | ((v) >> 7)), (((v) << 14) | ((v) >> 18)), (v >> 3)) + B((((ai) << 15) | ((ai) >> 17)), (((ai) << 13) | ((ai) >> 19)), (ai >> 10));
      al = v + ae + B((((w) << 25) | ((w) >> 7)), (((w) << 14) | ((w) >> 18)), (w >> 3)) + B((((aj) << 15) | ((aj) >> 17)), (((aj) << 13) | ((aj) >> 19)), (aj >> 10));
      am = w + af + B((((x) << 25) | ((x) >> 7)), (((x) << 14) | ((x) >> 18)), (x >> 3)) + B((((ak) << 15) | ((ak) >> 17)), (((ak) << 13) | ((ak) >> 19)), (ak >> 10));
      an = x + ag + B((((y) << 25) | ((y) >> 7)), (((y) << 14) | ((y) >> 18)), (y >> 3)) + B((((al) << 15) | ((al) >> 17)), (((al) << 13) | ((al) >> 19)), (al >> 10));
      ao = y + ah + B((((z) << 25) | ((z) >> 7)), (((z) << 14) | ((z) >> 18)), (z >> 3)) + B((((am) << 15) | ((am) >> 17)), (((am) << 13) | ((am) >> 19)), (am >> 10));
      ap = z + ai + B((((aa) << 25) | ((aa) >> 7)), (((aa) << 14) | ((aa) >> 18)), (aa >> 3)) + B((((an) << 15) | ((an) >> 17)), (((an) << 13) | ((an) >> 19)), (an >> 10));
      aq = aa + aj + B((((ab) << 25) | ((ab) >> 7)), (((ab) << 14) | ((ab) >> 18)), (ab >> 3)) + B((((ao) << 15) | ((ao) >> 17)), (((ao) << 13) | ((ao) >> 19)), (ao >> 10));
      ar = ab + ak + B((((ac) << 25) | ((ac) >> 7)), (((ac) << 14) | ((ac) >> 18)), (ac >> 3)) + B((((ap) << 15) | ((ap) >> 17)), (((ap) << 13) | ((ap) >> 19)), (ap >> 10));
      as = ac + al + B((((ad) << 25) | ((ad) >> 7)), (((ad) << 14) | ((ad) >> 18)), (ad >> 3)) + B((((aq) << 15) | ((aq) >> 17)), (((aq) << 13) | ((aq) >> 19)), (aq >> 10));
      at = ad + am + B((((ae) << 25) | ((ae) >> 7)), (((ae) << 14) | ((ae) >> 18)), (ae >> 3)) + B((((ar) << 15) | ((ar) >> 17)), (((ar) << 13) | ((ar) >> 19)), (ar >> 10));

      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x27B70A85 + o;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x2E1B2138 + p;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x4D2C6DFC + q;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x53380D13 + r;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x650A7354 + s;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x766A0ABB + t;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x81C2C92E + u;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x92722C85 + v;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0xA2BFE8A1 + w;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0xA81A664B + x;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0xC24B8B70 + y;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0xC76C51A3 + z;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0xD192E819 + aa;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0xD6990624 + ab;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0xF40E3585 + ac;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x106AA070 + ad;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x19A4C116 + ae;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x1E376C08 + af;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x2748774C + ag;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x34B0BCB5 + ah;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x391C0CB3 + ai;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x4ED8AA4A + aj;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x5B9CCA4F + ak;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x682E6FF3 + al;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x748F82EE + am;
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x78A5636F + an;
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x84C87814 + ao;
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x8CC70208 + ap;
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x90BEFFFA + aq;
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0xA4506CEB + ar;
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0xBEF9A3F7 + as;
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0xC67178F2 + at;
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);

      g = 0x6A09E667 + au;
      h = 0xBB67AE85 + av;
      i = 0x3C6EF372 + aw;
      j = 0xA54FF53A + ax;
      k = 0x510E527F + ay;
      l = 0x9B05688C + az;
      m = 0x1F83D9AB + ba;
      n = 0x5BE0CD19 + bb;

      au = g;
      av = h;
      aw = i;
      ax = j;
      ay = k;
      az = l;
      ba = m;
      bb = n;

      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x428A2F98 + b[0 + 0];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x71374491 + b[0 + 1];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0xB5C0FBCF + b[0 + 2];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0xE9B5DBA5 + b[0 + 3];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x3956C25B + b[bm + 4];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x59F111F1 + b[bm + 5];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x923F82A4 + b[bm + 6];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0xAB1C5ED5 + b[bm + 7];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0xD807AA98 + b[bm + 8];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x12835B01 + b[bm + 9];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x243185BE + b[bm + 10];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x550C7DC3 + b[bm + 11];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x72BE5D74 + b[bm + 12];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x80DEB1FE + b[bm + 13];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x9BDC06A7 + b[bm + 14];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0xC19BF174 + b[bm + 15];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0xE49B69C1 + b[bm + 16];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0xEFBE4786 + b[bm + 17];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x0FC19DC6 + b[bm + 18];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x240CA1CC + b[bm + 19];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x2DE92C6F + b[bm + 20];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x4A7484AA + b[bm + 21];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x5CB0A9DC + b[bm + 22];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x76F988DA + b[bm + 23];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x983E5152 + b[bm + 24];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0xA831C66D + b[bm + 25];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0xB00327C8 + b[bm + 26];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0xBF597FC7 + b[bm + 27];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0xC6E00BF3 + b[bm + 28];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0xD5A79147 + b[bm + 29];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x06CA6351 + b[bm + 30];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x14292967 + b[bm + 31];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);

      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x27B70A85 + b[bm + 32];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x2E1B2138 + b[bm + 33];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x4D2C6DFC + b[bm + 34];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x53380D13 + b[bm + 35];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x650A7354 + b[bm + 36];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x766A0ABB + b[bm + 37];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x81C2C92E + b[bm + 38];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x92722C85 + b[bm + 39];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0xA2BFE8A1 + b[bm + 40];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0xA81A664B + b[bm + 41];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0xC24B8B70 + b[bm + 42];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0xC76C51A3 + b[bm + 43];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0xD192E819 + b[bm + 44];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0xD6990624 + b[bm + 45];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0xF40E3585 + b[bm + 46];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x106AA070 + b[bm + 47];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x19A4C116 + b[bm + 48];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x1E376C08 + b[bm + 49];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x2748774C + b[bm + 50];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x34B0BCB5 + b[bm + 51];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x391C0CB3 + b[bm + 52];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0x4ED8AA4A + b[bm + 53];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0x5B9CCA4F + b[bm + 54];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0x682E6FF3 + b[bm + 55];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);
      bb += B((((ay) << 26) | ((ay) >> 6)), (((ay) << 21) | ((ay) >> 11)), (((ay) << 7) | ((ay) >> 25))) + C(ba, ay, az) + 0x748F82EE + b[bm + 56];
      ax += bb;
      bb += B((((au) << 30) | ((au) >> 2)), (((au) << 19) | ((au) >> 13)), (((au) << 10) | ((au) >> 22))) + D(au, av, aw);
      ba += B((((ax) << 26) | ((ax) >> 6)), (((ax) << 21) | ((ax) >> 11)), (((ax) << 7) | ((ax) >> 25))) + C(az, ax, ay) + 0x78A5636F + b[bm + 57];
      aw += ba;
      ba += B((((bb) << 30) | ((bb) >> 2)), (((bb) << 19) | ((bb) >> 13)), (((bb) << 10) | ((bb) >> 22))) + D(bb, au, av);
      az += B((((aw) << 26) | ((aw) >> 6)), (((aw) << 21) | ((aw) >> 11)), (((aw) << 7) | ((aw) >> 25))) + C(ay, aw, ax) + 0x84C87814 + b[bm + 58];
      av += az;
      az += B((((ba) << 30) | ((ba) >> 2)), (((ba) << 19) | ((ba) >> 13)), (((ba) << 10) | ((ba) >> 22))) + D(ba, bb, au);
      ay += B((((av) << 26) | ((av) >> 6)), (((av) << 21) | ((av) >> 11)), (((av) << 7) | ((av) >> 25))) + C(ax, av, aw) + 0x8CC70208 + b[bm + 59];
      au += ay;
      ay += B((((az) << 30) | ((az) >> 2)), (((az) << 19) | ((az) >> 13)), (((az) << 10) | ((az) >> 22))) + D(az, ba, bb);
      ax += B((((au) << 26) | ((au) >> 6)), (((au) << 21) | ((au) >> 11)), (((au) << 7) | ((au) >> 25))) + C(aw, au, av) + 0x90BEFFFA + b[bm + 60];
      bb += ax;
      ax += B((((ay) << 30) | ((ay) >> 2)), (((ay) << 19) | ((ay) >> 13)), (((ay) << 10) | ((ay) >> 22))) + D(ay, az, ba);
      aw += B((((bb) << 26) | ((bb) >> 6)), (((bb) << 21) | ((bb) >> 11)), (((bb) << 7) | ((bb) >> 25))) + C(av, bb, au) + 0xA4506CEB + b[bm + 61];
      ba += aw;
      aw += B((((ax) << 30) | ((ax) >> 2)), (((ax) << 19) | ((ax) >> 13)), (((ax) << 10) | ((ax) >> 22))) + D(ax, ay, az);
      av += B((((ba) << 26) | ((ba) >> 6)), (((ba) << 21) | ((ba) >> 11)), (((ba) << 7) | ((ba) >> 25))) + C(au, ba, bb) + 0xBEF9A3F7 + b[bm + 62];
      az += av;
      av += B((((aw) << 30) | ((aw) >> 2)), (((aw) << 19) | ((aw) >> 13)), (((aw) << 10) | ((aw) >> 22))) + D(aw, ax, ay);
      au += B((((az) << 26) | ((az) >> 6)), (((az) << 21) | ((az) >> 11)), (((az) << 7) | ((az) >> 25))) + C(bb, az, ba) + 0xC67178F2 + b[bm + 63];
      ay += au;
      au += B((((av) << 30) | ((av) >> 2)), (((av) << 19) | ((av) >> 13)), (((av) << 10) | ((av) >> 22))) + D(av, aw, ax);

      g += au;
      h += av;
      i += aw;
      j += ax;
      k += ay;
      l += az;
      m += ba;
      n += bb;

      d[(f * 8) + 0] = g;
      d[(f * 8) + 1] = h;
      d[(f * 8) + 2] = i;
      d[(f * 8) + 3] = j;
      d[(f * 8) + 4] = k;
      d[(f * 8) + 5] = l;
      d[(f * 8) + 6] = m;
      d[(f * 8) + 7] = n;

      bm += (64);
    }

    f += get_global_size(0);
  }
}

__kernel void H(__global int* a, __global int* b, __global unsigned char* c, __global unsigned int* d, __global unsigned int* e, __global unsigned int* f, __global unsigned int* g, __global unsigned int* h, __global int* i) {
  int j = get_global_id(0);

  unsigned int k;
  unsigned int l;
  unsigned int m;
  unsigned int n;
  unsigned int o;
  unsigned int p;
  unsigned int q;
  unsigned int r;

  unsigned int s;
  unsigned int t;
  unsigned int u;
  unsigned int v;
  unsigned int w;
  unsigned int x;
  unsigned int y;
  unsigned int z;

  int aa = a[0];
  while (j < aa) {
    k = i[(j * 8) + 0];
    l = i[(j * 8) + 1];
    m = i[(j * 8) + 2];
    n = i[(j * 8) + 3];
    o = i[(j * 8) + 4];
    p = i[(j * 8) + 5];
    q = i[(j * 8) + 6];
    r = i[(j * 8) + 7];

    s = e[0] ^ k;
    t = f[0] ^ l;
    u = g[0] ^ m;
    v = h[0] ^ n;

    w = B(B(Ga[s >> 24], Gb[(t >> 16) & 0xFF], Gc[(u >> 8) & 0xFF]), Gd[v & 0xFF], o);
    x = B(B(Ga[t >> 24], Gb[(u >> 16) & 0xFF], Gc[(v >> 8) & 0xFF]), Gd[s & 0xFF], p);
    y = B(B(Ga[u >> 24], Gb[(v >> 16) & 0xFF], Gc[(s >> 8) & 0xFF]), Gd[t & 0xFF], q);
    z = B(B(Ga[v >> 24], Gb[(s >> 16) & 0xFF], Gc[(t >> 8) & 0xFF]), Gd[u & 0xFF], r);

    k ^= B(B((Gc[(r >> 24)] & 0x000000FF), (Gd[(r >> 16) & 0xFF] & 0xFF000000), (Ga[(r >> 8) & 0xFF] & 0x00FF0000)), (Gb[(r)&0xFF] & 0x0000FF00), 0x01000000);
    l ^= k;
    m ^= l;
    n ^= m;

    s = B(B(Ga[w >> 24], Gb[(x >> 16) & 0xFF], Gc[(y >> 8) & 0xFF]), Gd[z & 0xFF], k);
    t = B(B(Ga[x >> 24], Gb[(y >> 16) & 0xFF], Gc[(z >> 8) & 0xFF]), Gd[w & 0xFF], l);
    u = B(B(Ga[y >> 24], Gb[(z >> 16) & 0xFF], Gc[(w >> 8) & 0xFF]), Gd[x & 0xFF], m);
    v = B(B(Ga[z >> 24], Gb[(w >> 16) & 0xFF], Gc[(x >> 8) & 0xFF]), Gd[y & 0xFF], n);

    o ^= (Gd[(n >> 24)] & 0xFF000000) ^ (Ga[(n >> 16) & 0xFF] & 0x00FF0000) ^ (Gb[(n >> 8) & 0xFF] & 0x0000FF00) ^ (Gc[(n)&0xFF] & 0x000000FF);
    p ^= o;
    q ^= p;
    r ^= q;

    w = B(B(Ga[s >> 24], Gb[(t >> 16) & 0xFF], Gc[(u >> 8) & 0xFF]), Gd[v & 0xFF], o);
    x = B(B(Ga[t >> 24], Gb[(u >> 16) & 0xFF], Gc[(v >> 8) & 0xFF]), Gd[s & 0xFF], p);
    y = B(B(Ga[u >> 24], Gb[(v >> 16) & 0xFF], Gc[(s >> 8) & 0xFF]), Gd[t & 0xFF], q);
    z = B(B(Ga[v >> 24], Gb[(s >> 16) & 0xFF], Gc[(t >> 8) & 0xFF]), Gd[u & 0xFF], r);

    k ^= (Gc[(r >> 24)] & 0x000000FF) ^ (Gd[(r >> 16) & 0xFF] & 0xFF000000) ^ (Ga[(r >> 8) & 0xFF] & 0x00FF0000) ^ (Gb[(r)&0xFF] & 0x0000FF00) ^ 0x02000000;
    l ^= k;
    m ^= l;
    n ^= m;

    s = B(B(Ga[w >> 24], Gb[(x >> 16) & 0xFF], Gc[(y >> 8) & 0xFF]), Gd[z & 0xFF], k);
    t = B(B(Ga[x >> 24], Gb[(y >> 16) & 0xFF], Gc[(z >> 8) & 0xFF]), Gd[w & 0xFF], l);
    u = B(B(Ga[y >> 24], Gb[(z >> 16) & 0xFF], Gc[(w >> 8) & 0xFF]), Gd[x & 0xFF], m);
    v = B(B(Ga[z >> 24], Gb[(w >> 16) & 0xFF], Gc[(x >> 8) & 0xFF]), Gd[y & 0xFF], n);

    o ^= (Gd[(n >> 24)] & 0xFF000000) ^ (Ga[(n >> 16) & 0xFF] & 0x00FF0000) ^ (Gb[(n >> 8) & 0xFF] & 0x0000FF00) ^ (Gc[(n)&0xFF] & 0x000000FF);
    p ^= o;
    q ^= p;
    r ^= q;

    w = B(B(Ga[s >> 24], Gb[(t >> 16) & 0xFF], Gc[(u >> 8) & 0xFF]), Gd[v & 0xFF], o);
    x = B(B(Ga[t >> 24], Gb[(u >> 16) & 0xFF], Gc[(v >> 8) & 0xFF]), Gd[s & 0xFF], p);
    y = B(B(Ga[u >> 24], Gb[(v >> 16) & 0xFF], Gc[(s >> 8) & 0xFF]), Gd[t & 0xFF], q);
    z = B(B(Ga[v >> 24], Gb[(s >> 16) & 0xFF], Gc[(t >> 8) & 0xFF]), Gd[u & 0xFF], r);

    k ^= (Gc[(r >> 24)] & 0x000000FF) ^ (Gd[(r >> 16) & 0xFF] & 0xFF000000) ^ (Ga[(r >> 8) & 0xFF] & 0x00FF0000) ^ (Gb[(r)&0xFF] & 0x0000FF00) ^ 0x04000000;
    l ^= k;
    m ^= l;
    n ^= m;

    s = B(B(Ga[w >> 24], Gb[(x >> 16) & 0xFF], Gc[(y >> 8) & 0xFF]), Gd[z & 0xFF], k);
    t = B(B(Ga[x >> 24], Gb[(y >> 16) & 0xFF], Gc[(z >> 8) & 0xFF]), Gd[w & 0xFF], l);
    u = B(B(Ga[y >> 24], Gb[(z >> 16) & 0xFF], Gc[(w >> 8) & 0xFF]), Gd[x & 0xFF], m);
    v = B(B(Ga[z >> 24], Gb[(w >> 16) & 0xFF], Gc[(x >> 8) & 0xFF]), Gd[y & 0xFF], n);

    o ^= (Gd[(n >> 24)] & 0xFF000000) ^ (Ga[(n >> 16) & 0xFF] & 0x00FF0000) ^ (Gb[(n >> 8) & 0xFF] & 0x0000FF00) ^ (Gc[(n)&0xFF] & 0x000000FF);
    p ^= o;
    q ^= p;
    r ^= q;

    w = B(B(Ga[s >> 24], Gb[(t >> 16) & 0xFF], Gc[(u >> 8) & 0xFF]), Gd[v & 0xFF], o);
    x = B(B(Ga[t >> 24], Gb[(u >> 16) & 0xFF], Gc[(v >> 8) & 0xFF]), Gd[s & 0xFF], p);
    y = B(B(Ga[u >> 24], Gb[(v >> 16) & 0xFF], Gc[(s >> 8) & 0xFF]), Gd[t & 0xFF], q);
    z = B(B(Ga[v >> 24], Gb[(s >> 16) & 0xFF], Gc[(t >> 8) & 0xFF]), Gd[u & 0xFF], r);

    k ^= (Gc[(r >> 24)] & 0x000000FF) ^ (Gd[(r >> 16) & 0xFF] & 0xFF000000) ^ (Ga[(r >> 8) & 0xFF] & 0x00FF0000) ^ (Gb[(r)&0xFF] & 0x0000FF00) ^ 0x08000000;
    l ^= k;
    m ^= l;
    n ^= m;

    s = B(B(Ga[w >> 24], Gb[(x >> 16) & 0xFF], Gc[(y >> 8) & 0xFF]), Gd[z & 0xFF], k);
    t = B(B(Ga[x >> 24], Gb[(y >> 16) & 0xFF], Gc[(z >> 8) & 0xFF]), Gd[w & 0xFF], l);
    u = B(B(Ga[y >> 24], Gb[(z >> 16) & 0xFF], Gc[(w >> 8) & 0xFF]), Gd[x & 0xFF], m);
    v = B(B(Ga[z >> 24], Gb[(w >> 16) & 0xFF], Gc[(x >> 8) & 0xFF]), Gd[y & 0xFF], n);

    o ^= (Gd[(n >> 24)] & 0xFF000000) ^ (Ga[(n >> 16) & 0xFF] & 0x00FF0000) ^ (Gb[(n >> 8) & 0xFF] & 0x0000FF00) ^ (Gc[(n)&0xFF] & 0x000000FF);
    p ^= o;
    q ^= p;
    r ^= q;

    w = B(B(Ga[s >> 24], Gb[(t >> 16) & 0xFF], Gc[(u >> 8) & 0xFF]), Gd[v & 0xFF], o);
    x = B(B(Ga[t >> 24], Gb[(u >> 16) & 0xFF], Gc[(v >> 8) & 0xFF]), Gd[s & 0xFF], p);
    y = B(B(Ga[u >> 24], Gb[(v >> 16) & 0xFF], Gc[(s >> 8) & 0xFF]), Gd[t & 0xFF], q);
    z = B(B(Ga[v >> 24], Gb[(s >> 16) & 0xFF], Gc[(t >> 8) & 0xFF]), Gd[u & 0xFF], r);

    k ^= (Gc[(r >> 24)] & 0x000000FF) ^ (Gd[(r >> 16) & 0xFF] & 0xFF000000) ^ (Ga[(r >> 8) & 0xFF] & 0x00FF0000) ^ (Gb[(r)&0xFF] & 0x0000FF00) ^ 0x10000000;
    l ^= k;
    m ^= l;
    n ^= m;

    s = B(B(Ga[w >> 24], Gb[(x >> 16) & 0xFF], Gc[(y >> 8) & 0xFF]), Gd[z & 0xFF], k);
    t = B(B(Ga[x >> 24], Gb[(y >> 16) & 0xFF], Gc[(z >> 8) & 0xFF]), Gd[w & 0xFF], l);
    u = B(B(Ga[y >> 24], Gb[(z >> 16) & 0xFF], Gc[(w >> 8) & 0xFF]), Gd[x & 0xFF], m);
    v = B(B(Ga[z >> 24], Gb[(w >> 16) & 0xFF], Gc[(x >> 8) & 0xFF]), Gd[y & 0xFF], n);

    o ^= (Gd[(n >> 24)] & 0xFF000000) ^ (Ga[(n >> 16) & 0xFF] & 0x00FF0000) ^ (Gb[(n >> 8) & 0xFF] & 0x0000FF00) ^ (Gc[(n)&0xFF] & 0x000000FF);
    p ^= o;
    q ^= p;
    r ^= q;

    w = B(B(Ga[s >> 24], Gb[(t >> 16) & 0xFF], Gc[(u >> 8) & 0xFF]), Gd[v & 0xFF], o);
    x = B(B(Ga[t >> 24], Gb[(u >> 16) & 0xFF], Gc[(v >> 8) & 0xFF]), Gd[s & 0xFF], p);
    y = B(B(Ga[u >> 24], Gb[(v >> 16) & 0xFF], Gc[(s >> 8) & 0xFF]), Gd[t & 0xFF], q);
    z = B(B(Ga[v >> 24], Gb[(s >> 16) & 0xFF], Gc[(t >> 8) & 0xFF]), Gd[u & 0xFF], r);

    k ^= (Gc[(r >> 24)] & 0x000000FF) ^ (Gd[(r >> 16) & 0xFF] & 0xFF000000) ^ (Ga[(r >> 8) & 0xFF] & 0x00FF0000) ^ (Gb[(r)&0xFF] & 0x0000FF00) ^ 0x20000000;
    l ^= k;
    m ^= l;
    n ^= m;

    s = B(B(Ga[w >> 24], Gb[(x >> 16) & 0xFF], Gc[(y >> 8) & 0xFF]), Gd[z & 0xFF], k);
    t = B(B(Ga[x >> 24], Gb[(y >> 16) & 0xFF], Gc[(z >> 8) & 0xFF]), Gd[w & 0xFF], l);
    u = B(B(Ga[y >> 24], Gb[(z >> 16) & 0xFF], Gc[(w >> 8) & 0xFF]), Gd[x & 0xFF], m);
    v = B(B(Ga[z >> 24], Gb[(w >> 16) & 0xFF], Gc[(x >> 8) & 0xFF]), Gd[y & 0xFF], n);

    o ^= (Gd[(n >> 24)] & 0xFF000000) ^ (Ga[(n >> 16) & 0xFF] & 0x00FF0000) ^ (Gb[(n >> 8) & 0xFF] & 0x0000FF00) ^ (Gc[(n)&0xFF] & 0x000000FF);
    p ^= o;
    q ^= p;
    r ^= q;

    w = B(B(Ga[s >> 24], Gb[(t >> 16) & 0xFF], Gc[(u >> 8) & 0xFF]), Gd[v & 0xFF], o);
    x = B(B(Ga[t >> 24], Gb[(u >> 16) & 0xFF], Gc[(v >> 8) & 0xFF]), Gd[s & 0xFF], p);
    y = B(B(Ga[u >> 24], Gb[(v >> 16) & 0xFF], Gc[(s >> 8) & 0xFF]), Gd[t & 0xFF], q);
    z = B(B(Ga[v >> 24], Gb[(s >> 16) & 0xFF], Gc[(t >> 8) & 0xFF]), Gd[u & 0xFF], r);

    k ^= (Gc[(r >> 24)] & 0x000000FF) ^ (Gd[(r >> 16) & 0xFF] & 0xFF000000) ^ (Ga[(r >> 8) & 0xFF] & 0x00FF0000) ^ (Gb[(r)&0xFF] & 0x0000FF00) ^ 0x40000000;
    l ^= k;
    m ^= l;
    n ^= m;

    s = (Gc[(w >> 24)] & 0xFF000000) ^ (Gd[(x >> 16) & 0xFF] & 0x00FF0000) ^ (Ga[(y >> 8) & 0xFF] & 0x0000FF00) ^ (Gb[(z)&0xFF] & 0x000000FF) ^ k;

    t = (Gc[(x >> 24)] & 0xFF000000) ^ (Gd[(y >> 16) & 0xFF] & 0x00FF0000) ^ (Ga[(z >> 8) & 0xFF] & 0x0000FF00) ^ (Gb[(w)&0xFF] & 0x000000FF) ^ l;

    u = (Gc[(y >> 24)] & 0xFF000000) ^ (Gd[(z >> 16) & 0xFF] & 0x00FF0000) ^ (Ga[(w >> 8) & 0xFF] & 0x0000FF00) ^ (Gb[(x)&0xFF] & 0x000000FF) ^ m;

    v = (Gc[(z >> 24)] & 0xFF000000) ^ (Gd[(w >> 16) & 0xFF] & 0x00FF0000) ^ (Ga[(x >> 8) & 0xFF] & 0x0000FF00) ^ (Gb[(y)&0xFF] & 0x000000FF) ^ n;

    w = (unsigned int)(((unsigned int)(s & 0xff000000)) >> 24) | (unsigned int)((unsigned int)(s & 0x00ff0000) >> 8) | (unsigned int)((unsigned int)(s & 0x0000ff00) << 8) | (unsigned int)((unsigned int)(s & 0x000000ff) << 24);
    y = (unsigned int)(((unsigned int)(u & 0xff000000)) >> 24) | (unsigned int)((unsigned int)(u & 0x00ff0000) >> 8) | (unsigned int)((unsigned int)(u & 0x0000ff00) << 8) | (unsigned int)((unsigned int)(u & 0x000000ff) << 24);
    if (((c[16 + 0] ^ ((unsigned char)w)) == 44) && ((c[16 + 1] ^ ((unsigned char)(w >> 8))) == 0x00) && ((c[16 + 8] ^ ((unsigned char)y)) <= 0x05) && ((c[16 + 9] ^ ((unsigned char)(y >> 8))) == 0x20)) {
      b[0] = j;
      break;
    }

    j += get_global_size(0);
  }
}