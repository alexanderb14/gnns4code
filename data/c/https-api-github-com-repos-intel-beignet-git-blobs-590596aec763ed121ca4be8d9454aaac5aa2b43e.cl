typedef unsigned char uchar; typedef unsigned short ushort; typedef unsigned int uint; typedef unsigned long ulong; typedef __typeof__(sizeof(int)) size_t; typedef __typeof__((int*)0 - (int*)0) ptrdiff_t; typedef long int intptr_t; typedef long unsigned int uintptr_t; typedef char char2 __attribute__((ext_vector_type(2))); typedef char char3 __attribute__((ext_vector_type(3))); typedef char char4 __attribute__((ext_vector_type(4))); typedef char char8 __attribute__((ext_vector_type(8))); typedef char char16 __attribute__((ext_vector_type(16))); ; typedef uchar uchar2 __attribute__((ext_vector_type(2))); typedef uchar uchar3 __attribute__((ext_vector_type(3))); typedef uchar uchar4 __attribute__((ext_vector_type(4))); typedef uchar uchar8 __attribute__((ext_vector_type(8))); typedef uchar uchar16 __attribute__((ext_vector_type(16))); ; typedef short short2 __attribute__((ext_vector_type(2))); typedef short short3 __attribute__((ext_vector_type(3))); typedef short short4 __attribute__((ext_vector_type(4))); typedef short short8 __attribute__((ext_vector_type(8))); typedef short short16 __attribute__((ext_vector_type(16))); ; typedef ushort ushort2 __attribute__((ext_vector_type(2))); typedef ushort ushort3 __attribute__((ext_vector_type(3))); typedef ushort ushort4 __attribute__((ext_vector_type(4))); typedef ushort ushort8 __attribute__((ext_vector_type(8))); typedef ushort ushort16 __attribute__((ext_vector_type(16))); ; typedef int int2 __attribute__((ext_vector_type(2))); typedef int int3 __attribute__((ext_vector_type(3))); typedef int int4 __attribute__((ext_vector_type(4))); typedef int int8 __attribute__((ext_vector_type(8))); typedef int int16 __attribute__((ext_vector_type(16))); ; typedef uint uint2 __attribute__((ext_vector_type(2))); typedef uint uint3 __attribute__((ext_vector_type(3))); typedef uint uint4 __attribute__((ext_vector_type(4))); typedef uint uint8 __attribute__((ext_vector_type(8))); typedef uint uint16 __attribute__((ext_vector_type(16))); ; typedef long long2 __attribute__((ext_vector_type(2))); typedef long long3 __attribute__((ext_vector_type(3))); typedef long long4 __attribute__((ext_vector_type(4))); typedef long long8 __attribute__((ext_vector_type(8))); typedef long long16 __attribute__((ext_vector_type(16))); ; typedef ulong ulong2 __attribute__((ext_vector_type(2))); typedef ulong ulong3 __attribute__((ext_vector_type(3))); typedef ulong ulong4 __attribute__((ext_vector_type(4))); typedef ulong ulong8 __attribute__((ext_vector_type(8))); typedef ulong ulong16 __attribute__((ext_vector_type(16))); ; typedef float float2 __attribute__((ext_vector_type(2))); typedef float float3 __attribute__((ext_vector_type(3))); typedef float float4 __attribute__((ext_vector_type(4))); typedef float float8 __attribute__((ext_vector_type(8))); typedef float float16 __attribute__((ext_vector_type(16))); ; typedef double double2 __attribute__((ext_vector_type(2))); typedef double double3 __attribute__((ext_vector_type(3))); typedef double double4 __attribute__((ext_vector_type(4))); typedef double double8 __attribute__((ext_vector_type(8))); typedef double double16 __attribute__((ext_vector_type(16))); ; typedef half half2 __attribute__((ext_vector_type(2))); typedef half half3 __attribute__((ext_vector_type(3))); typedef half half4 __attribute__((ext_vector_type(4))); typedef half half8 __attribute__((ext_vector_type(8))); typedef half half16 __attribute__((ext_vector_type(16))); ; typedef uint cl_mem_fence_flags; typedef enum { memory_order_relaxed, memory_order_acquire, memory_order_release, memory_order_acq_rel, memory_order_seq_cst } memory_order;

typedef enum {
  memory_scope_work_item,
  memory_scope_work_group,
  memory_scope_device,
  memory_scope_all_svm_devices,
  memory_scope_sub_group,
} memory_scope;
__attribute__((overloadable)) void A(cl_mem_fence_flags a);
__attribute__((overloadable)) void B(void);
__attribute__((overloadable)) void C(cl_mem_fence_flags a);
__attribute__((overloadable)) void D(cl_mem_fence_flags a);
__attribute__((overloadable)) void E(cl_mem_fence_flags a);

cl_mem_fence_flags F(void* a);
__attribute__((overloadable)) uint G(void);
__attribute__((overloadable)) size_t H(uint a);
__attribute__((overloadable)) size_t I(uint a);
__attribute__((overloadable)) size_t J(uint a);
__attribute__((overloadable)) size_t K(uint a);
__attribute__((overloadable)) size_t L(uint a);
__attribute__((overloadable)) size_t M(uint a);
__attribute__((overloadable)) size_t N(uint a);
__attribute__((overloadable)) size_t O(uint a);
__attribute__((overloadable)) size_t P(void);
__attribute__((overloadable)) size_t Q(void);
int R(constant char* a, ...);
int S(constant char* a);
__attribute__((overloadable)) char2 T(char2 a, uchar2 b);
;
__attribute__((overloadable)) char2 T(char4 a, uchar2 b);
;
__attribute__((overloadable)) char2 T(char8 a, uchar2 b);
;
__attribute__((overloadable)) char2 T(char16 a, uchar2 b);
__attribute__((overloadable)) char4 T(char2 a, uchar4 b);
;
__attribute__((overloadable)) char4 T(char4 a, uchar4 b);
;
__attribute__((overloadable)) char4 T(char8 a, uchar4 b);
;
__attribute__((overloadable)) char4 T(char16 a, uchar4 b);
__attribute__((overloadable)) char8 T(char2 a, uchar8 b);
;
__attribute__((overloadable)) char8 T(char4 a, uchar8 b);
;
__attribute__((overloadable)) char8 T(char8 a, uchar8 b);
;
__attribute__((overloadable)) char8 T(char16 a, uchar8 b);
__attribute__((overloadable)) char16 T(char2 a, uchar16 b);
;
__attribute__((overloadable)) char16 T(char4 a, uchar16 b);
;
__attribute__((overloadable)) char16 T(char8 a, uchar16 b);
;
__attribute__((overloadable)) char16 T(char16 a, uchar16 b);
__attribute__((overloadable)) char2 T(char2 a, ushort2 b);
;
__attribute__((overloadable)) char2 T(char4 a, ushort2 b);
;
__attribute__((overloadable)) char2 T(char8 a, ushort2 b);
;
__attribute__((overloadable)) char2 T(char16 a, ushort2 b);
__attribute__((overloadable)) char4 T(char2 a, ushort4 b);
;
__attribute__((overloadable)) char4 T(char4 a, ushort4 b);
;
__attribute__((overloadable)) char4 T(char8 a, ushort4 b);
;
__attribute__((overloadable)) char4 T(char16 a, ushort4 b);
__attribute__((overloadable)) char8 T(char2 a, ushort8 b);
;
__attribute__((overloadable)) char8 T(char4 a, ushort8 b);
;
__attribute__((overloadable)) char8 T(char8 a, ushort8 b);
;
__attribute__((overloadable)) char8 T(char16 a, ushort8 b);
__attribute__((overloadable)) char16 T(char2 a, ushort16 b);
;
__attribute__((overloadable)) char16 T(char4 a, ushort16 b);
;
__attribute__((overloadable)) char16 T(char8 a, ushort16 b);
;
__attribute__((overloadable)) char16 T(char16 a, ushort16 b);
__attribute__((overloadable)) char2 T(char2 a, uint2 b);
;
__attribute__((overloadable)) char2 T(char4 a, uint2 b);
;
__attribute__((overloadable)) char2 T(char8 a, uint2 b);
;
__attribute__((overloadable)) char2 T(char16 a, uint2 b);
__attribute__((overloadable)) char4 T(char2 a, uint4 b);
;
__attribute__((overloadable)) char4 T(char4 a, uint4 b);
;
__attribute__((overloadable)) char4 T(char8 a, uint4 b);
;
__attribute__((overloadable)) char4 T(char16 a, uint4 b);
__attribute__((overloadable)) char8 T(char2 a, uint8 b);
;
__attribute__((overloadable)) char8 T(char4 a, uint8 b);
;
__attribute__((overloadable)) char8 T(char8 a, uint8 b);
;
__attribute__((overloadable)) char8 T(char16 a, uint8 b);
__attribute__((overloadable)) char16 T(char2 a, uint16 b);
;
__attribute__((overloadable)) char16 T(char4 a, uint16 b);
;
__attribute__((overloadable)) char16 T(char8 a, uint16 b);
;
__attribute__((overloadable)) char16 T(char16 a, uint16 b);
__attribute__((overloadable)) char2 T(char2 a, ulong2 b);
;
__attribute__((overloadable)) char2 T(char4 a, ulong2 b);
;
__attribute__((overloadable)) char2 T(char8 a, ulong2 b);
;
__attribute__((overloadable)) char2 T(char16 a, ulong2 b);
__attribute__((overloadable)) char4 T(char2 a, ulong4 b);
;
__attribute__((overloadable)) char4 T(char4 a, ulong4 b);
;
__attribute__((overloadable)) char4 T(char8 a, ulong4 b);
;
__attribute__((overloadable)) char4 T(char16 a, ulong4 b);
__attribute__((overloadable)) char8 T(char2 a, ulong8 b);
;
__attribute__((overloadable)) char8 T(char4 a, ulong8 b);
;
__attribute__((overloadable)) char8 T(char8 a, ulong8 b);
;
__attribute__((overloadable)) char8 T(char16 a, ulong8 b);
__attribute__((overloadable)) char16 T(char2 a, ulong16 b);
;
__attribute__((overloadable)) char16 T(char4 a, ulong16 b);
;
__attribute__((overloadable)) char16 T(char8 a, ulong16 b);
;
__attribute__((overloadable)) char16 T(char16 a, ulong16 b);
__attribute__((overloadable)) uchar2 T(uchar2 a, uchar2 b);
;
__attribute__((overloadable)) uchar2 T(uchar4 a, uchar2 b);
;
__attribute__((overloadable)) uchar2 T(uchar8 a, uchar2 b);
;
__attribute__((overloadable)) uchar2 T(uchar16 a, uchar2 b);
__attribute__((overloadable)) uchar4 T(uchar2 a, uchar4 b);
;
__attribute__((overloadable)) uchar4 T(uchar4 a, uchar4 b);
;
__attribute__((overloadable)) uchar4 T(uchar8 a, uchar4 b);
;
__attribute__((overloadable)) uchar4 T(uchar16 a, uchar4 b);
__attribute__((overloadable)) uchar8 T(uchar2 a, uchar8 b);
;
__attribute__((overloadable)) uchar8 T(uchar4 a, uchar8 b);
;
__attribute__((overloadable)) uchar8 T(uchar8 a, uchar8 b);
;
__attribute__((overloadable)) uchar8 T(uchar16 a, uchar8 b);
__attribute__((overloadable)) uchar16 T(uchar2 a, uchar16 b);
;
__attribute__((overloadable)) uchar16 T(uchar4 a, uchar16 b);
;
__attribute__((overloadable)) uchar16 T(uchar8 a, uchar16 b);
;
__attribute__((overloadable)) uchar16 T(uchar16 a, uchar16 b);
__attribute__((overloadable)) uchar2 T(uchar2 a, ushort2 b);
;
__attribute__((overloadable)) uchar2 T(uchar4 a, ushort2 b);
;
__attribute__((overloadable)) uchar2 T(uchar8 a, ushort2 b);
;
__attribute__((overloadable)) uchar2 T(uchar16 a, ushort2 b);
__attribute__((overloadable)) uchar4 T(uchar2 a, ushort4 b);
;
__attribute__((overloadable)) uchar4 T(uchar4 a, ushort4 b);
;
__attribute__((overloadable)) uchar4 T(uchar8 a, ushort4 b);
;
__attribute__((overloadable)) uchar4 T(uchar16 a, ushort4 b);
__attribute__((overloadable)) uchar8 T(uchar2 a, ushort8 b);
;
__attribute__((overloadable)) uchar8 T(uchar4 a, ushort8 b);
;
__attribute__((overloadable)) uchar8 T(uchar8 a, ushort8 b);
;
__attribute__((overloadable)) uchar8 T(uchar16 a, ushort8 b);
__attribute__((overloadable)) uchar16 T(uchar2 a, ushort16 b);
;
__attribute__((overloadable)) uchar16 T(uchar4 a, ushort16 b);
;
__attribute__((overloadable)) uchar16 T(uchar8 a, ushort16 b);
;
__attribute__((overloadable)) uchar16 T(uchar16 a, ushort16 b);
__attribute__((overloadable)) uchar2 T(uchar2 a, uint2 b);
;
__attribute__((overloadable)) uchar2 T(uchar4 a, uint2 b);
;
__attribute__((overloadable)) uchar2 T(uchar8 a, uint2 b);
;
__attribute__((overloadable)) uchar2 T(uchar16 a, uint2 b);
__attribute__((overloadable)) uchar4 T(uchar2 a, uint4 b);
;
__attribute__((overloadable)) uchar4 T(uchar4 a, uint4 b);
;
__attribute__((overloadable)) uchar4 T(uchar8 a, uint4 b);
;
__attribute__((overloadable)) uchar4 T(uchar16 a, uint4 b);
__attribute__((overloadable)) uchar8 T(uchar2 a, uint8 b);
;
__attribute__((overloadable)) uchar8 T(uchar4 a, uint8 b);
;
__attribute__((overloadable)) uchar8 T(uchar8 a, uint8 b);
;
__attribute__((overloadable)) uchar8 T(uchar16 a, uint8 b);
__attribute__((overloadable)) uchar16 T(uchar2 a, uint16 b);
;
__attribute__((overloadable)) uchar16 T(uchar4 a, uint16 b);
;
__attribute__((overloadable)) uchar16 T(uchar8 a, uint16 b);
;
__attribute__((overloadable)) uchar16 T(uchar16 a, uint16 b);
__attribute__((overloadable)) uchar2 T(uchar2 a, ulong2 b);
;
__attribute__((overloadable)) uchar2 T(uchar4 a, ulong2 b);
;
__attribute__((overloadable)) uchar2 T(uchar8 a, ulong2 b);
;
__attribute__((overloadable)) uchar2 T(uchar16 a, ulong2 b);
__attribute__((overloadable)) uchar4 T(uchar2 a, ulong4 b);
;
__attribute__((overloadable)) uchar4 T(uchar4 a, ulong4 b);
;
__attribute__((overloadable)) uchar4 T(uchar8 a, ulong4 b);
;
__attribute__((overloadable)) uchar4 T(uchar16 a, ulong4 b);
__attribute__((overloadable)) uchar8 T(uchar2 a, ulong8 b);
;
__attribute__((overloadable)) uchar8 T(uchar4 a, ulong8 b);
;
__attribute__((overloadable)) uchar8 T(uchar8 a, ulong8 b);
;
__attribute__((overloadable)) uchar8 T(uchar16 a, ulong8 b);
__attribute__((overloadable)) uchar16 T(uchar2 a, ulong16 b);
;
__attribute__((overloadable)) uchar16 T(uchar4 a, ulong16 b);
;
__attribute__((overloadable)) uchar16 T(uchar8 a, ulong16 b);
;
__attribute__((overloadable)) uchar16 T(uchar16 a, ulong16 b);
__attribute__((overloadable)) short2 T(short2 a, uchar2 b);
;
__attribute__((overloadable)) short2 T(short4 a, uchar2 b);
;
__attribute__((overloadable)) short2 T(short8 a, uchar2 b);
;
__attribute__((overloadable)) short2 T(short16 a, uchar2 b);
__attribute__((overloadable)) short4 T(short2 a, uchar4 b);
;
__attribute__((overloadable)) short4 T(short4 a, uchar4 b);
;
__attribute__((overloadable)) short4 T(short8 a, uchar4 b);
;
__attribute__((overloadable)) short4 T(short16 a, uchar4 b);
__attribute__((overloadable)) short8 T(short2 a, uchar8 b);
;
__attribute__((overloadable)) short8 T(short4 a, uchar8 b);
;
__attribute__((overloadable)) short8 T(short8 a, uchar8 b);
;
__attribute__((overloadable)) short8 T(short16 a, uchar8 b);
__attribute__((overloadable)) short16 T(short2 a, uchar16 b);
;
__attribute__((overloadable)) short16 T(short4 a, uchar16 b);
;
__attribute__((overloadable)) short16 T(short8 a, uchar16 b);
;
__attribute__((overloadable)) short16 T(short16 a, uchar16 b);
__attribute__((overloadable)) short2 T(short2 a, ushort2 b);
;
__attribute__((overloadable)) short2 T(short4 a, ushort2 b);
;
__attribute__((overloadable)) short2 T(short8 a, ushort2 b);
;
__attribute__((overloadable)) short2 T(short16 a, ushort2 b);
__attribute__((overloadable)) short4 T(short2 a, ushort4 b);
;
__attribute__((overloadable)) short4 T(short4 a, ushort4 b);
;
__attribute__((overloadable)) short4 T(short8 a, ushort4 b);
;
__attribute__((overloadable)) short4 T(short16 a, ushort4 b);
__attribute__((overloadable)) short8 T(short2 a, ushort8 b);
;
__attribute__((overloadable)) short8 T(short4 a, ushort8 b);
;
__attribute__((overloadable)) short8 T(short8 a, ushort8 b);
;
__attribute__((overloadable)) short8 T(short16 a, ushort8 b);
__attribute__((overloadable)) short16 T(short2 a, ushort16 b);
;
__attribute__((overloadable)) short16 T(short4 a, ushort16 b);
;
__attribute__((overloadable)) short16 T(short8 a, ushort16 b);
;
__attribute__((overloadable)) short16 T(short16 a, ushort16 b);
__attribute__((overloadable)) short2 T(short2 a, uint2 b);
;
__attribute__((overloadable)) short2 T(short4 a, uint2 b);
;
__attribute__((overloadable)) short2 T(short8 a, uint2 b);
;
__attribute__((overloadable)) short2 T(short16 a, uint2 b);
__attribute__((overloadable)) short4 T(short2 a, uint4 b);
;
__attribute__((overloadable)) short4 T(short4 a, uint4 b);
;
__attribute__((overloadable)) short4 T(short8 a, uint4 b);
;
__attribute__((overloadable)) short4 T(short16 a, uint4 b);
__attribute__((overloadable)) short8 T(short2 a, uint8 b);
;
__attribute__((overloadable)) short8 T(short4 a, uint8 b);
;
__attribute__((overloadable)) short8 T(short8 a, uint8 b);
;
__attribute__((overloadable)) short8 T(short16 a, uint8 b);
__attribute__((overloadable)) short16 T(short2 a, uint16 b);
;
__attribute__((overloadable)) short16 T(short4 a, uint16 b);
;
__attribute__((overloadable)) short16 T(short8 a, uint16 b);
;
__attribute__((overloadable)) short16 T(short16 a, uint16 b);
__attribute__((overloadable)) short2 T(short2 a, ulong2 b);
;
__attribute__((overloadable)) short2 T(short4 a, ulong2 b);
;
__attribute__((overloadable)) short2 T(short8 a, ulong2 b);
;
__attribute__((overloadable)) short2 T(short16 a, ulong2 b);
__attribute__((overloadable)) short4 T(short2 a, ulong4 b);
;
__attribute__((overloadable)) short4 T(short4 a, ulong4 b);
;
__attribute__((overloadable)) short4 T(short8 a, ulong4 b);
;
__attribute__((overloadable)) short4 T(short16 a, ulong4 b);
__attribute__((overloadable)) short8 T(short2 a, ulong8 b);
;
__attribute__((overloadable)) short8 T(short4 a, ulong8 b);
;
__attribute__((overloadable)) short8 T(short8 a, ulong8 b);
;
__attribute__((overloadable)) short8 T(short16 a, ulong8 b);
__attribute__((overloadable)) short16 T(short2 a, ulong16 b);
;
__attribute__((overloadable)) short16 T(short4 a, ulong16 b);
;
__attribute__((overloadable)) short16 T(short8 a, ulong16 b);
;
__attribute__((overloadable)) short16 T(short16 a, ulong16 b);
__attribute__((overloadable)) ushort2 T(ushort2 a, uchar2 b);
;
__attribute__((overloadable)) ushort2 T(ushort4 a, uchar2 b);
;
__attribute__((overloadable)) ushort2 T(ushort8 a, uchar2 b);
;
__attribute__((overloadable)) ushort2 T(ushort16 a, uchar2 b);
__attribute__((overloadable)) ushort4 T(ushort2 a, uchar4 b);
;
__attribute__((overloadable)) ushort4 T(ushort4 a, uchar4 b);
;
__attribute__((overloadable)) ushort4 T(ushort8 a, uchar4 b);
;
__attribute__((overloadable)) ushort4 T(ushort16 a, uchar4 b);
__attribute__((overloadable)) ushort8 T(ushort2 a, uchar8 b);
;
__attribute__((overloadable)) ushort8 T(ushort4 a, uchar8 b);
;
__attribute__((overloadable)) ushort8 T(ushort8 a, uchar8 b);
;
__attribute__((overloadable)) ushort8 T(ushort16 a, uchar8 b);
__attribute__((overloadable)) ushort16 T(ushort2 a, uchar16 b);
;
__attribute__((overloadable)) ushort16 T(ushort4 a, uchar16 b);
;
__attribute__((overloadable)) ushort16 T(ushort8 a, uchar16 b);
;
__attribute__((overloadable)) ushort16 T(ushort16 a, uchar16 b);
__attribute__((overloadable)) ushort2 T(ushort2 a, ushort2 b);
;
__attribute__((overloadable)) ushort2 T(ushort4 a, ushort2 b);
;
__attribute__((overloadable)) ushort2 T(ushort8 a, ushort2 b);
;
__attribute__((overloadable)) ushort2 T(ushort16 a, ushort2 b);
__attribute__((overloadable)) ushort4 T(ushort2 a, ushort4 b);
;
__attribute__((overloadable)) ushort4 T(ushort4 a, ushort4 b);
;
__attribute__((overloadable)) ushort4 T(ushort8 a, ushort4 b);
;
__attribute__((overloadable)) ushort4 T(ushort16 a, ushort4 b);
__attribute__((overloadable)) ushort8 T(ushort2 a, ushort8 b);
;
__attribute__((overloadable)) ushort8 T(ushort4 a, ushort8 b);
;
__attribute__((overloadable)) ushort8 T(ushort8 a, ushort8 b);
;
__attribute__((overloadable)) ushort8 T(ushort16 a, ushort8 b);
__attribute__((overloadable)) ushort16 T(ushort2 a, ushort16 b);
;
__attribute__((overloadable)) ushort16 T(ushort4 a, ushort16 b);
;
__attribute__((overloadable)) ushort16 T(ushort8 a, ushort16 b);
;
__attribute__((overloadable)) ushort16 T(ushort16 a, ushort16 b);
__attribute__((overloadable)) ushort2 T(ushort2 a, uint2 b);
;
__attribute__((overloadable)) ushort2 T(ushort4 a, uint2 b);
;
__attribute__((overloadable)) ushort2 T(ushort8 a, uint2 b);
;
__attribute__((overloadable)) ushort2 T(ushort16 a, uint2 b);
__attribute__((overloadable)) ushort4 T(ushort2 a, uint4 b);
;
__attribute__((overloadable)) ushort4 T(ushort4 a, uint4 b);
;
__attribute__((overloadable)) ushort4 T(ushort8 a, uint4 b);
;
__attribute__((overloadable)) ushort4 T(ushort16 a, uint4 b);
__attribute__((overloadable)) ushort8 T(ushort2 a, uint8 b);
;
__attribute__((overloadable)) ushort8 T(ushort4 a, uint8 b);
;
__attribute__((overloadable)) ushort8 T(ushort8 a, uint8 b);
;
__attribute__((overloadable)) ushort8 T(ushort16 a, uint8 b);
__attribute__((overloadable)) ushort16 T(ushort2 a, uint16 b);
;
__attribute__((overloadable)) ushort16 T(ushort4 a, uint16 b);
;
__attribute__((overloadable)) ushort16 T(ushort8 a, uint16 b);
;
__attribute__((overloadable)) ushort16 T(ushort16 a, uint16 b);
__attribute__((overloadable)) ushort2 T(ushort2 a, ulong2 b);
;
__attribute__((overloadable)) ushort2 T(ushort4 a, ulong2 b);
;
__attribute__((overloadable)) ushort2 T(ushort8 a, ulong2 b);
;
__attribute__((overloadable)) ushort2 T(ushort16 a, ulong2 b);
__attribute__((overloadable)) ushort4 T(ushort2 a, ulong4 b);
;
__attribute__((overloadable)) ushort4 T(ushort4 a, ulong4 b);
;
__attribute__((overloadable)) ushort4 T(ushort8 a, ulong4 b);
;
__attribute__((overloadable)) ushort4 T(ushort16 a, ulong4 b);
__attribute__((overloadable)) ushort8 T(ushort2 a, ulong8 b);
;
__attribute__((overloadable)) ushort8 T(ushort4 a, ulong8 b);
;
__attribute__((overloadable)) ushort8 T(ushort8 a, ulong8 b);
;
__attribute__((overloadable)) ushort8 T(ushort16 a, ulong8 b);
__attribute__((overloadable)) ushort16 T(ushort2 a, ulong16 b);
;
__attribute__((overloadable)) ushort16 T(ushort4 a, ulong16 b);
;
__attribute__((overloadable)) ushort16 T(ushort8 a, ulong16 b);
;
__attribute__((overloadable)) ushort16 T(ushort16 a, ulong16 b);
__attribute__((overloadable)) half2 T(half2 a, uchar2 b);
;
__attribute__((overloadable)) half2 T(half4 a, uchar2 b);
;
__attribute__((overloadable)) half2 T(half8 a, uchar2 b);
;
__attribute__((overloadable)) half2 T(half16 a, uchar2 b);
__attribute__((overloadable)) half4 T(half2 a, uchar4 b);
;
__attribute__((overloadable)) half4 T(half4 a, uchar4 b);
;
__attribute__((overloadable)) half4 T(half8 a, uchar4 b);
;
__attribute__((overloadable)) half4 T(half16 a, uchar4 b);
__attribute__((overloadable)) half8 T(half2 a, uchar8 b);
;
__attribute__((overloadable)) half8 T(half4 a, uchar8 b);
;
__attribute__((overloadable)) half8 T(half8 a, uchar8 b);
;
__attribute__((overloadable)) half8 T(half16 a, uchar8 b);
__attribute__((overloadable)) half16 T(half2 a, uchar16 b);
;
__attribute__((overloadable)) half16 T(half4 a, uchar16 b);
;
__attribute__((overloadable)) half16 T(half8 a, uchar16 b);
;
__attribute__((overloadable)) half16 T(half16 a, uchar16 b);
__attribute__((overloadable)) half2 T(half2 a, ushort2 b);
;
__attribute__((overloadable)) half2 T(half4 a, ushort2 b);
;
__attribute__((overloadable)) half2 T(half8 a, ushort2 b);
;
__attribute__((overloadable)) half2 T(half16 a, ushort2 b);
__attribute__((overloadable)) half4 T(half2 a, ushort4 b);
;
__attribute__((overloadable)) half4 T(half4 a, ushort4 b);
;
__attribute__((overloadable)) half4 T(half8 a, ushort4 b);
;
__attribute__((overloadable)) half4 T(half16 a, ushort4 b);
__attribute__((overloadable)) half8 T(half2 a, ushort8 b);
;
__attribute__((overloadable)) half8 T(half4 a, ushort8 b);
;
__attribute__((overloadable)) half8 T(half8 a, ushort8 b);
;
__attribute__((overloadable)) half8 T(half16 a, ushort8 b);
__attribute__((overloadable)) half16 T(half2 a, ushort16 b);
;
__attribute__((overloadable)) half16 T(half4 a, ushort16 b);
;
__attribute__((overloadable)) half16 T(half8 a, ushort16 b);
;
__attribute__((overloadable)) half16 T(half16 a, ushort16 b);
__attribute__((overloadable)) half2 T(half2 a, uint2 b);
;
__attribute__((overloadable)) half2 T(half4 a, uint2 b);
;
__attribute__((overloadable)) half2 T(half8 a, uint2 b);
;
__attribute__((overloadable)) half2 T(half16 a, uint2 b);
__attribute__((overloadable)) half4 T(half2 a, uint4 b);
;
__attribute__((overloadable)) half4 T(half4 a, uint4 b);
;
__attribute__((overloadable)) half4 T(half8 a, uint4 b);
;
__attribute__((overloadable)) half4 T(half16 a, uint4 b);
__attribute__((overloadable)) half8 T(half2 a, uint8 b);
;
__attribute__((overloadable)) half8 T(half4 a, uint8 b);
;
__attribute__((overloadable)) half8 T(half8 a, uint8 b);
;
__attribute__((overloadable)) half8 T(half16 a, uint8 b);
__attribute__((overloadable)) half16 T(half2 a, uint16 b);
;
__attribute__((overloadable)) half16 T(half4 a, uint16 b);
;
__attribute__((overloadable)) half16 T(half8 a, uint16 b);
;
__attribute__((overloadable)) half16 T(half16 a, uint16 b);
__attribute__((overloadable)) half2 T(half2 a, ulong2 b);
;
__attribute__((overloadable)) half2 T(half4 a, ulong2 b);
;
__attribute__((overloadable)) half2 T(half8 a, ulong2 b);
;
__attribute__((overloadable)) half2 T(half16 a, ulong2 b);
__attribute__((overloadable)) half4 T(half2 a, ulong4 b);
;
__attribute__((overloadable)) half4 T(half4 a, ulong4 b);
;
__attribute__((overloadable)) half4 T(half8 a, ulong4 b);
;
__attribute__((overloadable)) half4 T(half16 a, ulong4 b);
__attribute__((overloadable)) half8 T(half2 a, ulong8 b);
;
__attribute__((overloadable)) half8 T(half4 a, ulong8 b);
;
__attribute__((overloadable)) half8 T(half8 a, ulong8 b);
;
__attribute__((overloadable)) half8 T(half16 a, ulong8 b);
__attribute__((overloadable)) half16 T(half2 a, ulong16 b);
;
__attribute__((overloadable)) half16 T(half4 a, ulong16 b);
;
__attribute__((overloadable)) half16 T(half8 a, ulong16 b);
;
__attribute__((overloadable)) half16 T(half16 a, ulong16 b);
__attribute__((overloadable)) int2 T(int2 a, uchar2 b);
;
__attribute__((overloadable)) int2 T(int4 a, uchar2 b);
;
__attribute__((overloadable)) int2 T(int8 a, uchar2 b);
;
__attribute__((overloadable)) int2 T(int16 a, uchar2 b);
__attribute__((overloadable)) int4 T(int2 a, uchar4 b);
;
__attribute__((overloadable)) int4 T(int4 a, uchar4 b);
;
__attribute__((overloadable)) int4 T(int8 a, uchar4 b);
;
__attribute__((overloadable)) int4 T(int16 a, uchar4 b);
__attribute__((overloadable)) int8 T(int2 a, uchar8 b);
;
__attribute__((overloadable)) int8 T(int4 a, uchar8 b);
;
__attribute__((overloadable)) int8 T(int8 a, uchar8 b);
;
__attribute__((overloadable)) int8 T(int16 a, uchar8 b);
__attribute__((overloadable)) int16 T(int2 a, uchar16 b);
;
__attribute__((overloadable)) int16 T(int4 a, uchar16 b);
;
__attribute__((overloadable)) int16 T(int8 a, uchar16 b);
;
__attribute__((overloadable)) int16 T(int16 a, uchar16 b);
__attribute__((overloadable)) int2 T(int2 a, ushort2 b);
;
__attribute__((overloadable)) int2 T(int4 a, ushort2 b);
;
__attribute__((overloadable)) int2 T(int8 a, ushort2 b);
;
__attribute__((overloadable)) int2 T(int16 a, ushort2 b);
__attribute__((overloadable)) int4 T(int2 a, ushort4 b);
;
__attribute__((overloadable)) int4 T(int4 a, ushort4 b);
;
__attribute__((overloadable)) int4 T(int8 a, ushort4 b);
;
__attribute__((overloadable)) int4 T(int16 a, ushort4 b);
__attribute__((overloadable)) int8 T(int2 a, ushort8 b);
;
__attribute__((overloadable)) int8 T(int4 a, ushort8 b);
;
__attribute__((overloadable)) int8 T(int8 a, ushort8 b);
;
__attribute__((overloadable)) int8 T(int16 a, ushort8 b);
__attribute__((overloadable)) int16 T(int2 a, ushort16 b);
;
__attribute__((overloadable)) int16 T(int4 a, ushort16 b);
;
__attribute__((overloadable)) int16 T(int8 a, ushort16 b);
;
__attribute__((overloadable)) int16 T(int16 a, ushort16 b);
__attribute__((overloadable)) int2 T(int2 a, uint2 b);
;
__attribute__((overloadable)) int2 T(int4 a, uint2 b);
;
__attribute__((overloadable)) int2 T(int8 a, uint2 b);
;
__attribute__((overloadable)) int2 T(int16 a, uint2 b);
__attribute__((overloadable)) int4 T(int2 a, uint4 b);
;
__attribute__((overloadable)) int4 T(int4 a, uint4 b);
;
__attribute__((overloadable)) int4 T(int8 a, uint4 b);
;
__attribute__((overloadable)) int4 T(int16 a, uint4 b);
__attribute__((overloadable)) int8 T(int2 a, uint8 b);
;
__attribute__((overloadable)) int8 T(int4 a, uint8 b);
;
__attribute__((overloadable)) int8 T(int8 a, uint8 b);
;
__attribute__((overloadable)) int8 T(int16 a, uint8 b);
__attribute__((overloadable)) int16 T(int2 a, uint16 b);
;
__attribute__((overloadable)) int16 T(int4 a, uint16 b);
;
__attribute__((overloadable)) int16 T(int8 a, uint16 b);
;
__attribute__((overloadable)) int16 T(int16 a, uint16 b);
__attribute__((overloadable)) int2 T(int2 a, ulong2 b);
;
__attribute__((overloadable)) int2 T(int4 a, ulong2 b);
;
__attribute__((overloadable)) int2 T(int8 a, ulong2 b);
;
__attribute__((overloadable)) int2 T(int16 a, ulong2 b);
__attribute__((overloadable)) int4 T(int2 a, ulong4 b);
;
__attribute__((overloadable)) int4 T(int4 a, ulong4 b);
;
__attribute__((overloadable)) int4 T(int8 a, ulong4 b);
;
__attribute__((overloadable)) int4 T(int16 a, ulong4 b);
__attribute__((overloadable)) int8 T(int2 a, ulong8 b);
;
__attribute__((overloadable)) int8 T(int4 a, ulong8 b);
;
__attribute__((overloadable)) int8 T(int8 a, ulong8 b);
;
__attribute__((overloadable)) int8 T(int16 a, ulong8 b);
__attribute__((overloadable)) int16 T(int2 a, ulong16 b);
;
__attribute__((overloadable)) int16 T(int4 a, ulong16 b);
;
__attribute__((overloadable)) int16 T(int8 a, ulong16 b);
;
__attribute__((overloadable)) int16 T(int16 a, ulong16 b);
__attribute__((overloadable)) uint2 T(uint2 a, uchar2 b);
;
__attribute__((overloadable)) uint2 T(uint4 a, uchar2 b);
;
__attribute__((overloadable)) uint2 T(uint8 a, uchar2 b);
;
__attribute__((overloadable)) uint2 T(uint16 a, uchar2 b);
__attribute__((overloadable)) uint4 T(uint2 a, uchar4 b);
;
__attribute__((overloadable)) uint4 T(uint4 a, uchar4 b);
;
__attribute__((overloadable)) uint4 T(uint8 a, uchar4 b);
;
__attribute__((overloadable)) uint4 T(uint16 a, uchar4 b);
__attribute__((overloadable)) uint8 T(uint2 a, uchar8 b);
;
__attribute__((overloadable)) uint8 T(uint4 a, uchar8 b);
;
__attribute__((overloadable)) uint8 T(uint8 a, uchar8 b);
;
__attribute__((overloadable)) uint8 T(uint16 a, uchar8 b);
__attribute__((overloadable)) uint16 T(uint2 a, uchar16 b);
;
__attribute__((overloadable)) uint16 T(uint4 a, uchar16 b);
;
__attribute__((overloadable)) uint16 T(uint8 a, uchar16 b);
;
__attribute__((overloadable)) uint16 T(uint16 a, uchar16 b);
__attribute__((overloadable)) uint2 T(uint2 a, ushort2 b);
;
__attribute__((overloadable)) uint2 T(uint4 a, ushort2 b);
;
__attribute__((overloadable)) uint2 T(uint8 a, ushort2 b);
;
__attribute__((overloadable)) uint2 T(uint16 a, ushort2 b);
__attribute__((overloadable)) uint4 T(uint2 a, ushort4 b);
;
__attribute__((overloadable)) uint4 T(uint4 a, ushort4 b);
;
__attribute__((overloadable)) uint4 T(uint8 a, ushort4 b);
;
__attribute__((overloadable)) uint4 T(uint16 a, ushort4 b);
__attribute__((overloadable)) uint8 T(uint2 a, ushort8 b);
;
__attribute__((overloadable)) uint8 T(uint4 a, ushort8 b);
;
__attribute__((overloadable)) uint8 T(uint8 a, ushort8 b);
;
__attribute__((overloadable)) uint8 T(uint16 a, ushort8 b);
__attribute__((overloadable)) uint16 T(uint2 a, ushort16 b);
;
__attribute__((overloadable)) uint16 T(uint4 a, ushort16 b);
;
__attribute__((overloadable)) uint16 T(uint8 a, ushort16 b);
;
__attribute__((overloadable)) uint16 T(uint16 a, ushort16 b);
__attribute__((overloadable)) uint2 T(uint2 a, uint2 b);
;
__attribute__((overloadable)) uint2 T(uint4 a, uint2 b);
;
__attribute__((overloadable)) uint2 T(uint8 a, uint2 b);
;
__attribute__((overloadable)) uint2 T(uint16 a, uint2 b);
__attribute__((overloadable)) uint4 T(uint2 a, uint4 b);
;
__attribute__((overloadable)) uint4 T(uint4 a, uint4 b);
;
__attribute__((overloadable)) uint4 T(uint8 a, uint4 b);
;
__attribute__((overloadable)) uint4 T(uint16 a, uint4 b);
__attribute__((overloadable)) uint8 T(uint2 a, uint8 b);
;
__attribute__((overloadable)) uint8 T(uint4 a, uint8 b);
;
__attribute__((overloadable)) uint8 T(uint8 a, uint8 b);
;
__attribute__((overloadable)) uint8 T(uint16 a, uint8 b);
__attribute__((overloadable)) uint16 T(uint2 a, uint16 b);
;
__attribute__((overloadable)) uint16 T(uint4 a, uint16 b);
;
__attribute__((overloadable)) uint16 T(uint8 a, uint16 b);
;
__attribute__((overloadable)) uint16 T(uint16 a, uint16 b);
__attribute__((overloadable)) uint2 T(uint2 a, ulong2 b);
;
__attribute__((overloadable)) uint2 T(uint4 a, ulong2 b);
;
__attribute__((overloadable)) uint2 T(uint8 a, ulong2 b);
;
__attribute__((overloadable)) uint2 T(uint16 a, ulong2 b);
__attribute__((overloadable)) uint4 T(uint2 a, ulong4 b);
;
__attribute__((overloadable)) uint4 T(uint4 a, ulong4 b);
;
__attribute__((overloadable)) uint4 T(uint8 a, ulong4 b);
;
__attribute__((overloadable)) uint4 T(uint16 a, ulong4 b);
__attribute__((overloadable)) uint8 T(uint2 a, ulong8 b);
;
__attribute__((overloadable)) uint8 T(uint4 a, ulong8 b);
;
__attribute__((overloadable)) uint8 T(uint8 a, ulong8 b);
;
__attribute__((overloadable)) uint8 T(uint16 a, ulong8 b);
__attribute__((overloadable)) uint16 T(uint2 a, ulong16 b);
;
__attribute__((overloadable)) uint16 T(uint4 a, ulong16 b);
;
__attribute__((overloadable)) uint16 T(uint8 a, ulong16 b);
;
__attribute__((overloadable)) uint16 T(uint16 a, ulong16 b);
__attribute__((overloadable)) float2 T(float2 a, uchar2 b);
;
__attribute__((overloadable)) float2 T(float4 a, uchar2 b);
;
__attribute__((overloadable)) float2 T(float8 a, uchar2 b);
;
__attribute__((overloadable)) float2 T(float16 a, uchar2 b);
__attribute__((overloadable)) float4 T(float2 a, uchar4 b);
;
__attribute__((overloadable)) float4 T(float4 a, uchar4 b);
;
__attribute__((overloadable)) float4 T(float8 a, uchar4 b);
;
__attribute__((overloadable)) float4 T(float16 a, uchar4 b);
__attribute__((overloadable)) float8 T(float2 a, uchar8 b);
;
__attribute__((overloadable)) float8 T(float4 a, uchar8 b);
;
__attribute__((overloadable)) float8 T(float8 a, uchar8 b);
;
__attribute__((overloadable)) float8 T(float16 a, uchar8 b);
__attribute__((overloadable)) float16 T(float2 a, uchar16 b);
;
__attribute__((overloadable)) float16 T(float4 a, uchar16 b);
;
__attribute__((overloadable)) float16 T(float8 a, uchar16 b);
;
__attribute__((overloadable)) float16 T(float16 a, uchar16 b);
__attribute__((overloadable)) float2 T(float2 a, ushort2 b);
;
__attribute__((overloadable)) float2 T(float4 a, ushort2 b);
;
__attribute__((overloadable)) float2 T(float8 a, ushort2 b);
;
__attribute__((overloadable)) float2 T(float16 a, ushort2 b);
__attribute__((overloadable)) float4 T(float2 a, ushort4 b);
;
__attribute__((overloadable)) float4 T(float4 a, ushort4 b);
;
__attribute__((overloadable)) float4 T(float8 a, ushort4 b);
;
__attribute__((overloadable)) float4 T(float16 a, ushort4 b);
__attribute__((overloadable)) float8 T(float2 a, ushort8 b);
;
__attribute__((overloadable)) float8 T(float4 a, ushort8 b);
;
__attribute__((overloadable)) float8 T(float8 a, ushort8 b);
;
__attribute__((overloadable)) float8 T(float16 a, ushort8 b);
__attribute__((overloadable)) float16 T(float2 a, ushort16 b);
;
__attribute__((overloadable)) float16 T(float4 a, ushort16 b);
;
__attribute__((overloadable)) float16 T(float8 a, ushort16 b);
;
__attribute__((overloadable)) float16 T(float16 a, ushort16 b);
__attribute__((overloadable)) float2 T(float2 a, uint2 b);
;
__attribute__((overloadable)) float2 T(float4 a, uint2 b);
;
__attribute__((overloadable)) float2 T(float8 a, uint2 b);
;
__attribute__((overloadable)) float2 T(float16 a, uint2 b);
__attribute__((overloadable)) float4 T(float2 a, uint4 b);
;
__attribute__((overloadable)) float4 T(float4 a, uint4 b);
;
__attribute__((overloadable)) float4 T(float8 a, uint4 b);
;
__attribute__((overloadable)) float4 T(float16 a, uint4 b);
__attribute__((overloadable)) float8 T(float2 a, uint8 b);
;
__attribute__((overloadable)) float8 T(float4 a, uint8 b);
;
__attribute__((overloadable)) float8 T(float8 a, uint8 b);
;
__attribute__((overloadable)) float8 T(float16 a, uint8 b);
__attribute__((overloadable)) float16 T(float2 a, uint16 b);
;
__attribute__((overloadable)) float16 T(float4 a, uint16 b);
;
__attribute__((overloadable)) float16 T(float8 a, uint16 b);
;
__attribute__((overloadable)) float16 T(float16 a, uint16 b);
__attribute__((overloadable)) float2 T(float2 a, ulong2 b);
;
__attribute__((overloadable)) float2 T(float4 a, ulong2 b);
;
__attribute__((overloadable)) float2 T(float8 a, ulong2 b);
;
__attribute__((overloadable)) float2 T(float16 a, ulong2 b);
__attribute__((overloadable)) float4 T(float2 a, ulong4 b);
;
__attribute__((overloadable)) float4 T(float4 a, ulong4 b);
;
__attribute__((overloadable)) float4 T(float8 a, ulong4 b);
;
__attribute__((overloadable)) float4 T(float16 a, ulong4 b);
__attribute__((overloadable)) float8 T(float2 a, ulong8 b);
;
__attribute__((overloadable)) float8 T(float4 a, ulong8 b);
;
__attribute__((overloadable)) float8 T(float8 a, ulong8 b);
;
__attribute__((overloadable)) float8 T(float16 a, ulong8 b);
__attribute__((overloadable)) float16 T(float2 a, ulong16 b);
;
__attribute__((overloadable)) float16 T(float4 a, ulong16 b);
;
__attribute__((overloadable)) float16 T(float8 a, ulong16 b);
;
__attribute__((overloadable)) float16 T(float16 a, ulong16 b);
__attribute__((overloadable)) long2 T(long2 a, uchar2 b);
;
__attribute__((overloadable)) long2 T(long4 a, uchar2 b);
;
__attribute__((overloadable)) long2 T(long8 a, uchar2 b);
;
__attribute__((overloadable)) long2 T(long16 a, uchar2 b);
__attribute__((overloadable)) long4 T(long2 a, uchar4 b);
;
__attribute__((overloadable)) long4 T(long4 a, uchar4 b);
;
__attribute__((overloadable)) long4 T(long8 a, uchar4 b);
;
__attribute__((overloadable)) long4 T(long16 a, uchar4 b);
__attribute__((overloadable)) long8 T(long2 a, uchar8 b);
;
__attribute__((overloadable)) long8 T(long4 a, uchar8 b);
;
__attribute__((overloadable)) long8 T(long8 a, uchar8 b);
;
__attribute__((overloadable)) long8 T(long16 a, uchar8 b);
__attribute__((overloadable)) long16 T(long2 a, uchar16 b);
;
__attribute__((overloadable)) long16 T(long4 a, uchar16 b);
;
__attribute__((overloadable)) long16 T(long8 a, uchar16 b);
;
__attribute__((overloadable)) long16 T(long16 a, uchar16 b);
__attribute__((overloadable)) long2 T(long2 a, ushort2 b);
;
__attribute__((overloadable)) long2 T(long4 a, ushort2 b);
;
__attribute__((overloadable)) long2 T(long8 a, ushort2 b);
;
__attribute__((overloadable)) long2 T(long16 a, ushort2 b);
__attribute__((overloadable)) long4 T(long2 a, ushort4 b);
;
__attribute__((overloadable)) long4 T(long4 a, ushort4 b);
;
__attribute__((overloadable)) long4 T(long8 a, ushort4 b);
;
__attribute__((overloadable)) long4 T(long16 a, ushort4 b);
__attribute__((overloadable)) long8 T(long2 a, ushort8 b);
;
__attribute__((overloadable)) long8 T(long4 a, ushort8 b);
;
__attribute__((overloadable)) long8 T(long8 a, ushort8 b);
;
__attribute__((overloadable)) long8 T(long16 a, ushort8 b);
__attribute__((overloadable)) long16 T(long2 a, ushort16 b);
;
__attribute__((overloadable)) long16 T(long4 a, ushort16 b);
;
__attribute__((overloadable)) long16 T(long8 a, ushort16 b);
;
__attribute__((overloadable)) long16 T(long16 a, ushort16 b);
__attribute__((overloadable)) long2 T(long2 a, uint2 b);
;
__attribute__((overloadable)) long2 T(long4 a, uint2 b);
;
__attribute__((overloadable)) long2 T(long8 a, uint2 b);
;
__attribute__((overloadable)) long2 T(long16 a, uint2 b);
__attribute__((overloadable)) long4 T(long2 a, uint4 b);
;
__attribute__((overloadable)) long4 T(long4 a, uint4 b);
;
__attribute__((overloadable)) long4 T(long8 a, uint4 b);
;
__attribute__((overloadable)) long4 T(long16 a, uint4 b);
__attribute__((overloadable)) long8 T(long2 a, uint8 b);
;
__attribute__((overloadable)) long8 T(long4 a, uint8 b);
;
__attribute__((overloadable)) long8 T(long8 a, uint8 b);
;
__attribute__((overloadable)) long8 T(long16 a, uint8 b);
__attribute__((overloadable)) long16 T(long2 a, uint16 b);
;
__attribute__((overloadable)) long16 T(long4 a, uint16 b);
;
__attribute__((overloadable)) long16 T(long8 a, uint16 b);
;
__attribute__((overloadable)) long16 T(long16 a, uint16 b);
__attribute__((overloadable)) long2 T(long2 a, ulong2 b);
;
__attribute__((overloadable)) long2 T(long4 a, ulong2 b);
;
__attribute__((overloadable)) long2 T(long8 a, ulong2 b);
;
__attribute__((overloadable)) long2 T(long16 a, ulong2 b);
__attribute__((overloadable)) long4 T(long2 a, ulong4 b);
;
__attribute__((overloadable)) long4 T(long4 a, ulong4 b);
;
__attribute__((overloadable)) long4 T(long8 a, ulong4 b);
;
__attribute__((overloadable)) long4 T(long16 a, ulong4 b);
__attribute__((overloadable)) long8 T(long2 a, ulong8 b);
;
__attribute__((overloadable)) long8 T(long4 a, ulong8 b);
;
__attribute__((overloadable)) long8 T(long8 a, ulong8 b);
;
__attribute__((overloadable)) long8 T(long16 a, ulong8 b);
__attribute__((overloadable)) long16 T(long2 a, ulong16 b);
;
__attribute__((overloadable)) long16 T(long4 a, ulong16 b);
;
__attribute__((overloadable)) long16 T(long8 a, ulong16 b);
;
__attribute__((overloadable)) long16 T(long16 a, ulong16 b);
__attribute__((overloadable)) ulong2 T(ulong2 a, uchar2 b);
;
__attribute__((overloadable)) ulong2 T(ulong4 a, uchar2 b);
;
__attribute__((overloadable)) ulong2 T(ulong8 a, uchar2 b);
;
__attribute__((overloadable)) ulong2 T(ulong16 a, uchar2 b);
__attribute__((overloadable)) ulong4 T(ulong2 a, uchar4 b);
;
__attribute__((overloadable)) ulong4 T(ulong4 a, uchar4 b);
;
__attribute__((overloadable)) ulong4 T(ulong8 a, uchar4 b);
;
__attribute__((overloadable)) ulong4 T(ulong16 a, uchar4 b);
__attribute__((overloadable)) ulong8 T(ulong2 a, uchar8 b);
;
__attribute__((overloadable)) ulong8 T(ulong4 a, uchar8 b);
;
__attribute__((overloadable)) ulong8 T(ulong8 a, uchar8 b);
;
__attribute__((overloadable)) ulong8 T(ulong16 a, uchar8 b);
__attribute__((overloadable)) ulong16 T(ulong2 a, uchar16 b);
;
__attribute__((overloadable)) ulong16 T(ulong4 a, uchar16 b);
;
__attribute__((overloadable)) ulong16 T(ulong8 a, uchar16 b);
;
__attribute__((overloadable)) ulong16 T(ulong16 a, uchar16 b);
__attribute__((overloadable)) ulong2 T(ulong2 a, ushort2 b);
;
__attribute__((overloadable)) ulong2 T(ulong4 a, ushort2 b);
;
__attribute__((overloadable)) ulong2 T(ulong8 a, ushort2 b);
;
__attribute__((overloadable)) ulong2 T(ulong16 a, ushort2 b);
__attribute__((overloadable)) ulong4 T(ulong2 a, ushort4 b);
;
__attribute__((overloadable)) ulong4 T(ulong4 a, ushort4 b);
;
__attribute__((overloadable)) ulong4 T(ulong8 a, ushort4 b);
;
__attribute__((overloadable)) ulong4 T(ulong16 a, ushort4 b);
__attribute__((overloadable)) ulong8 T(ulong2 a, ushort8 b);
;
__attribute__((overloadable)) ulong8 T(ulong4 a, ushort8 b);
;
__attribute__((overloadable)) ulong8 T(ulong8 a, ushort8 b);
;
__attribute__((overloadable)) ulong8 T(ulong16 a, ushort8 b);
__attribute__((overloadable)) ulong16 T(ulong2 a, ushort16 b);
;
__attribute__((overloadable)) ulong16 T(ulong4 a, ushort16 b);
;
__attribute__((overloadable)) ulong16 T(ulong8 a, ushort16 b);
;
__attribute__((overloadable)) ulong16 T(ulong16 a, ushort16 b);
__attribute__((overloadable)) ulong2 T(ulong2 a, uint2 b);
;
__attribute__((overloadable)) ulong2 T(ulong4 a, uint2 b);
;
__attribute__((overloadable)) ulong2 T(ulong8 a, uint2 b);
;
__attribute__((overloadable)) ulong2 T(ulong16 a, uint2 b);
__attribute__((overloadable)) ulong4 T(ulong2 a, uint4 b);
;
__attribute__((overloadable)) ulong4 T(ulong4 a, uint4 b);
;
__attribute__((overloadable)) ulong4 T(ulong8 a, uint4 b);
;
__attribute__((overloadable)) ulong4 T(ulong16 a, uint4 b);
__attribute__((overloadable)) ulong8 T(ulong2 a, uint8 b);
;
__attribute__((overloadable)) ulong8 T(ulong4 a, uint8 b);
;
__attribute__((overloadable)) ulong8 T(ulong8 a, uint8 b);
;
__attribute__((overloadable)) ulong8 T(ulong16 a, uint8 b);
__attribute__((overloadable)) ulong16 T(ulong2 a, uint16 b);
;
__attribute__((overloadable)) ulong16 T(ulong4 a, uint16 b);
;
__attribute__((overloadable)) ulong16 T(ulong8 a, uint16 b);
;
__attribute__((overloadable)) ulong16 T(ulong16 a, uint16 b);
__attribute__((overloadable)) ulong2 T(ulong2 a, ulong2 b);
;
__attribute__((overloadable)) ulong2 T(ulong4 a, ulong2 b);
;
__attribute__((overloadable)) ulong2 T(ulong8 a, ulong2 b);
;
__attribute__((overloadable)) ulong2 T(ulong16 a, ulong2 b);
__attribute__((overloadable)) ulong4 T(ulong2 a, ulong4 b);
;
__attribute__((overloadable)) ulong4 T(ulong4 a, ulong4 b);
;
__attribute__((overloadable)) ulong4 T(ulong8 a, ulong4 b);
;
__attribute__((overloadable)) ulong4 T(ulong16 a, ulong4 b);
__attribute__((overloadable)) ulong8 T(ulong2 a, ulong8 b);
;
__attribute__((overloadable)) ulong8 T(ulong4 a, ulong8 b);
;
__attribute__((overloadable)) ulong8 T(ulong8 a, ulong8 b);
;
__attribute__((overloadable)) ulong8 T(ulong16 a, ulong8 b);
__attribute__((overloadable)) ulong16 T(ulong2 a, ulong16 b);
;
__attribute__((overloadable)) ulong16 T(ulong4 a, ulong16 b);
;
__attribute__((overloadable)) ulong16 T(ulong8 a, ulong16 b);
;
__attribute__((overloadable)) ulong16 T(ulong16 a, ulong16 b);
__attribute__((overloadable)) double2 T(double2 a, uchar2 b);
;
__attribute__((overloadable)) double2 T(double4 a, uchar2 b);
;
__attribute__((overloadable)) double2 T(double8 a, uchar2 b);
;
__attribute__((overloadable)) double2 T(double16 a, uchar2 b);
__attribute__((overloadable)) double4 T(double2 a, uchar4 b);
;
__attribute__((overloadable)) double4 T(double4 a, uchar4 b);
;
__attribute__((overloadable)) double4 T(double8 a, uchar4 b);
;
__attribute__((overloadable)) double4 T(double16 a, uchar4 b);
__attribute__((overloadable)) double8 T(double2 a, uchar8 b);
;
__attribute__((overloadable)) double8 T(double4 a, uchar8 b);
;
__attribute__((overloadable)) double8 T(double8 a, uchar8 b);
;
__attribute__((overloadable)) double8 T(double16 a, uchar8 b);
__attribute__((overloadable)) double16 T(double2 a, uchar16 b);
;
__attribute__((overloadable)) double16 T(double4 a, uchar16 b);
;
__attribute__((overloadable)) double16 T(double8 a, uchar16 b);
;
__attribute__((overloadable)) double16 T(double16 a, uchar16 b);
__attribute__((overloadable)) double2 T(double2 a, ushort2 b);
;
__attribute__((overloadable)) double2 T(double4 a, ushort2 b);
;
__attribute__((overloadable)) double2 T(double8 a, ushort2 b);
;
__attribute__((overloadable)) double2 T(double16 a, ushort2 b);
__attribute__((overloadable)) double4 T(double2 a, ushort4 b);
;
__attribute__((overloadable)) double4 T(double4 a, ushort4 b);
;
__attribute__((overloadable)) double4 T(double8 a, ushort4 b);
;
__attribute__((overloadable)) double4 T(double16 a, ushort4 b);
__attribute__((overloadable)) double8 T(double2 a, ushort8 b);
;
__attribute__((overloadable)) double8 T(double4 a, ushort8 b);
;
__attribute__((overloadable)) double8 T(double8 a, ushort8 b);
;
__attribute__((overloadable)) double8 T(double16 a, ushort8 b);
__attribute__((overloadable)) double16 T(double2 a, ushort16 b);
;
__attribute__((overloadable)) double16 T(double4 a, ushort16 b);
;
__attribute__((overloadable)) double16 T(double8 a, ushort16 b);
;
__attribute__((overloadable)) double16 T(double16 a, ushort16 b);
__attribute__((overloadable)) double2 T(double2 a, uint2 b);
;
__attribute__((overloadable)) double2 T(double4 a, uint2 b);
;
__attribute__((overloadable)) double2 T(double8 a, uint2 b);
;
__attribute__((overloadable)) double2 T(double16 a, uint2 b);
__attribute__((overloadable)) double4 T(double2 a, uint4 b);
;
__attribute__((overloadable)) double4 T(double4 a, uint4 b);
;
__attribute__((overloadable)) double4 T(double8 a, uint4 b);
;
__attribute__((overloadable)) double4 T(double16 a, uint4 b);
__attribute__((overloadable)) double8 T(double2 a, uint8 b);
;
__attribute__((overloadable)) double8 T(double4 a, uint8 b);
;
__attribute__((overloadable)) double8 T(double8 a, uint8 b);
;
__attribute__((overloadable)) double8 T(double16 a, uint8 b);
__attribute__((overloadable)) double16 T(double2 a, uint16 b);
;
__attribute__((overloadable)) double16 T(double4 a, uint16 b);
;
__attribute__((overloadable)) double16 T(double8 a, uint16 b);
;
__attribute__((overloadable)) double16 T(double16 a, uint16 b);
__attribute__((overloadable)) double2 T(double2 a, ulong2 b);
;
__attribute__((overloadable)) double2 T(double4 a, ulong2 b);
;
__attribute__((overloadable)) double2 T(double8 a, ulong2 b);
;
__attribute__((overloadable)) double2 T(double16 a, ulong2 b);
__attribute__((overloadable)) double4 T(double2 a, ulong4 b);
;
__attribute__((overloadable)) double4 T(double4 a, ulong4 b);
;
__attribute__((overloadable)) double4 T(double8 a, ulong4 b);
;
__attribute__((overloadable)) double4 T(double16 a, ulong4 b);
__attribute__((overloadable)) double8 T(double2 a, ulong8 b);
;
__attribute__((overloadable)) double8 T(double4 a, ulong8 b);
;
__attribute__((overloadable)) double8 T(double8 a, ulong8 b);
;
__attribute__((overloadable)) double8 T(double16 a, ulong8 b);
__attribute__((overloadable)) double16 T(double2 a, ulong16 b);
;
__attribute__((overloadable)) double16 T(double4 a, ulong16 b);
;
__attribute__((overloadable)) double16 T(double8 a, ulong16 b);
;
__attribute__((overloadable)) double16 T(double16 a, ulong16 b);
__attribute__((overloadable)) char2 U(char2 a, char2 b, uchar2 c);
__attribute__((overloadable)) char2 U(char4 a, char4 b, uchar2 c);
__attribute__((overloadable)) char2 U(char8 a, char8 b, uchar2 c);
__attribute__((overloadable)) char2 U(char16 a, char16 b, uchar2 c);
__attribute__((overloadable)) char4 U(char2 a, char2 b, uchar4 c);
__attribute__((overloadable)) char4 U(char4 a, char4 b, uchar4 c);
__attribute__((overloadable)) char4 U(char8 a, char8 b, uchar4 c);
__attribute__((overloadable)) char4 U(char16 a, char16 b, uchar4 c);
__attribute__((overloadable)) char8 U(char2 a, char2 b, uchar8 c);
__attribute__((overloadable)) char8 U(char4 a, char4 b, uchar8 c);
__attribute__((overloadable)) char8 U(char8 a, char8 b, uchar8 c);
__attribute__((overloadable)) char8 U(char16 a, char16 b, uchar8 c);
__attribute__((overloadable)) char16 U(char2 a, char2 b, uchar16 c);
__attribute__((overloadable)) char16 U(char4 a, char4 b, uchar16 c);
__attribute__((overloadable)) char16 U(char8 a, char8 b, uchar16 c);
__attribute__((overloadable)) char16 U(char16 a, char16 b, uchar16 c);
__attribute__((overloadable)) char2 U(char2 a, char2 b, ushort2 c);
__attribute__((overloadable)) char2 U(char4 a, char4 b, ushort2 c);
__attribute__((overloadable)) char2 U(char8 a, char8 b, ushort2 c);
__attribute__((overloadable)) char2 U(char16 a, char16 b, ushort2 c);
__attribute__((overloadable)) char4 U(char2 a, char2 b, ushort4 c);
__attribute__((overloadable)) char4 U(char4 a, char4 b, ushort4 c);
__attribute__((overloadable)) char4 U(char8 a, char8 b, ushort4 c);
__attribute__((overloadable)) char4 U(char16 a, char16 b, ushort4 c);
__attribute__((overloadable)) char8 U(char2 a, char2 b, ushort8 c);
__attribute__((overloadable)) char8 U(char4 a, char4 b, ushort8 c);
__attribute__((overloadable)) char8 U(char8 a, char8 b, ushort8 c);
__attribute__((overloadable)) char8 U(char16 a, char16 b, ushort8 c);
__attribute__((overloadable)) char16 U(char2 a, char2 b, ushort16 c);
__attribute__((overloadable)) char16 U(char4 a, char4 b, ushort16 c);
__attribute__((overloadable)) char16 U(char8 a, char8 b, ushort16 c);
__attribute__((overloadable)) char16 U(char16 a, char16 b, ushort16 c);
__attribute__((overloadable)) char2 U(char2 a, char2 b, uint2 c);
__attribute__((overloadable)) char2 U(char4 a, char4 b, uint2 c);
__attribute__((overloadable)) char2 U(char8 a, char8 b, uint2 c);
__attribute__((overloadable)) char2 U(char16 a, char16 b, uint2 c);
__attribute__((overloadable)) char4 U(char2 a, char2 b, uint4 c);
__attribute__((overloadable)) char4 U(char4 a, char4 b, uint4 c);
__attribute__((overloadable)) char4 U(char8 a, char8 b, uint4 c);
__attribute__((overloadable)) char4 U(char16 a, char16 b, uint4 c);
__attribute__((overloadable)) char8 U(char2 a, char2 b, uint8 c);
__attribute__((overloadable)) char8 U(char4 a, char4 b, uint8 c);
__attribute__((overloadable)) char8 U(char8 a, char8 b, uint8 c);
__attribute__((overloadable)) char8 U(char16 a, char16 b, uint8 c);
__attribute__((overloadable)) char16 U(char2 a, char2 b, uint16 c);
__attribute__((overloadable)) char16 U(char4 a, char4 b, uint16 c);
__attribute__((overloadable)) char16 U(char8 a, char8 b, uint16 c);
__attribute__((overloadable)) char16 U(char16 a, char16 b, uint16 c);
__attribute__((overloadable)) char2 U(char2 a, char2 b, ulong2 c);
__attribute__((overloadable)) char2 U(char4 a, char4 b, ulong2 c);
__attribute__((overloadable)) char2 U(char8 a, char8 b, ulong2 c);
__attribute__((overloadable)) char2 U(char16 a, char16 b, ulong2 c);
__attribute__((overloadable)) char4 U(char2 a, char2 b, ulong4 c);
__attribute__((overloadable)) char4 U(char4 a, char4 b, ulong4 c);
__attribute__((overloadable)) char4 U(char8 a, char8 b, ulong4 c);
__attribute__((overloadable)) char4 U(char16 a, char16 b, ulong4 c);
__attribute__((overloadable)) char8 U(char2 a, char2 b, ulong8 c);
__attribute__((overloadable)) char8 U(char4 a, char4 b, ulong8 c);
__attribute__((overloadable)) char8 U(char8 a, char8 b, ulong8 c);
__attribute__((overloadable)) char8 U(char16 a, char16 b, ulong8 c);
__attribute__((overloadable)) char16 U(char2 a, char2 b, ulong16 c);
__attribute__((overloadable)) char16 U(char4 a, char4 b, ulong16 c);
__attribute__((overloadable)) char16 U(char8 a, char8 b, ulong16 c);
__attribute__((overloadable)) char16 U(char16 a, char16 b, ulong16 c);
__attribute__((overloadable)) uchar2 U(uchar2 a, uchar2 b, uchar2 c);
__attribute__((overloadable)) uchar2 U(uchar4 a, uchar4 b, uchar2 c);
__attribute__((overloadable)) uchar2 U(uchar8 a, uchar8 b, uchar2 c);
__attribute__((overloadable)) uchar2 U(uchar16 a, uchar16 b, uchar2 c);
__attribute__((overloadable)) uchar4 U(uchar2 a, uchar2 b, uchar4 c);
__attribute__((overloadable)) uchar4 U(uchar4 a, uchar4 b, uchar4 c);
__attribute__((overloadable)) uchar4 U(uchar8 a, uchar8 b, uchar4 c);
__attribute__((overloadable)) uchar4 U(uchar16 a, uchar16 b, uchar4 c);
__attribute__((overloadable)) uchar8 U(uchar2 a, uchar2 b, uchar8 c);
__attribute__((overloadable)) uchar8 U(uchar4 a, uchar4 b, uchar8 c);
__attribute__((overloadable)) uchar8 U(uchar8 a, uchar8 b, uchar8 c);
__attribute__((overloadable)) uchar8 U(uchar16 a, uchar16 b, uchar8 c);
__attribute__((overloadable)) uchar16 U(uchar2 a, uchar2 b, uchar16 c);
__attribute__((overloadable)) uchar16 U(uchar4 a, uchar4 b, uchar16 c);
__attribute__((overloadable)) uchar16 U(uchar8 a, uchar8 b, uchar16 c);
__attribute__((overloadable)) uchar16 U(uchar16 a, uchar16 b, uchar16 c);
__attribute__((overloadable)) uchar2 U(uchar2 a, uchar2 b, ushort2 c);
__attribute__((overloadable)) uchar2 U(uchar4 a, uchar4 b, ushort2 c);
__attribute__((overloadable)) uchar2 U(uchar8 a, uchar8 b, ushort2 c);
__attribute__((overloadable)) uchar2 U(uchar16 a, uchar16 b, ushort2 c);
__attribute__((overloadable)) uchar4 U(uchar2 a, uchar2 b, ushort4 c);
__attribute__((overloadable)) uchar4 U(uchar4 a, uchar4 b, ushort4 c);
__attribute__((overloadable)) uchar4 U(uchar8 a, uchar8 b, ushort4 c);
__attribute__((overloadable)) uchar4 U(uchar16 a, uchar16 b, ushort4 c);
__attribute__((overloadable)) uchar8 U(uchar2 a, uchar2 b, ushort8 c);
__attribute__((overloadable)) uchar8 U(uchar4 a, uchar4 b, ushort8 c);
__attribute__((overloadable)) uchar8 U(uchar8 a, uchar8 b, ushort8 c);
__attribute__((overloadable)) uchar8 U(uchar16 a, uchar16 b, ushort8 c);
__attribute__((overloadable)) uchar16 U(uchar2 a, uchar2 b, ushort16 c);
__attribute__((overloadable)) uchar16 U(uchar4 a, uchar4 b, ushort16 c);
__attribute__((overloadable)) uchar16 U(uchar8 a, uchar8 b, ushort16 c);
__attribute__((overloadable)) uchar16 U(uchar16 a, uchar16 b, ushort16 c);
__attribute__((overloadable)) uchar2 U(uchar2 a, uchar2 b, uint2 c);
__attribute__((overloadable)) uchar2 U(uchar4 a, uchar4 b, uint2 c);
__attribute__((overloadable)) uchar2 U(uchar8 a, uchar8 b, uint2 c);
__attribute__((overloadable)) uchar2 U(uchar16 a, uchar16 b, uint2 c);
__attribute__((overloadable)) uchar4 U(uchar2 a, uchar2 b, uint4 c);
__attribute__((overloadable)) uchar4 U(uchar4 a, uchar4 b, uint4 c);
__attribute__((overloadable)) uchar4 U(uchar8 a, uchar8 b, uint4 c);
__attribute__((overloadable)) uchar4 U(uchar16 a, uchar16 b, uint4 c);
__attribute__((overloadable)) uchar8 U(uchar2 a, uchar2 b, uint8 c);
__attribute__((overloadable)) uchar8 U(uchar4 a, uchar4 b, uint8 c);
__attribute__((overloadable)) uchar8 U(uchar8 a, uchar8 b, uint8 c);
__attribute__((overloadable)) uchar8 U(uchar16 a, uchar16 b, uint8 c);
__attribute__((overloadable)) uchar16 U(uchar2 a, uchar2 b, uint16 c);
__attribute__((overloadable)) uchar16 U(uchar4 a, uchar4 b, uint16 c);
__attribute__((overloadable)) uchar16 U(uchar8 a, uchar8 b, uint16 c);
__attribute__((overloadable)) uchar16 U(uchar16 a, uchar16 b, uint16 c);
__attribute__((overloadable)) uchar2 U(uchar2 a, uchar2 b, ulong2 c);
__attribute__((overloadable)) uchar2 U(uchar4 a, uchar4 b, ulong2 c);
__attribute__((overloadable)) uchar2 U(uchar8 a, uchar8 b, ulong2 c);
__attribute__((overloadable)) uchar2 U(uchar16 a, uchar16 b, ulong2 c);
__attribute__((overloadable)) uchar4 U(uchar2 a, uchar2 b, ulong4 c);
__attribute__((overloadable)) uchar4 U(uchar4 a, uchar4 b, ulong4 c);
__attribute__((overloadable)) uchar4 U(uchar8 a, uchar8 b, ulong4 c);
__attribute__((overloadable)) uchar4 U(uchar16 a, uchar16 b, ulong4 c);
__attribute__((overloadable)) uchar8 U(uchar2 a, uchar2 b, ulong8 c);
__attribute__((overloadable)) uchar8 U(uchar4 a, uchar4 b, ulong8 c);
__attribute__((overloadable)) uchar8 U(uchar8 a, uchar8 b, ulong8 c);
__attribute__((overloadable)) uchar8 U(uchar16 a, uchar16 b, ulong8 c);
__attribute__((overloadable)) uchar16 U(uchar2 a, uchar2 b, ulong16 c);
__attribute__((overloadable)) uchar16 U(uchar4 a, uchar4 b, ulong16 c);
__attribute__((overloadable)) uchar16 U(uchar8 a, uchar8 b, ulong16 c);
__attribute__((overloadable)) uchar16 U(uchar16 a, uchar16 b, ulong16 c);
__attribute__((overloadable)) short2 U(short2 a, short2 b, uchar2 c);
__attribute__((overloadable)) short2 U(short4 a, short4 b, uchar2 c);
__attribute__((overloadable)) short2 U(short8 a, short8 b, uchar2 c);
__attribute__((overloadable)) short2 U(short16 a, short16 b, uchar2 c);
__attribute__((overloadable)) short4 U(short2 a, short2 b, uchar4 c);
__attribute__((overloadable)) short4 U(short4 a, short4 b, uchar4 c);
__attribute__((overloadable)) short4 U(short8 a, short8 b, uchar4 c);
__attribute__((overloadable)) short4 U(short16 a, short16 b, uchar4 c);
__attribute__((overloadable)) short8 U(short2 a, short2 b, uchar8 c);
__attribute__((overloadable)) short8 U(short4 a, short4 b, uchar8 c);
__attribute__((overloadable)) short8 U(short8 a, short8 b, uchar8 c);
__attribute__((overloadable)) short8 U(short16 a, short16 b, uchar8 c);
__attribute__((overloadable)) short16 U(short2 a, short2 b, uchar16 c);
__attribute__((overloadable)) short16 U(short4 a, short4 b, uchar16 c);
__attribute__((overloadable)) short16 U(short8 a, short8 b, uchar16 c);
__attribute__((overloadable)) short16 U(short16 a, short16 b, uchar16 c);
__attribute__((overloadable)) short2 U(short2 a, short2 b, ushort2 c);
__attribute__((overloadable)) short2 U(short4 a, short4 b, ushort2 c);
__attribute__((overloadable)) short2 U(short8 a, short8 b, ushort2 c);
__attribute__((overloadable)) short2 U(short16 a, short16 b, ushort2 c);
__attribute__((overloadable)) short4 U(short2 a, short2 b, ushort4 c);
__attribute__((overloadable)) short4 U(short4 a, short4 b, ushort4 c);
__attribute__((overloadable)) short4 U(short8 a, short8 b, ushort4 c);
__attribute__((overloadable)) short4 U(short16 a, short16 b, ushort4 c);
__attribute__((overloadable)) short8 U(short2 a, short2 b, ushort8 c);
__attribute__((overloadable)) short8 U(short4 a, short4 b, ushort8 c);
__attribute__((overloadable)) short8 U(short8 a, short8 b, ushort8 c);
__attribute__((overloadable)) short8 U(short16 a, short16 b, ushort8 c);
__attribute__((overloadable)) short16 U(short2 a, short2 b, ushort16 c);
__attribute__((overloadable)) short16 U(short4 a, short4 b, ushort16 c);
__attribute__((overloadable)) short16 U(short8 a, short8 b, ushort16 c);
__attribute__((overloadable)) short16 U(short16 a, short16 b, ushort16 c);
__attribute__((overloadable)) short2 U(short2 a, short2 b, uint2 c);
__attribute__((overloadable)) short2 U(short4 a, short4 b, uint2 c);
__attribute__((overloadable)) short2 U(short8 a, short8 b, uint2 c);
__attribute__((overloadable)) short2 U(short16 a, short16 b, uint2 c);
__attribute__((overloadable)) short4 U(short2 a, short2 b, uint4 c);
__attribute__((overloadable)) short4 U(short4 a, short4 b, uint4 c);
__attribute__((overloadable)) short4 U(short8 a, short8 b, uint4 c);
__attribute__((overloadable)) short4 U(short16 a, short16 b, uint4 c);
__attribute__((overloadable)) short8 U(short2 a, short2 b, uint8 c);
__attribute__((overloadable)) short8 U(short4 a, short4 b, uint8 c);
__attribute__((overloadable)) short8 U(short8 a, short8 b, uint8 c);
__attribute__((overloadable)) short8 U(short16 a, short16 b, uint8 c);
__attribute__((overloadable)) short16 U(short2 a, short2 b, uint16 c);
__attribute__((overloadable)) short16 U(short4 a, short4 b, uint16 c);
__attribute__((overloadable)) short16 U(short8 a, short8 b, uint16 c);
__attribute__((overloadable)) short16 U(short16 a, short16 b, uint16 c);
__attribute__((overloadable)) short2 U(short2 a, short2 b, ulong2 c);
__attribute__((overloadable)) short2 U(short4 a, short4 b, ulong2 c);
__attribute__((overloadable)) short2 U(short8 a, short8 b, ulong2 c);
__attribute__((overloadable)) short2 U(short16 a, short16 b, ulong2 c);
__attribute__((overloadable)) short4 U(short2 a, short2 b, ulong4 c);
__attribute__((overloadable)) short4 U(short4 a, short4 b, ulong4 c);
__attribute__((overloadable)) short4 U(short8 a, short8 b, ulong4 c);
__attribute__((overloadable)) short4 U(short16 a, short16 b, ulong4 c);
__attribute__((overloadable)) short8 U(short2 a, short2 b, ulong8 c);
__attribute__((overloadable)) short8 U(short4 a, short4 b, ulong8 c);
__attribute__((overloadable)) short8 U(short8 a, short8 b, ulong8 c);
__attribute__((overloadable)) short8 U(short16 a, short16 b, ulong8 c);
__attribute__((overloadable)) short16 U(short2 a, short2 b, ulong16 c);
__attribute__((overloadable)) short16 U(short4 a, short4 b, ulong16 c);
__attribute__((overloadable)) short16 U(short8 a, short8 b, ulong16 c);
__attribute__((overloadable)) short16 U(short16 a, short16 b, ulong16 c);
__attribute__((overloadable)) ushort2 U(ushort2 a, ushort2 b, uchar2 c);
__attribute__((overloadable)) ushort2 U(ushort4 a, ushort4 b, uchar2 c);
__attribute__((overloadable)) ushort2 U(ushort8 a, ushort8 b, uchar2 c);
__attribute__((overloadable)) ushort2 U(ushort16 a, ushort16 b, uchar2 c);
__attribute__((overloadable)) ushort4 U(ushort2 a, ushort2 b, uchar4 c);
__attribute__((overloadable)) ushort4 U(ushort4 a, ushort4 b, uchar4 c);
__attribute__((overloadable)) ushort4 U(ushort8 a, ushort8 b, uchar4 c);
__attribute__((overloadable)) ushort4 U(ushort16 a, ushort16 b, uchar4 c);
__attribute__((overloadable)) ushort8 U(ushort2 a, ushort2 b, uchar8 c);
__attribute__((overloadable)) ushort8 U(ushort4 a, ushort4 b, uchar8 c);
__attribute__((overloadable)) ushort8 U(ushort8 a, ushort8 b, uchar8 c);
__attribute__((overloadable)) ushort8 U(ushort16 a, ushort16 b, uchar8 c);
__attribute__((overloadable)) ushort16 U(ushort2 a, ushort2 b, uchar16 c);
__attribute__((overloadable)) ushort16 U(ushort4 a, ushort4 b, uchar16 c);
__attribute__((overloadable)) ushort16 U(ushort8 a, ushort8 b, uchar16 c);
__attribute__((overloadable)) ushort16 U(ushort16 a, ushort16 b, uchar16 c);
__attribute__((overloadable)) ushort2 U(ushort2 a, ushort2 b, ushort2 c);
__attribute__((overloadable)) ushort2 U(ushort4 a, ushort4 b, ushort2 c);
__attribute__((overloadable)) ushort2 U(ushort8 a, ushort8 b, ushort2 c);
__attribute__((overloadable)) ushort2 U(ushort16 a, ushort16 b, ushort2 c);
__attribute__((overloadable)) ushort4 U(ushort2 a, ushort2 b, ushort4 c);
__attribute__((overloadable)) ushort4 U(ushort4 a, ushort4 b, ushort4 c);
__attribute__((overloadable)) ushort4 U(ushort8 a, ushort8 b, ushort4 c);
__attribute__((overloadable)) ushort4 U(ushort16 a, ushort16 b, ushort4 c);
__attribute__((overloadable)) ushort8 U(ushort2 a, ushort2 b, ushort8 c);
__attribute__((overloadable)) ushort8 U(ushort4 a, ushort4 b, ushort8 c);
__attribute__((overloadable)) ushort8 U(ushort8 a, ushort8 b, ushort8 c);
__attribute__((overloadable)) ushort8 U(ushort16 a, ushort16 b, ushort8 c);
__attribute__((overloadable)) ushort16 U(ushort2 a, ushort2 b, ushort16 c);
__attribute__((overloadable)) ushort16 U(ushort4 a, ushort4 b, ushort16 c);
__attribute__((overloadable)) ushort16 U(ushort8 a, ushort8 b, ushort16 c);
__attribute__((overloadable)) ushort16 U(ushort16 a, ushort16 b, ushort16 c);
__attribute__((overloadable)) ushort2 U(ushort2 a, ushort2 b, uint2 c);
__attribute__((overloadable)) ushort2 U(ushort4 a, ushort4 b, uint2 c);
__attribute__((overloadable)) ushort2 U(ushort8 a, ushort8 b, uint2 c);
__attribute__((overloadable)) ushort2 U(ushort16 a, ushort16 b, uint2 c);
__attribute__((overloadable)) ushort4 U(ushort2 a, ushort2 b, uint4 c);
__attribute__((overloadable)) ushort4 U(ushort4 a, ushort4 b, uint4 c);
__attribute__((overloadable)) ushort4 U(ushort8 a, ushort8 b, uint4 c);
__attribute__((overloadable)) ushort4 U(ushort16 a, ushort16 b, uint4 c);
__attribute__((overloadable)) ushort8 U(ushort2 a, ushort2 b, uint8 c);
__attribute__((overloadable)) ushort8 U(ushort4 a, ushort4 b, uint8 c);
__attribute__((overloadable)) ushort8 U(ushort8 a, ushort8 b, uint8 c);
__attribute__((overloadable)) ushort8 U(ushort16 a, ushort16 b, uint8 c);
__attribute__((overloadable)) ushort16 U(ushort2 a, ushort2 b, uint16 c);
__attribute__((overloadable)) ushort16 U(ushort4 a, ushort4 b, uint16 c);
__attribute__((overloadable)) ushort16 U(ushort8 a, ushort8 b, uint16 c);
__attribute__((overloadable)) ushort16 U(ushort16 a, ushort16 b, uint16 c);
__attribute__((overloadable)) ushort2 U(ushort2 a, ushort2 b, ulong2 c);
__attribute__((overloadable)) ushort2 U(ushort4 a, ushort4 b, ulong2 c);
__attribute__((overloadable)) ushort2 U(ushort8 a, ushort8 b, ulong2 c);
__attribute__((overloadable)) ushort2 U(ushort16 a, ushort16 b, ulong2 c);
__attribute__((overloadable)) ushort4 U(ushort2 a, ushort2 b, ulong4 c);
__attribute__((overloadable)) ushort4 U(ushort4 a, ushort4 b, ulong4 c);
__attribute__((overloadable)) ushort4 U(ushort8 a, ushort8 b, ulong4 c);
__attribute__((overloadable)) ushort4 U(ushort16 a, ushort16 b, ulong4 c);
__attribute__((overloadable)) ushort8 U(ushort2 a, ushort2 b, ulong8 c);
__attribute__((overloadable)) ushort8 U(ushort4 a, ushort4 b, ulong8 c);
__attribute__((overloadable)) ushort8 U(ushort8 a, ushort8 b, ulong8 c);
__attribute__((overloadable)) ushort8 U(ushort16 a, ushort16 b, ulong8 c);
__attribute__((overloadable)) ushort16 U(ushort2 a, ushort2 b, ulong16 c);
__attribute__((overloadable)) ushort16 U(ushort4 a, ushort4 b, ulong16 c);
__attribute__((overloadable)) ushort16 U(ushort8 a, ushort8 b, ulong16 c);
__attribute__((overloadable)) ushort16 U(ushort16 a, ushort16 b, ulong16 c);
__attribute__((overloadable)) half2 U(half2 a, half2 b, uchar2 c);
__attribute__((overloadable)) half2 U(half4 a, half4 b, uchar2 c);
__attribute__((overloadable)) half2 U(half8 a, half8 b, uchar2 c);
__attribute__((overloadable)) half2 U(half16 a, half16 b, uchar2 c);
__attribute__((overloadable)) half4 U(half2 a, half2 b, uchar4 c);
__attribute__((overloadable)) half4 U(half4 a, half4 b, uchar4 c);
__attribute__((overloadable)) half4 U(half8 a, half8 b, uchar4 c);
__attribute__((overloadable)) half4 U(half16 a, half16 b, uchar4 c);
__attribute__((overloadable)) half8 U(half2 a, half2 b, uchar8 c);
__attribute__((overloadable)) half8 U(half4 a, half4 b, uchar8 c);
__attribute__((overloadable)) half8 U(half8 a, half8 b, uchar8 c);
__attribute__((overloadable)) half8 U(half16 a, half16 b, uchar8 c);
__attribute__((overloadable)) half16 U(half2 a, half2 b, uchar16 c);
__attribute__((overloadable)) half16 U(half4 a, half4 b, uchar16 c);
__attribute__((overloadable)) half16 U(half8 a, half8 b, uchar16 c);
__attribute__((overloadable)) half16 U(half16 a, half16 b, uchar16 c);
__attribute__((overloadable)) half2 U(half2 a, half2 b, ushort2 c);
__attribute__((overloadable)) half2 U(half4 a, half4 b, ushort2 c);
__attribute__((overloadable)) half2 U(half8 a, half8 b, ushort2 c);
__attribute__((overloadable)) half2 U(half16 a, half16 b, ushort2 c);
__attribute__((overloadable)) half4 U(half2 a, half2 b, ushort4 c);
__attribute__((overloadable)) half4 U(half4 a, half4 b, ushort4 c);
__attribute__((overloadable)) half4 U(half8 a, half8 b, ushort4 c);
__attribute__((overloadable)) half4 U(half16 a, half16 b, ushort4 c);
__attribute__((overloadable)) half8 U(half2 a, half2 b, ushort8 c);
__attribute__((overloadable)) half8 U(half4 a, half4 b, ushort8 c);
__attribute__((overloadable)) half8 U(half8 a, half8 b, ushort8 c);
__attribute__((overloadable)) half8 U(half16 a, half16 b, ushort8 c);
__attribute__((overloadable)) half16 U(half2 a, half2 b, ushort16 c);
__attribute__((overloadable)) half16 U(half4 a, half4 b, ushort16 c);
__attribute__((overloadable)) half16 U(half8 a, half8 b, ushort16 c);
__attribute__((overloadable)) half16 U(half16 a, half16 b, ushort16 c);
__attribute__((overloadable)) half2 U(half2 a, half2 b, uint2 c);
__attribute__((overloadable)) half2 U(half4 a, half4 b, uint2 c);
__attribute__((overloadable)) half2 U(half8 a, half8 b, uint2 c);
__attribute__((overloadable)) half2 U(half16 a, half16 b, uint2 c);
__attribute__((overloadable)) half4 U(half2 a, half2 b, uint4 c);
__attribute__((overloadable)) half4 U(half4 a, half4 b, uint4 c);
__attribute__((overloadable)) half4 U(half8 a, half8 b, uint4 c);
__attribute__((overloadable)) half4 U(half16 a, half16 b, uint4 c);
__attribute__((overloadable)) half8 U(half2 a, half2 b, uint8 c);
__attribute__((overloadable)) half8 U(half4 a, half4 b, uint8 c);
__attribute__((overloadable)) half8 U(half8 a, half8 b, uint8 c);
__attribute__((overloadable)) half8 U(half16 a, half16 b, uint8 c);
__attribute__((overloadable)) half16 U(half2 a, half2 b, uint16 c);
__attribute__((overloadable)) half16 U(half4 a, half4 b, uint16 c);
__attribute__((overloadable)) half16 U(half8 a, half8 b, uint16 c);
__attribute__((overloadable)) half16 U(half16 a, half16 b, uint16 c);
__attribute__((overloadable)) half2 U(half2 a, half2 b, ulong2 c);
__attribute__((overloadable)) half2 U(half4 a, half4 b, ulong2 c);
__attribute__((overloadable)) half2 U(half8 a, half8 b, ulong2 c);
__attribute__((overloadable)) half2 U(half16 a, half16 b, ulong2 c);
__attribute__((overloadable)) half4 U(half2 a, half2 b, ulong4 c);
__attribute__((overloadable)) half4 U(half4 a, half4 b, ulong4 c);
__attribute__((overloadable)) half4 U(half8 a, half8 b, ulong4 c);
__attribute__((overloadable)) half4 U(half16 a, half16 b, ulong4 c);
__attribute__((overloadable)) half8 U(half2 a, half2 b, ulong8 c);
__attribute__((overloadable)) half8 U(half4 a, half4 b, ulong8 c);
__attribute__((overloadable)) half8 U(half8 a, half8 b, ulong8 c);
__attribute__((overloadable)) half8 U(half16 a, half16 b, ulong8 c);
__attribute__((overloadable)) half16 U(half2 a, half2 b, ulong16 c);
__attribute__((overloadable)) half16 U(half4 a, half4 b, ulong16 c);
__attribute__((overloadable)) half16 U(half8 a, half8 b, ulong16 c);
__attribute__((overloadable)) half16 U(half16 a, half16 b, ulong16 c);
__attribute__((overloadable)) int2 U(int2 a, int2 b, uchar2 c);
__attribute__((overloadable)) int2 U(int4 a, int4 b, uchar2 c);
__attribute__((overloadable)) int2 U(int8 a, int8 b, uchar2 c);
__attribute__((overloadable)) int2 U(int16 a, int16 b, uchar2 c);
__attribute__((overloadable)) int4 U(int2 a, int2 b, uchar4 c);
__attribute__((overloadable)) int4 U(int4 a, int4 b, uchar4 c);
__attribute__((overloadable)) int4 U(int8 a, int8 b, uchar4 c);
__attribute__((overloadable)) int4 U(int16 a, int16 b, uchar4 c);
__attribute__((overloadable)) int8 U(int2 a, int2 b, uchar8 c);
__attribute__((overloadable)) int8 U(int4 a, int4 b, uchar8 c);
__attribute__((overloadable)) int8 U(int8 a, int8 b, uchar8 c);
__attribute__((overloadable)) int8 U(int16 a, int16 b, uchar8 c);
__attribute__((overloadable)) int16 U(int2 a, int2 b, uchar16 c);
__attribute__((overloadable)) int16 U(int4 a, int4 b, uchar16 c);
__attribute__((overloadable)) int16 U(int8 a, int8 b, uchar16 c);
__attribute__((overloadable)) int16 U(int16 a, int16 b, uchar16 c);
__attribute__((overloadable)) int2 U(int2 a, int2 b, ushort2 c);
__attribute__((overloadable)) int2 U(int4 a, int4 b, ushort2 c);
__attribute__((overloadable)) int2 U(int8 a, int8 b, ushort2 c);
__attribute__((overloadable)) int2 U(int16 a, int16 b, ushort2 c);
__attribute__((overloadable)) int4 U(int2 a, int2 b, ushort4 c);
__attribute__((overloadable)) int4 U(int4 a, int4 b, ushort4 c);
__attribute__((overloadable)) int4 U(int8 a, int8 b, ushort4 c);
__attribute__((overloadable)) int4 U(int16 a, int16 b, ushort4 c);
__attribute__((overloadable)) int8 U(int2 a, int2 b, ushort8 c);
__attribute__((overloadable)) int8 U(int4 a, int4 b, ushort8 c);
__attribute__((overloadable)) int8 U(int8 a, int8 b, ushort8 c);
__attribute__((overloadable)) int8 U(int16 a, int16 b, ushort8 c);
__attribute__((overloadable)) int16 U(int2 a, int2 b, ushort16 c);
__attribute__((overloadable)) int16 U(int4 a, int4 b, ushort16 c);
__attribute__((overloadable)) int16 U(int8 a, int8 b, ushort16 c);
__attribute__((overloadable)) int16 U(int16 a, int16 b, ushort16 c);
__attribute__((overloadable)) int2 U(int2 a, int2 b, uint2 c);
__attribute__((overloadable)) int2 U(int4 a, int4 b, uint2 c);
__attribute__((overloadable)) int2 U(int8 a, int8 b, uint2 c);
__attribute__((overloadable)) int2 U(int16 a, int16 b, uint2 c);
__attribute__((overloadable)) int4 U(int2 a, int2 b, uint4 c);
__attribute__((overloadable)) int4 U(int4 a, int4 b, uint4 c);
__attribute__((overloadable)) int4 U(int8 a, int8 b, uint4 c);
__attribute__((overloadable)) int4 U(int16 a, int16 b, uint4 c);
__attribute__((overloadable)) int8 U(int2 a, int2 b, uint8 c);
__attribute__((overloadable)) int8 U(int4 a, int4 b, uint8 c);
__attribute__((overloadable)) int8 U(int8 a, int8 b, uint8 c);
__attribute__((overloadable)) int8 U(int16 a, int16 b, uint8 c);
__attribute__((overloadable)) int16 U(int2 a, int2 b, uint16 c);
__attribute__((overloadable)) int16 U(int4 a, int4 b, uint16 c);
__attribute__((overloadable)) int16 U(int8 a, int8 b, uint16 c);
__attribute__((overloadable)) int16 U(int16 a, int16 b, uint16 c);
__attribute__((overloadable)) int2 U(int2 a, int2 b, ulong2 c);
__attribute__((overloadable)) int2 U(int4 a, int4 b, ulong2 c);
__attribute__((overloadable)) int2 U(int8 a, int8 b, ulong2 c);
__attribute__((overloadable)) int2 U(int16 a, int16 b, ulong2 c);
__attribute__((overloadable)) int4 U(int2 a, int2 b, ulong4 c);
__attribute__((overloadable)) int4 U(int4 a, int4 b, ulong4 c);
__attribute__((overloadable)) int4 U(int8 a, int8 b, ulong4 c);
__attribute__((overloadable)) int4 U(int16 a, int16 b, ulong4 c);
__attribute__((overloadable)) int8 U(int2 a, int2 b, ulong8 c);
__attribute__((overloadable)) int8 U(int4 a, int4 b, ulong8 c);
__attribute__((overloadable)) int8 U(int8 a, int8 b, ulong8 c);
__attribute__((overloadable)) int8 U(int16 a, int16 b, ulong8 c);
__attribute__((overloadable)) int16 U(int2 a, int2 b, ulong16 c);
__attribute__((overloadable)) int16 U(int4 a, int4 b, ulong16 c);
__attribute__((overloadable)) int16 U(int8 a, int8 b, ulong16 c);
__attribute__((overloadable)) int16 U(int16 a, int16 b, ulong16 c);
__attribute__((overloadable)) uint2 U(uint2 a, uint2 b, uchar2 c);
__attribute__((overloadable)) uint2 U(uint4 a, uint4 b, uchar2 c);
__attribute__((overloadable)) uint2 U(uint8 a, uint8 b, uchar2 c);
__attribute__((overloadable)) uint2 U(uint16 a, uint16 b, uchar2 c);
__attribute__((overloadable)) uint4 U(uint2 a, uint2 b, uchar4 c);
__attribute__((overloadable)) uint4 U(uint4 a, uint4 b, uchar4 c);
__attribute__((overloadable)) uint4 U(uint8 a, uint8 b, uchar4 c);
__attribute__((overloadable)) uint4 U(uint16 a, uint16 b, uchar4 c);
__attribute__((overloadable)) uint8 U(uint2 a, uint2 b, uchar8 c);
__attribute__((overloadable)) uint8 U(uint4 a, uint4 b, uchar8 c);
__attribute__((overloadable)) uint8 U(uint8 a, uint8 b, uchar8 c);
__attribute__((overloadable)) uint8 U(uint16 a, uint16 b, uchar8 c);
__attribute__((overloadable)) uint16 U(uint2 a, uint2 b, uchar16 c);
__attribute__((overloadable)) uint16 U(uint4 a, uint4 b, uchar16 c);
__attribute__((overloadable)) uint16 U(uint8 a, uint8 b, uchar16 c);
__attribute__((overloadable)) uint16 U(uint16 a, uint16 b, uchar16 c);
__attribute__((overloadable)) uint2 U(uint2 a, uint2 b, ushort2 c);
__attribute__((overloadable)) uint2 U(uint4 a, uint4 b, ushort2 c);
__attribute__((overloadable)) uint2 U(uint8 a, uint8 b, ushort2 c);
__attribute__((overloadable)) uint2 U(uint16 a, uint16 b, ushort2 c);
__attribute__((overloadable)) uint4 U(uint2 a, uint2 b, ushort4 c);
__attribute__((overloadable)) uint4 U(uint4 a, uint4 b, ushort4 c);
__attribute__((overloadable)) uint4 U(uint8 a, uint8 b, ushort4 c);
__attribute__((overloadable)) uint4 U(uint16 a, uint16 b, ushort4 c);
__attribute__((overloadable)) uint8 U(uint2 a, uint2 b, ushort8 c);
__attribute__((overloadable)) uint8 U(uint4 a, uint4 b, ushort8 c);
__attribute__((overloadable)) uint8 U(uint8 a, uint8 b, ushort8 c);
__attribute__((overloadable)) uint8 U(uint16 a, uint16 b, ushort8 c);
__attribute__((overloadable)) uint16 U(uint2 a, uint2 b, ushort16 c);
__attribute__((overloadable)) uint16 U(uint4 a, uint4 b, ushort16 c);
__attribute__((overloadable)) uint16 U(uint8 a, uint8 b, ushort16 c);
__attribute__((overloadable)) uint16 U(uint16 a, uint16 b, ushort16 c);
__attribute__((overloadable)) uint2 U(uint2 a, uint2 b, uint2 c);
__attribute__((overloadable)) uint2 U(uint4 a, uint4 b, uint2 c);
__attribute__((overloadable)) uint2 U(uint8 a, uint8 b, uint2 c);
__attribute__((overloadable)) uint2 U(uint16 a, uint16 b, uint2 c);
__attribute__((overloadable)) uint4 U(uint2 a, uint2 b, uint4 c);
__attribute__((overloadable)) uint4 U(uint4 a, uint4 b, uint4 c);
__attribute__((overloadable)) uint4 U(uint8 a, uint8 b, uint4 c);
__attribute__((overloadable)) uint4 U(uint16 a, uint16 b, uint4 c);
__attribute__((overloadable)) uint8 U(uint2 a, uint2 b, uint8 c);
__attribute__((overloadable)) uint8 U(uint4 a, uint4 b, uint8 c);
__attribute__((overloadable)) uint8 U(uint8 a, uint8 b, uint8 c);
__attribute__((overloadable)) uint8 U(uint16 a, uint16 b, uint8 c);
__attribute__((overloadable)) uint16 U(uint2 a, uint2 b, uint16 c);
__attribute__((overloadable)) uint16 U(uint4 a, uint4 b, uint16 c);
__attribute__((overloadable)) uint16 U(uint8 a, uint8 b, uint16 c);
__attribute__((overloadable)) uint16 U(uint16 a, uint16 b, uint16 c);
__attribute__((overloadable)) uint2 U(uint2 a, uint2 b, ulong2 c);
__attribute__((overloadable)) uint2 U(uint4 a, uint4 b, ulong2 c);
__attribute__((overloadable)) uint2 U(uint8 a, uint8 b, ulong2 c);
__attribute__((overloadable)) uint2 U(uint16 a, uint16 b, ulong2 c);
__attribute__((overloadable)) uint4 U(uint2 a, uint2 b, ulong4 c);
__attribute__((overloadable)) uint4 U(uint4 a, uint4 b, ulong4 c);
__attribute__((overloadable)) uint4 U(uint8 a, uint8 b, ulong4 c);
__attribute__((overloadable)) uint4 U(uint16 a, uint16 b, ulong4 c);
__attribute__((overloadable)) uint8 U(uint2 a, uint2 b, ulong8 c);
__attribute__((overloadable)) uint8 U(uint4 a, uint4 b, ulong8 c);
__attribute__((overloadable)) uint8 U(uint8 a, uint8 b, ulong8 c);
__attribute__((overloadable)) uint8 U(uint16 a, uint16 b, ulong8 c);
__attribute__((overloadable)) uint16 U(uint2 a, uint2 b, ulong16 c);
__attribute__((overloadable)) uint16 U(uint4 a, uint4 b, ulong16 c);
__attribute__((overloadable)) uint16 U(uint8 a, uint8 b, ulong16 c);
__attribute__((overloadable)) uint16 U(uint16 a, uint16 b, ulong16 c);
__attribute__((overloadable)) float2 U(float2 a, float2 b, uchar2 c);
__attribute__((overloadable)) float2 U(float4 a, float4 b, uchar2 c);
__attribute__((overloadable)) float2 U(float8 a, float8 b, uchar2 c);
__attribute__((overloadable)) float2 U(float16 a, float16 b, uchar2 c);
__attribute__((overloadable)) float4 U(float2 a, float2 b, uchar4 c);
__attribute__((overloadable)) float4 U(float4 a, float4 b, uchar4 c);
__attribute__((overloadable)) float4 U(float8 a, float8 b, uchar4 c);
__attribute__((overloadable)) float4 U(float16 a, float16 b, uchar4 c);
__attribute__((overloadable)) float8 U(float2 a, float2 b, uchar8 c);
__attribute__((overloadable)) float8 U(float4 a, float4 b, uchar8 c);
__attribute__((overloadable)) float8 U(float8 a, float8 b, uchar8 c);
__attribute__((overloadable)) float8 U(float16 a, float16 b, uchar8 c);
__attribute__((overloadable)) float16 U(float2 a, float2 b, uchar16 c);
__attribute__((overloadable)) float16 U(float4 a, float4 b, uchar16 c);
__attribute__((overloadable)) float16 U(float8 a, float8 b, uchar16 c);
__attribute__((overloadable)) float16 U(float16 a, float16 b, uchar16 c);
__attribute__((overloadable)) float2 U(float2 a, float2 b, ushort2 c);
__attribute__((overloadable)) float2 U(float4 a, float4 b, ushort2 c);
__attribute__((overloadable)) float2 U(float8 a, float8 b, ushort2 c);
__attribute__((overloadable)) float2 U(float16 a, float16 b, ushort2 c);
__attribute__((overloadable)) float4 U(float2 a, float2 b, ushort4 c);
__attribute__((overloadable)) float4 U(float4 a, float4 b, ushort4 c);
__attribute__((overloadable)) float4 U(float8 a, float8 b, ushort4 c);
__attribute__((overloadable)) float4 U(float16 a, float16 b, ushort4 c);
__attribute__((overloadable)) float8 U(float2 a, float2 b, ushort8 c);
__attribute__((overloadable)) float8 U(float4 a, float4 b, ushort8 c);
__attribute__((overloadable)) float8 U(float8 a, float8 b, ushort8 c);
__attribute__((overloadable)) float8 U(float16 a, float16 b, ushort8 c);
__attribute__((overloadable)) float16 U(float2 a, float2 b, ushort16 c);
__attribute__((overloadable)) float16 U(float4 a, float4 b, ushort16 c);
__attribute__((overloadable)) float16 U(float8 a, float8 b, ushort16 c);
__attribute__((overloadable)) float16 U(float16 a, float16 b, ushort16 c);
__attribute__((overloadable)) float2 U(float2 a, float2 b, uint2 c);
__attribute__((overloadable)) float2 U(float4 a, float4 b, uint2 c);
__attribute__((overloadable)) float2 U(float8 a, float8 b, uint2 c);
__attribute__((overloadable)) float2 U(float16 a, float16 b, uint2 c);
__attribute__((overloadable)) float4 U(float2 a, float2 b, uint4 c);
__attribute__((overloadable)) float4 U(float4 a, float4 b, uint4 c);
__attribute__((overloadable)) float4 U(float8 a, float8 b, uint4 c);
__attribute__((overloadable)) float4 U(float16 a, float16 b, uint4 c);
__attribute__((overloadable)) float8 U(float2 a, float2 b, uint8 c);
__attribute__((overloadable)) float8 U(float4 a, float4 b, uint8 c);
__attribute__((overloadable)) float8 U(float8 a, float8 b, uint8 c);
__attribute__((overloadable)) float8 U(float16 a, float16 b, uint8 c);
__attribute__((overloadable)) float16 U(float2 a, float2 b, uint16 c);
__attribute__((overloadable)) float16 U(float4 a, float4 b, uint16 c);
__attribute__((overloadable)) float16 U(float8 a, float8 b, uint16 c);
__attribute__((overloadable)) float16 U(float16 a, float16 b, uint16 c);
__attribute__((overloadable)) float2 U(float2 a, float2 b, ulong2 c);
__attribute__((overloadable)) float2 U(float4 a, float4 b, ulong2 c);
__attribute__((overloadable)) float2 U(float8 a, float8 b, ulong2 c);
__attribute__((overloadable)) float2 U(float16 a, float16 b, ulong2 c);
__attribute__((overloadable)) float4 U(float2 a, float2 b, ulong4 c);
__attribute__((overloadable)) float4 U(float4 a, float4 b, ulong4 c);
__attribute__((overloadable)) float4 U(float8 a, float8 b, ulong4 c);
__attribute__((overloadable)) float4 U(float16 a, float16 b, ulong4 c);
__attribute__((overloadable)) float8 U(float2 a, float2 b, ulong8 c);
__attribute__((overloadable)) float8 U(float4 a, float4 b, ulong8 c);
__attribute__((overloadable)) float8 U(float8 a, float8 b, ulong8 c);
__attribute__((overloadable)) float8 U(float16 a, float16 b, ulong8 c);
__attribute__((overloadable)) float16 U(float2 a, float2 b, ulong16 c);
__attribute__((overloadable)) float16 U(float4 a, float4 b, ulong16 c);
__attribute__((overloadable)) float16 U(float8 a, float8 b, ulong16 c);
__attribute__((overloadable)) float16 U(float16 a, float16 b, ulong16 c);
__attribute__((overloadable)) long2 U(long2 a, long2 b, uchar2 c);
__attribute__((overloadable)) long2 U(long4 a, long4 b, uchar2 c);
__attribute__((overloadable)) long2 U(long8 a, long8 b, uchar2 c);
__attribute__((overloadable)) long2 U(long16 a, long16 b, uchar2 c);
__attribute__((overloadable)) long4 U(long2 a, long2 b, uchar4 c);
__attribute__((overloadable)) long4 U(long4 a, long4 b, uchar4 c);
__attribute__((overloadable)) long4 U(long8 a, long8 b, uchar4 c);
__attribute__((overloadable)) long4 U(long16 a, long16 b, uchar4 c);
__attribute__((overloadable)) long8 U(long2 a, long2 b, uchar8 c);
__attribute__((overloadable)) long8 U(long4 a, long4 b, uchar8 c);
__attribute__((overloadable)) long8 U(long8 a, long8 b, uchar8 c);
__attribute__((overloadable)) long8 U(long16 a, long16 b, uchar8 c);
__attribute__((overloadable)) long16 U(long2 a, long2 b, uchar16 c);
__attribute__((overloadable)) long16 U(long4 a, long4 b, uchar16 c);
__attribute__((overloadable)) long16 U(long8 a, long8 b, uchar16 c);
__attribute__((overloadable)) long16 U(long16 a, long16 b, uchar16 c);
__attribute__((overloadable)) long2 U(long2 a, long2 b, ushort2 c);
__attribute__((overloadable)) long2 U(long4 a, long4 b, ushort2 c);
__attribute__((overloadable)) long2 U(long8 a, long8 b, ushort2 c);
__attribute__((overloadable)) long2 U(long16 a, long16 b, ushort2 c);
__attribute__((overloadable)) long4 U(long2 a, long2 b, ushort4 c);
__attribute__((overloadable)) long4 U(long4 a, long4 b, ushort4 c);
__attribute__((overloadable)) long4 U(long8 a, long8 b, ushort4 c);
__attribute__((overloadable)) long4 U(long16 a, long16 b, ushort4 c);
__attribute__((overloadable)) long8 U(long2 a, long2 b, ushort8 c);
__attribute__((overloadable)) long8 U(long4 a, long4 b, ushort8 c);
__attribute__((overloadable)) long8 U(long8 a, long8 b, ushort8 c);
__attribute__((overloadable)) long8 U(long16 a, long16 b, ushort8 c);
__attribute__((overloadable)) long16 U(long2 a, long2 b, ushort16 c);
__attribute__((overloadable)) long16 U(long4 a, long4 b, ushort16 c);
__attribute__((overloadable)) long16 U(long8 a, long8 b, ushort16 c);
__attribute__((overloadable)) long16 U(long16 a, long16 b, ushort16 c);
__attribute__((overloadable)) long2 U(long2 a, long2 b, uint2 c);
__attribute__((overloadable)) long2 U(long4 a, long4 b, uint2 c);
__attribute__((overloadable)) long2 U(long8 a, long8 b, uint2 c);
__attribute__((overloadable)) long2 U(long16 a, long16 b, uint2 c);
__attribute__((overloadable)) long4 U(long2 a, long2 b, uint4 c);
__attribute__((overloadable)) long4 U(long4 a, long4 b, uint4 c);
__attribute__((overloadable)) long4 U(long8 a, long8 b, uint4 c);
__attribute__((overloadable)) long4 U(long16 a, long16 b, uint4 c);
__attribute__((overloadable)) long8 U(long2 a, long2 b, uint8 c);
__attribute__((overloadable)) long8 U(long4 a, long4 b, uint8 c);
__attribute__((overloadable)) long8 U(long8 a, long8 b, uint8 c);
__attribute__((overloadable)) long8 U(long16 a, long16 b, uint8 c);
__attribute__((overloadable)) long16 U(long2 a, long2 b, uint16 c);
__attribute__((overloadable)) long16 U(long4 a, long4 b, uint16 c);
__attribute__((overloadable)) long16 U(long8 a, long8 b, uint16 c);
__attribute__((overloadable)) long16 U(long16 a, long16 b, uint16 c);
__attribute__((overloadable)) long2 U(long2 a, long2 b, ulong2 c);
__attribute__((overloadable)) long2 U(long4 a, long4 b, ulong2 c);
__attribute__((overloadable)) long2 U(long8 a, long8 b, ulong2 c);
__attribute__((overloadable)) long2 U(long16 a, long16 b, ulong2 c);
__attribute__((overloadable)) long4 U(long2 a, long2 b, ulong4 c);
__attribute__((overloadable)) long4 U(long4 a, long4 b, ulong4 c);
__attribute__((overloadable)) long4 U(long8 a, long8 b, ulong4 c);
__attribute__((overloadable)) long4 U(long16 a, long16 b, ulong4 c);
__attribute__((overloadable)) long8 U(long2 a, long2 b, ulong8 c);
__attribute__((overloadable)) long8 U(long4 a, long4 b, ulong8 c);
__attribute__((overloadable)) long8 U(long8 a, long8 b, ulong8 c);
__attribute__((overloadable)) long8 U(long16 a, long16 b, ulong8 c);
__attribute__((overloadable)) long16 U(long2 a, long2 b, ulong16 c);
__attribute__((overloadable)) long16 U(long4 a, long4 b, ulong16 c);
__attribute__((overloadable)) long16 U(long8 a, long8 b, ulong16 c);
__attribute__((overloadable)) long16 U(long16 a, long16 b, ulong16 c);
__attribute__((overloadable)) ulong2 U(ulong2 a, ulong2 b, uchar2 c);
__attribute__((overloadable)) ulong2 U(ulong4 a, ulong4 b, uchar2 c);
__attribute__((overloadable)) ulong2 U(ulong8 a, ulong8 b, uchar2 c);
__attribute__((overloadable)) ulong2 U(ulong16 a, ulong16 b, uchar2 c);
__attribute__((overloadable)) ulong4 U(ulong2 a, ulong2 b, uchar4 c);
__attribute__((overloadable)) ulong4 U(ulong4 a, ulong4 b, uchar4 c);
__attribute__((overloadable)) ulong4 U(ulong8 a, ulong8 b, uchar4 c);
__attribute__((overloadable)) ulong4 U(ulong16 a, ulong16 b, uchar4 c);
__attribute__((overloadable)) ulong8 U(ulong2 a, ulong2 b, uchar8 c);
__attribute__((overloadable)) ulong8 U(ulong4 a, ulong4 b, uchar8 c);
__attribute__((overloadable)) ulong8 U(ulong8 a, ulong8 b, uchar8 c);
__attribute__((overloadable)) ulong8 U(ulong16 a, ulong16 b, uchar8 c);
__attribute__((overloadable)) ulong16 U(ulong2 a, ulong2 b, uchar16 c);
__attribute__((overloadable)) ulong16 U(ulong4 a, ulong4 b, uchar16 c);
__attribute__((overloadable)) ulong16 U(ulong8 a, ulong8 b, uchar16 c);
__attribute__((overloadable)) ulong16 U(ulong16 a, ulong16 b, uchar16 c);
__attribute__((overloadable)) ulong2 U(ulong2 a, ulong2 b, ushort2 c);
__attribute__((overloadable)) ulong2 U(ulong4 a, ulong4 b, ushort2 c);
__attribute__((overloadable)) ulong2 U(ulong8 a, ulong8 b, ushort2 c);
__attribute__((overloadable)) ulong2 U(ulong16 a, ulong16 b, ushort2 c);
__attribute__((overloadable)) ulong4 U(ulong2 a, ulong2 b, ushort4 c);
__attribute__((overloadable)) ulong4 U(ulong4 a, ulong4 b, ushort4 c);
__attribute__((overloadable)) ulong4 U(ulong8 a, ulong8 b, ushort4 c);
__attribute__((overloadable)) ulong4 U(ulong16 a, ulong16 b, ushort4 c);
__attribute__((overloadable)) ulong8 U(ulong2 a, ulong2 b, ushort8 c);
__attribute__((overloadable)) ulong8 U(ulong4 a, ulong4 b, ushort8 c);
__attribute__((overloadable)) ulong8 U(ulong8 a, ulong8 b, ushort8 c);
__attribute__((overloadable)) ulong8 U(ulong16 a, ulong16 b, ushort8 c);
__attribute__((overloadable)) ulong16 U(ulong2 a, ulong2 b, ushort16 c);
__attribute__((overloadable)) ulong16 U(ulong4 a, ulong4 b, ushort16 c);
__attribute__((overloadable)) ulong16 U(ulong8 a, ulong8 b, ushort16 c);
__attribute__((overloadable)) ulong16 U(ulong16 a, ulong16 b, ushort16 c);
__attribute__((overloadable)) ulong2 U(ulong2 a, ulong2 b, uint2 c);
__attribute__((overloadable)) ulong2 U(ulong4 a, ulong4 b, uint2 c);
__attribute__((overloadable)) ulong2 U(ulong8 a, ulong8 b, uint2 c);
__attribute__((overloadable)) ulong2 U(ulong16 a, ulong16 b, uint2 c);
__attribute__((overloadable)) ulong4 U(ulong2 a, ulong2 b, uint4 c);
__attribute__((overloadable)) ulong4 U(ulong4 a, ulong4 b, uint4 c);
__attribute__((overloadable)) ulong4 U(ulong8 a, ulong8 b, uint4 c);
__attribute__((overloadable)) ulong4 U(ulong16 a, ulong16 b, uint4 c);
__attribute__((overloadable)) ulong8 U(ulong2 a, ulong2 b, uint8 c);
__attribute__((overloadable)) ulong8 U(ulong4 a, ulong4 b, uint8 c);
__attribute__((overloadable)) ulong8 U(ulong8 a, ulong8 b, uint8 c);
__attribute__((overloadable)) ulong8 U(ulong16 a, ulong16 b, uint8 c);
__attribute__((overloadable)) ulong16 U(ulong2 a, ulong2 b, uint16 c);
__attribute__((overloadable)) ulong16 U(ulong4 a, ulong4 b, uint16 c);
__attribute__((overloadable)) ulong16 U(ulong8 a, ulong8 b, uint16 c);
__attribute__((overloadable)) ulong16 U(ulong16 a, ulong16 b, uint16 c);
__attribute__((overloadable)) ulong2 U(ulong2 a, ulong2 b, ulong2 c);
__attribute__((overloadable)) ulong2 U(ulong4 a, ulong4 b, ulong2 c);
__attribute__((overloadable)) ulong2 U(ulong8 a, ulong8 b, ulong2 c);
__attribute__((overloadable)) ulong2 U(ulong16 a, ulong16 b, ulong2 c);
__attribute__((overloadable)) ulong4 U(ulong2 a, ulong2 b, ulong4 c);
__attribute__((overloadable)) ulong4 U(ulong4 a, ulong4 b, ulong4 c);
__attribute__((overloadable)) ulong4 U(ulong8 a, ulong8 b, ulong4 c);
__attribute__((overloadable)) ulong4 U(ulong16 a, ulong16 b, ulong4 c);
__attribute__((overloadable)) ulong8 U(ulong2 a, ulong2 b, ulong8 c);
__attribute__((overloadable)) ulong8 U(ulong4 a, ulong4 b, ulong8 c);
__attribute__((overloadable)) ulong8 U(ulong8 a, ulong8 b, ulong8 c);
__attribute__((overloadable)) ulong8 U(ulong16 a, ulong16 b, ulong8 c);
__attribute__((overloadable)) ulong16 U(ulong2 a, ulong2 b, ulong16 c);
__attribute__((overloadable)) ulong16 U(ulong4 a, ulong4 b, ulong16 c);
__attribute__((overloadable)) ulong16 U(ulong8 a, ulong8 b, ulong16 c);
__attribute__((overloadable)) ulong16 U(ulong16 a, ulong16 b, ulong16 c);
__attribute__((overloadable)) double2 U(double2 a, double2 b, uchar2 c);
__attribute__((overloadable)) double2 U(double4 a, double4 b, uchar2 c);
__attribute__((overloadable)) double2 U(double8 a, double8 b, uchar2 c);
__attribute__((overloadable)) double2 U(double16 a, double16 b, uchar2 c);
__attribute__((overloadable)) double4 U(double2 a, double2 b, uchar4 c);
__attribute__((overloadable)) double4 U(double4 a, double4 b, uchar4 c);
__attribute__((overloadable)) double4 U(double8 a, double8 b, uchar4 c);
__attribute__((overloadable)) double4 U(double16 a, double16 b, uchar4 c);
__attribute__((overloadable)) double8 U(double2 a, double2 b, uchar8 c);
__attribute__((overloadable)) double8 U(double4 a, double4 b, uchar8 c);
__attribute__((overloadable)) double8 U(double8 a, double8 b, uchar8 c);
__attribute__((overloadable)) double8 U(double16 a, double16 b, uchar8 c);
__attribute__((overloadable)) double16 U(double2 a, double2 b, uchar16 c);
__attribute__((overloadable)) double16 U(double4 a, double4 b, uchar16 c);
__attribute__((overloadable)) double16 U(double8 a, double8 b, uchar16 c);
__attribute__((overloadable)) double16 U(double16 a, double16 b, uchar16 c);
__attribute__((overloadable)) double2 U(double2 a, double2 b, ushort2 c);
__attribute__((overloadable)) double2 U(double4 a, double4 b, ushort2 c);
__attribute__((overloadable)) double2 U(double8 a, double8 b, ushort2 c);
__attribute__((overloadable)) double2 U(double16 a, double16 b, ushort2 c);
__attribute__((overloadable)) double4 U(double2 a, double2 b, ushort4 c);
__attribute__((overloadable)) double4 U(double4 a, double4 b, ushort4 c);
__attribute__((overloadable)) double4 U(double8 a, double8 b, ushort4 c);
__attribute__((overloadable)) double4 U(double16 a, double16 b, ushort4 c);
__attribute__((overloadable)) double8 U(double2 a, double2 b, ushort8 c);
__attribute__((overloadable)) double8 U(double4 a, double4 b, ushort8 c);
__attribute__((overloadable)) double8 U(double8 a, double8 b, ushort8 c);
__attribute__((overloadable)) double8 U(double16 a, double16 b, ushort8 c);
__attribute__((overloadable)) double16 U(double2 a, double2 b, ushort16 c);
__attribute__((overloadable)) double16 U(double4 a, double4 b, ushort16 c);
__attribute__((overloadable)) double16 U(double8 a, double8 b, ushort16 c);
__attribute__((overloadable)) double16 U(double16 a, double16 b, ushort16 c);
__attribute__((overloadable)) double2 U(double2 a, double2 b, uint2 c);
__attribute__((overloadable)) double2 U(double4 a, double4 b, uint2 c);
__attribute__((overloadable)) double2 U(double8 a, double8 b, uint2 c);
__attribute__((overloadable)) double2 U(double16 a, double16 b, uint2 c);
__attribute__((overloadable)) double4 U(double2 a, double2 b, uint4 c);
__attribute__((overloadable)) double4 U(double4 a, double4 b, uint4 c);
__attribute__((overloadable)) double4 U(double8 a, double8 b, uint4 c);
__attribute__((overloadable)) double4 U(double16 a, double16 b, uint4 c);
__attribute__((overloadable)) double8 U(double2 a, double2 b, uint8 c);
__attribute__((overloadable)) double8 U(double4 a, double4 b, uint8 c);
__attribute__((overloadable)) double8 U(double8 a, double8 b, uint8 c);
__attribute__((overloadable)) double8 U(double16 a, double16 b, uint8 c);
__attribute__((overloadable)) double16 U(double2 a, double2 b, uint16 c);
__attribute__((overloadable)) double16 U(double4 a, double4 b, uint16 c);
__attribute__((overloadable)) double16 U(double8 a, double8 b, uint16 c);
__attribute__((overloadable)) double16 U(double16 a, double16 b, uint16 c);
__attribute__((overloadable)) double2 U(double2 a, double2 b, ulong2 c);
__attribute__((overloadable)) double2 U(double4 a, double4 b, ulong2 c);
__attribute__((overloadable)) double2 U(double8 a, double8 b, ulong2 c);
__attribute__((overloadable)) double2 U(double16 a, double16 b, ulong2 c);
__attribute__((overloadable)) double4 U(double2 a, double2 b, ulong4 c);
__attribute__((overloadable)) double4 U(double4 a, double4 b, ulong4 c);
__attribute__((overloadable)) double4 U(double8 a, double8 b, ulong4 c);
__attribute__((overloadable)) double4 U(double16 a, double16 b, ulong4 c);
__attribute__((overloadable)) double8 U(double2 a, double2 b, ulong8 c);
__attribute__((overloadable)) double8 U(double4 a, double4 b, ulong8 c);
__attribute__((overloadable)) double8 U(double8 a, double8 b, ulong8 c);
__attribute__((overloadable)) double8 U(double16 a, double16 b, ulong8 c);
__attribute__((overloadable)) double16 U(double2 a, double2 b, ulong16 c);
__attribute__((overloadable)) double16 U(double4 a, double4 b, ulong16 c);
__attribute__((overloadable)) double16 U(double8 a, double8 b, ulong16 c);
__attribute__((overloadable)) double16 U(double16 a, double16 b, ulong16 c);
struct time_stamp {
  ulong tick;

  uint event;
};
typedef struct {
  ushort2 srcCoord;
  short2 ref_offset;
  uchar partition_mask;
  uchar sad_adjustment;
  uchar search_window_config;
  ulong cc0;
  ulong cc1;
  ulong cc2;
  ulong cc3;
  uint2 packed_cost_table;
  uchar cost_precision;
  ulong packed_shape_cost;
} intel_sub_group_avc_ime_payload_t;

typedef uint8 intel_sub_group_avc_ime_result_t;

typedef struct {
  ushort2 srcCoord;
  long mv;
  uchar major_shape;
  uchar minor_shapes;
  uchar directions;
  uchar pixel_mode;
  uchar sad_adjustment;

  ulong cc0;
  ulong cc1;
  ulong cc2;
  ulong cc3;
  uint2 packed_cost_table;
  uchar cost_precision;
  ulong packed_shape_cost;

} intel_sub_group_avc_ref_payload_t;

typedef struct {
  ushort2 srcCoord;
  uint skip_block_partition_type;
  uint skip_motion_vector_mask;
  char bidirectional_weight;
  uchar skip_sad_adjustment;
  long mv;

  uchar luma_intra_partition_mask;
  uchar intra_neighbour_availabilty;
  uint l_0_3;
  uint l_4_7;
  uint l_8_11;
  uint l_12_15;
  uint u_0_3;
  uint u_4_7;
  uint u_8_11;
  uint u_12_15;
  uint ur_16_19;
  uint ur_20_23;
  uchar upper_left_corner_luma_pixel;
  uchar intra_sad_adjustment;
  uint intra_shape_cost;
} intel_sub_group_avc_sic_payload_t;

typedef uint8 intel_sub_group_avc_ref_result_t;

typedef uint8 intel_sub_group_avc_sic_result_t;

uint V(ushort a, uint b);

struct time_stamp W(void);

uint8 X(image2d_t, image2d_t, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, int, int, int);

intel_sub_group_avc_ime_result_t Y(image2d_t, image2d_t, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, int);

intel_sub_group_avc_ime_payload_t Z(ushort2 a, uchar b, uchar c);

intel_sub_group_avc_ime_payload_t AA(short2 a, uchar b, intel_sub_group_avc_ime_payload_t c);

intel_sub_group_avc_ime_result_t AB(read_only image2d_t a, read_only image2d_t b, sampler_t c, intel_sub_group_avc_ime_payload_t d);

ulong AC(intel_sub_group_avc_ime_result_t a);

ushort AD(intel_sub_group_avc_ime_result_t a);

ushort AD(intel_sub_group_avc_ime_result_t a);

uchar AE(intel_sub_group_avc_ime_result_t a);

uchar AF(intel_sub_group_avc_ime_result_t a);

uchar AG(intel_sub_group_avc_ime_result_t a);

intel_sub_group_avc_ref_payload_t AH(ushort2 a, ulong b, uchar c, uchar d, uchar e, uchar f, uchar g);

intel_sub_group_avc_ref_result_t AI(read_only image2d_t a, read_only image2d_t b, sampler_t c, intel_sub_group_avc_ref_payload_t d);

ulong AJ(intel_sub_group_avc_ref_result_t a);

ushort AK(intel_sub_group_avc_ref_result_t a);

uint2 AL(void);

intel_sub_group_avc_ime_payload_t AM(ulong a, uint2 b, uchar c, intel_sub_group_avc_ime_payload_t d);

intel_sub_group_avc_ref_payload_t AN(ulong a, uint2 b, uchar c, intel_sub_group_avc_ref_payload_t d);

intel_sub_group_avc_ime_payload_t AO(ulong a, intel_sub_group_avc_ime_payload_t b);

intel_sub_group_avc_sic_result_t AP(read_only image2d_t a, sampler_t b, intel_sub_group_avc_sic_payload_t c);

intel_sub_group_avc_sic_payload_t AQ(ushort2 a);

intel_sub_group_avc_sic_payload_t AR(uchar a, uchar b, uchar c, uchar d, uchar e, uchar f, uchar g, intel_sub_group_avc_sic_payload_t h);
intel_sub_group_avc_sic_payload_t AS(uint a, intel_sub_group_avc_sic_payload_t b);

uchar AT(intel_sub_group_avc_sic_result_t a);

ushort AU(intel_sub_group_avc_sic_result_t a);

ulong AV(intel_sub_group_avc_sic_result_t a);

intel_sub_group_avc_sic_result_t AW(read_only image2d_t a, read_only image2d_t b, sampler_t c, intel_sub_group_avc_sic_payload_t d);

intel_sub_group_avc_sic_payload_t AX(uint a, uint b, ulong c, char d, uchar e, intel_sub_group_avc_sic_payload_t f);

ushort AY(intel_sub_group_avc_sic_result_t a);

bool AZ(size_t a);
bool BA(size_t a);
void BB(void);
void BC(void);
void BD(void);

__attribute__((overloadable)) void C(cl_mem_fence_flags a) {
}

__attribute__((overloadable)) void D(cl_mem_fence_flags a) {
}

__attribute__((overloadable)) void E(cl_mem_fence_flags a) {
}
cl_mem_fence_flags F(void* a) {
  bool b = AZ((size_t)a);
  return b ? (1 << 0) : (1 << 1);
}