inline ulong A(const ulong a) {
  return (a << 1 | a >> 63);
}
inline ulong B(const ulong a, const uint b) {
  return (a << b | a >> (64 - b));
}
__kernel void C(__global const ulong* restrict a, __global ulong* restrict b, __global const ulong4* restrict c, const uint d, const ulong e) {
  ulong f = get_global_id(0);

 ulong4 g = (ulong4)((f8) + (a0] & 0xFF), (a1] & 0xFFFFFFFFFFFFFF00U), a2], a3]);
 ulong4 h = (ulong4)(a4], a5], a6], a7]);
 ulong4 i = (ulong4)(a8], a9], (a10] & 0xFF) + 256, 0);
 ulong4 j = 0;
 ulong4 k = (ulong4)(0x8000000000000000U, 0, 0, 0);
 ulong4 l = 0;
 ulong m = 0;

 ulong4 n;
 ulong o, p, q;

 for (int r = 0; r < 23; ++r) {
   n.s0 = g.s0 ^ h.s1 ^ i.s2 * j.s3 * l.s0 ^ A(g.s2 ^ h.s3 ^ j.s0 * k.s1 * l.s2);
   n.s1 = g.s1 ^ h.s2 ^ i.s3 * k.s0 * l.s1 ^ A(g.s3 ^ i.s0 ^ j.s1 * k.s2 * l.s3);
   n.s2 = g.s2 ^ h.s3 ^ j.s0 * k.s1 * l.s2 ^ A(h.s0 ^ i.s1 ^ j.s2 * k.s3 * m);
   n.s3 = g.s3 ^ i.s0 ^ j.s1 * k.s2 * l.s3 ^ A(g.s0 ^ h.s1 ^ i.s2 * j.s3 * l.s0);
   o = h.s0 ^ i.s1 ^ j.s2 * k.s3 * m ^ A(g.s1 ^ h.s2 ^ i.s3 * k.s0 * l.s1);
   p = g.s1 ^ n.s0;
   g.s0 ^= o;
   g.s1 = B(h.s2 ^ n.s0, 44);
   h.s2 = B(i.s1 ^ n.s3, 20);
   i.s1 = B(l.s2 ^ n.s1, 61);
   l.s2 = B(j.s2 ^ n.s3, 39);
   j.s2 = B(l.s0 ^ o, 18);
   l.s0 = B(g.s2 ^ n.s1, 62);
   g.s2 = B(j.s0 ^ n.s1, 43);
   j.s0 = B(j.s1 ^ n.s2, 25);
   j.s1 = B(k.s3 ^ n.s3, 8);
   k.s3 = B(l.s3 ^ n.s2, 56);
   l.s3 = B(j.s3 ^ o, 41);
   j.s3 = B(h.s0 ^ n.s3, 27);
   h.s0 = B(m ^ n.s3, 14);
   m = B(l.s1 ^ n.s0, 2);
   l.s1 = B(i.s0 ^ n.s2, 55);
   i.s0 = B(k.s0 ^ n.s0, 45);
   k.s0 = B(h.s1 ^ o, 36);
   h.s1 = B(g.s3 ^ n.s2, 28);
   g.s3 = B(k.s2 ^ n.s2, 21);
   k.s2 = B(k.s1 ^ n.s1, 15);
   k.s1 = B(i.s3 ^ n.s0, 10);
   i.s3 = B(h.s3 ^ n.s1, 6);
   h.s3 = B(i.s2 ^ o, 3);
   i.s2 = B(p, 1);
   p = g.s0;
   q = g.s1;
   g.s0 = bitselect(g.s0 ^ g.s2, g.s0, g.s1);
   g.s1 = bitselect(g.s1 ^ g.s3, g.s1, g.s2);
   g.s2 = bitselect(g.s2 ^ h.s0, g.s2, g.s3);
   g.s3 = bitselect(g.s3 ^ p, g.s3, h.s0);
   h.s0 = bitselect(h.s0 ^ q, h.s0, p);
   p = h.s1;
   q = h.s2;
   h.s1 = bitselect(h.s1 ^ h.s3, h.s1, h.s2);
   h.s2 = bitselect(h.s2 ^ i.s0, h.s2, h.s3);
   h.s3 = bitselect(h.s3 ^ i.s1, h.s3, i.s0);
   i.s0 = bitselect(i.s0 ^ p, i.s0, i.s1);
   i.s1 = bitselect(i.s1 ^ q, i.s1, p);
   p = i.s2;
   q = i.s3;
   i.s2 = bitselect(i.s2 ^ j.s0, i.s2, i.s3);
   i.s3 = bitselect(i.s3 ^ j.s1, i.s3, j.s0);
   j.s0 = bitselect(j.s0 ^ j.s2, j.s0, j.s1);
   j.s1 = bitselect(j.s1 ^ p, j.s1, j.s2);
   j.s2 = bitselect(j.s2 ^ q, j.s2, p);
   p = j.s3;
   q = k.s0;
   j.s3 = bitselect(j.s3 ^ k.s1, j.s3, k.s0);
   k.s0 = bitselect(k.s0 ^ k.s2, k.s0, k.s1);
   k.s1 = bitselect(k.s1 ^ k.s3, k.s1, k.s2);
   k.s2 = bitselect(k.s2 ^ p, k.s2, k.s3);
   k.s3 = bitselect(k.s3 ^ q, k.s3, p);
   p = l.s0;
   q = l.s1;
   l.s0 = bitselect(l.s0 ^ l.s2, l.s0, l.s1);
   l.s1 = bitselect(l.s1 ^ l.s3, l.s1, l.s2);
   l.s2 = bitselect(l.s2 ^ m, l.s2, l.s3);
   l.s3 = bitselect(l.s3 ^ p, l.s3, m);
   m = bitselect(m ^ q, m, p);
   g.s0 ^= 1;
   ;
   g ^= c[g.s0 % d] ^ c[g.s1 % d] ^ c[g.s2 % d] ^ c[g.s3 % d];
   ;
   h ^= c[h.s0 % d] ^ c[h.s1 % d] ^ c[h.s2 % d] ^ c[h.s3 % d];
   ;
   i ^= c[i.s0 % d] ^ c[i.s1 % d] ^ c[i.s2 % d] ^ c[i.s3 % d];
   ;
   j ^= c[j.s0 % d] ^ c[j.s1 % d] ^ c[j.s2 % d] ^ c[j.s3 % d];
   ;
   k ^= c[k.s0 % d] ^ c[k.s1 % d] ^ c[k.s2 % d] ^ c[k.s3 % d];
   ;
   l ^= c[l.s0 % d] ^ c[l.s1 % d] ^ c[l.s2 % d] ^ c[l.s3 % d];
   ;
   ;
 }

 n.s0 = g.s0 ^ h.s1 ^ i.s2 * j.s3 * l.s0 ^ A(g.s2 ^ h.s3 ^ j.s0 * k.s1 * l.s2);
 n.s1 = g.s1 ^ h.s2 ^ i.s3 * k.s0 * l.s1 ^ A(g.s3 ^ i.s0 ^ j.s1 * k.s2 * l.s3);
 n.s2 = g.s2 ^ h.s3 ^ j.s0 * k.s1 * l.s2 ^ A(h.s0 ^ i.s1 ^ j.s2 * k.s3 * m);
 n.s3 = g.s3 ^ i.s0 ^ j.s1 * k.s2 * l.s3 ^ A(g.s0 ^ h.s1 ^ i.s2 * j.s3 * l.s0);
 o = h.s0 ^ i.s1 ^ j.s2 * k.s3 * m ^ A(g.s1 ^ h.s2 ^ i.s3 * k.s0 * l.s1);
 g.s0 ^= o;
 g.s1 = B(h.s2 ^ n.s0, 44);
 g.s2 = B(j.s0 ^ n.s1, 43);
 h.s0 = B(m ^ n.s3, 14);
 g.s3 = B(k.s2 ^ n.s2, 21);
 p = g.s0;
 g.s0 = bitselect(g.s0 ^ g.s2, g.s0, g.s1);
 g.s1 = bitselect(g.s1 ^ g.s3, g.s1, g.s2);
 g.s2 = bitselect(g.s2 ^ h.s0, g.s2, g.s3);
 g.s3 = bitselect(g.s3 ^ p, g.s3, h.s0);
 g.s0 ^= 1;
 ;

 h = (ulong4)(1, 0, 0, 0);
 i = 0;
 j = 0;
 k = (ulong4)(0x8000000000000000U, 0, 0, 0);
 l = 0;
 m = 0;

 for (int r = 0; r < 23; ++r) {
   n.s0 = g.s0 ^ h.s1 ^ i.s2 * j.s3 * l.s0 ^ A(g.s2 ^ h.s3 ^ j.s0 * k.s1 * l.s2);
   n.s1 = g.s1 ^ h.s2 ^ i.s3 * k.s0 * l.s1 ^ A(g.s3 ^ i.s0 ^ j.s1 * k.s2 * l.s3);
   n.s2 = g.s2 ^ h.s3 ^ j.s0 * k.s1 * l.s2 ^ A(h.s0 ^ i.s1 ^ j.s2 * k.s3 * m);
   n.s3 = g.s3 ^ i.s0 ^ j.s1 * k.s2 * l.s3 ^ A(g.s0 ^ h.s1 ^ i.s2 * j.s3 * l.s0);
   o = h.s0 ^ i.s1 ^ j.s2 * k.s3 * m ^ A(g.s1 ^ h.s2 ^ i.s3 * k.s0 * l.s1);
   p = g.s1 ^ n.s0;
   g.s0 ^= o;
   g.s1 = B(h.s2 ^ n.s0, 44);
   h.s2 = B(i.s1 ^ n.s3, 20);
   i.s1 = B(l.s2 ^ n.s1, 61);
   l.s2 = B(j.s2 ^ n.s3, 39);
   j.s2 = B(l.s0 ^ o, 18);
   l.s0 = B(g.s2 ^ n.s1, 62);
   g.s2 = B(j.s0 ^ n.s1, 43);
   j.s0 = B(j.s1 ^ n.s2, 25);
   j.s1 = B(k.s3 ^ n.s3, 8);
   k.s3 = B(l.s3 ^ n.s2, 56);
   l.s3 = B(j.s3 ^ o, 41);
   j.s3 = B(h.s0 ^ n.s3, 27);
   h.s0 = B(m ^ n.s3, 14);
   m = B(l.s1 ^ n.s0, 2);
   l.s1 = B(i.s0 ^ n.s2, 55);
   i.s0 = B(k.s0 ^ n.s0, 45);
   k.s0 = B(h.s1 ^ o, 36);
   h.s1 = B(g.s3 ^ n.s2, 28);
   g.s3 = B(k.s2 ^ n.s2, 21);
   k.s2 = B(k.s1 ^ n.s1, 15);
   k.s1 = B(i.s3 ^ n.s0, 10);
   i.s3 = B(h.s3 ^ n.s1, 6);
   h.s3 = B(i.s2 ^ o, 3);
   i.s2 = B(p, 1);
   p = g.s0;
   q = g.s1;
   g.s0 = bitselect(g.s0 ^ g.s2, g.s0, g.s1);
   g.s1 = bitselect(g.s1 ^ g.s3, g.s1, g.s2);
   g.s2 = bitselect(g.s2 ^ h.s0, g.s2, g.s3);
   g.s3 = bitselect(g.s3 ^ p, g.s3, h.s0);
   h.s0 = bitselect(h.s0 ^ q, h.s0, p);
   p = h.s1;
   q = h.s2;
   h.s1 = bitselect(h.s1 ^ h.s3, h.s1, h.s2);
   h.s2 = bitselect(h.s2 ^ i.s0, h.s2, h.s3);
   h.s3 = bitselect(h.s3 ^ i.s1, h.s3, i.s0);
   i.s0 = bitselect(i.s0 ^ p, i.s0, i.s1);
   i.s1 = bitselect(i.s1 ^ q, i.s1, p);
   p = i.s2;
   q = i.s3;
   i.s2 = bitselect(i.s2 ^ j.s0, i.s2, i.s3);
   i.s3 = bitselect(i.s3 ^ j.s1, i.s3, j.s0);
   j.s0 = bitselect(j.s0 ^ j.s2, j.s0, j.s1);
   j.s1 = bitselect(j.s1 ^ p, j.s1, j.s2);
   j.s2 = bitselect(j.s2 ^ q, j.s2, p);
   p = j.s3;
   q = k.s0;
   j.s3 = bitselect(j.s3 ^ k.s1, j.s3, k.s0);
   k.s0 = bitselect(k.s0 ^ k.s2, k.s0, k.s1);
   k.s1 = bitselect(k.s1 ^ k.s3, k.s1, k.s2);
   k.s2 = bitselect(k.s2 ^ p, k.s2, k.s3);
   k.s3 = bitselect(k.s3 ^ q, k.s3, p);
   p = l.s0;
   q = l.s1;
   l.s0 = bitselect(l.s0 ^ l.s2, l.s0, l.s1);
   l.s1 = bitselect(l.s1 ^ l.s3, l.s1, l.s2);
   l.s2 = bitselect(l.s2 ^ m, l.s2, l.s3);
   l.s3 = bitselect(l.s3 ^ p, l.s3, m);
   m = bitselect(m ^ q, m, p);
   g.s0 ^= 1;
   ;
   g ^= c[g.s0 % d] ^ c[g.s1 % d] ^ c[g.s2 % d] ^ c[g.s3 % d];
   ;
   h ^= c[h.s0 % d] ^ c[h.s1 % d] ^ c[h.s2 % d] ^ c[h.s3 % d];
   ;
   i ^= c[i.s0 % d] ^ c[i.s1 % d] ^ c[i.s2 % d] ^ c[i.s3 % d];
   ;
   j ^= c[j.s0 % d] ^ c[j.s1 % d] ^ c[j.s2 % d] ^ c[j.s3 % d];
   ;
   k ^= c[k.s0 % d] ^ c[k.s1 % d] ^ c[k.s2 % d] ^ c[k.s3 % d];
   ;
   l ^= c[l.s0 % d] ^ c[l.s1 % d] ^ c[l.s2 % d] ^ c[l.s3 % d];
   ;
   ;
 }

 p = h.s0 ^ i.s1 ^ j.s2 * k.s3 * m;
 n.s2 = g.s2 ^ h.s3 ^ j.s0 * k.s1 * l.s2 ^ A(p);
 n.s3 = g.s3 ^ i.s0 ^ j.s1 * k.s2 * l.s3 ^ A(g.s0 ^ h.s1 ^ i.s2 * j.s3 * l.s0);
 o = p ^ A(g.s1 ^ h.s2 ^ i.s3 * k.s0 * l.s1);
 g.s0 ^= o;
 h.s0 = B(m ^ n.s3, 14);
 g.s3 = B(k.s2 ^ n.s2, 21);
 g.s3 = bitselect(g.s3 ^ g.s0, g.s3, h.s0);
 ;

 if (g.s3 <= e)
   b[b[0x0F]++] = f;
}