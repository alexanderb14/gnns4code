typedef unsigned char uint8_t; typedef unsigned int uint32_t; typedef unsigned long uint64_t; void A(uint32_t* a, const uint32_t* b, int c) {
  uint32_t d[2];
  d[0] = a[0];
  a[0] -= b[0];
  for (int e = 1; e < c; e++) {
    d[1] = a[e];
    a[e] -= b[e] + (a[e - 1] > d[0]);
    d[0] = d[1];
  }
}

void B(uint32_t* a, uint32_t* b, uint32_t c) {
  uint32_t d[10];
  uint64_t e = 0, f = 0;
  union {
    uint2 v32;
    ulong v64;
  } g;
  {
    e += a[0] * a[0];
    f += mul_hi(a[0], a[0]);
    d[0] = c * (uint32_t)e;
    e += d[0] * b[0];
    f += mul_hi(d[0], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[1];
    uint32_t i = mul_hi(a[0], a[1]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += d[0] * b[1];
    f += mul_hi(d[0], b[1]);
    d[1] = c * (uint32_t)e;
    e += d[1] * b[0];
    f += mul_hi(d[1], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[2];
    uint32_t i = mul_hi(a[0], a[2]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += a[1] * a[1];
    f += mul_hi(a[1], a[1]);
    e += d[0] * b[2];
    f += mul_hi(d[0], b[2]);
    e += d[1] * b[1];
    f += mul_hi(d[1], b[1]);
    d[2] = c * (uint32_t)e;
    e += d[2] * b[0];
    f += mul_hi(d[2], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[3];
    uint32_t i = mul_hi(a[0], a[3]);
    uint32_t j = a[1] * a[2];
    uint32_t k = mul_hi(a[1], a[2]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += d[0] * b[3];
    f += mul_hi(d[0], b[3]);
    e += d[1] * b[2];
    f += mul_hi(d[1], b[2]);
    e += d[2] * b[1];
    f += mul_hi(d[2], b[1]);
    d[3] = c * (uint32_t)e;
    e += d[3] * b[0];
    f += mul_hi(d[3], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[4];
    uint32_t i = mul_hi(a[0], a[4]);
    uint32_t j = a[1] * a[3];
    uint32_t k = mul_hi(a[1], a[3]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += a[2] * a[2];
    f += mul_hi(a[2], a[2]);
    e += d[0] * b[4];
    f += mul_hi(d[0], b[4]);
    e += d[1] * b[3];
    f += mul_hi(d[1], b[3]);
    e += d[2] * b[2];
    f += mul_hi(d[2], b[2]);
    e += d[3] * b[1];
    f += mul_hi(d[3], b[1]);
    d[4] = c * (uint32_t)e;
    e += d[4] * b[0];
    f += mul_hi(d[4], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[5];
    uint32_t i = mul_hi(a[0], a[5]);
    uint32_t j = a[1] * a[4];
    uint32_t k = mul_hi(a[1], a[4]);
    uint32_t l = a[2] * a[3];
    uint32_t m = mul_hi(a[2], a[3]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += d[0] * b[5];
    f += mul_hi(d[0], b[5]);
    e += d[1] * b[4];
    f += mul_hi(d[1], b[4]);
    e += d[2] * b[3];
    f += mul_hi(d[2], b[3]);
    e += d[3] * b[2];
    f += mul_hi(d[3], b[2]);
    e += d[4] * b[1];
    f += mul_hi(d[4], b[1]);
    d[5] = c * (uint32_t)e;
    e += d[5] * b[0];
    f += mul_hi(d[5], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[6];
    uint32_t i = mul_hi(a[0], a[6]);
    uint32_t j = a[1] * a[5];
    uint32_t k = mul_hi(a[1], a[5]);
    uint32_t l = a[2] * a[4];
    uint32_t m = mul_hi(a[2], a[4]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += a[3] * a[3];
    f += mul_hi(a[3], a[3]);
    e += d[0] * b[6];
    f += mul_hi(d[0], b[6]);
    e += d[1] * b[5];
    f += mul_hi(d[1], b[5]);
    e += d[2] * b[4];
    f += mul_hi(d[2], b[4]);
    e += d[3] * b[3];
    f += mul_hi(d[3], b[3]);
    e += d[4] * b[2];
    f += mul_hi(d[4], b[2]);
    e += d[5] * b[1];
    f += mul_hi(d[5], b[1]);
    d[6] = c * (uint32_t)e;
    e += d[6] * b[0];
    f += mul_hi(d[6], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[7];
    uint32_t i = mul_hi(a[0], a[7]);
    uint32_t j = a[1] * a[6];
    uint32_t k = mul_hi(a[1], a[6]);
    uint32_t l = a[2] * a[5];
    uint32_t m = mul_hi(a[2], a[5]);
    uint32_t n = a[3] * a[4];
    uint32_t o = mul_hi(a[3], a[4]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += d[0] * b[7];
    f += mul_hi(d[0], b[7]);
    e += d[1] * b[6];
    f += mul_hi(d[1], b[6]);
    e += d[2] * b[5];
    f += mul_hi(d[2], b[5]);
    e += d[3] * b[4];
    f += mul_hi(d[3], b[4]);
    e += d[4] * b[3];
    f += mul_hi(d[4], b[3]);
    e += d[5] * b[2];
    f += mul_hi(d[5], b[2]);
    e += d[6] * b[1];
    f += mul_hi(d[6], b[1]);
    d[7] = c * (uint32_t)e;
    e += d[7] * b[0];
    f += mul_hi(d[7], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[8];
    uint32_t i = mul_hi(a[0], a[8]);
    uint32_t j = a[1] * a[7];
    uint32_t k = mul_hi(a[1], a[7]);
    uint32_t l = a[2] * a[6];
    uint32_t m = mul_hi(a[2], a[6]);
    uint32_t n = a[3] * a[5];
    uint32_t o = mul_hi(a[3], a[5]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += a[4] * a[4];
    f += mul_hi(a[4], a[4]);
    e += d[0] * b[8];
    f += mul_hi(d[0], b[8]);
    e += d[1] * b[7];
    f += mul_hi(d[1], b[7]);
    e += d[2] * b[6];
    f += mul_hi(d[2], b[6]);
    e += d[3] * b[5];
    f += mul_hi(d[3], b[5]);
    e += d[4] * b[4];
    f += mul_hi(d[4], b[4]);
    e += d[5] * b[3];
    f += mul_hi(d[5], b[3]);
    e += d[6] * b[2];
    f += mul_hi(d[6], b[2]);
    e += d[7] * b[1];
    f += mul_hi(d[7], b[1]);
    d[8] = c * (uint32_t)e;
    e += d[8] * b[0];
    f += mul_hi(d[8], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[9];
    uint32_t i = mul_hi(a[0], a[9]);
    uint32_t j = a[1] * a[8];
    uint32_t k = mul_hi(a[1], a[8]);
    uint32_t l = a[2] * a[7];
    uint32_t m = mul_hi(a[2], a[7]);
    uint32_t n = a[3] * a[6];
    uint32_t o = mul_hi(a[3], a[6]);
    uint32_t p = a[4] * a[5];
    uint32_t q = mul_hi(a[4], a[5]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += p;
    e += p;
    f += q;
    f += q;
    e += d[0] * b[9];
    f += mul_hi(d[0], b[9]);
    e += d[1] * b[8];
    f += mul_hi(d[1], b[8]);
    e += d[2] * b[7];
    f += mul_hi(d[2], b[7]);
    e += d[3] * b[6];
    f += mul_hi(d[3], b[6]);
    e += d[4] * b[5];
    f += mul_hi(d[4], b[5]);
    e += d[5] * b[4];
    f += mul_hi(d[5], b[4]);
    e += d[6] * b[3];
    f += mul_hi(d[6], b[3]);
    e += d[7] * b[2];
    f += mul_hi(d[7], b[2]);
    e += d[8] * b[1];
    f += mul_hi(d[8], b[1]);
    d[9] = c * (uint32_t)e;
    e += d[9] * b[0];
    f += mul_hi(d[9], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[1] * a[9];
    uint32_t i = mul_hi(a[1], a[9]);
    uint32_t j = a[2] * a[8];
    uint32_t k = mul_hi(a[2], a[8]);
    uint32_t l = a[3] * a[7];
    uint32_t m = mul_hi(a[3], a[7]);
    uint32_t n = a[4] * a[6];
    uint32_t o = mul_hi(a[4], a[6]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += a[5] * a[5];
    f += mul_hi(a[5], a[5]);
    e += d[1] * b[9];
    f += mul_hi(d[1], b[9]);
    e += d[2] * b[8];
    f += mul_hi(d[2], b[8]);
    e += d[3] * b[7];
    f += mul_hi(d[3], b[7]);
    e += d[4] * b[6];
    f += mul_hi(d[4], b[6]);
    e += d[5] * b[5];
    f += mul_hi(d[5], b[5]);
    e += d[6] * b[4];
    f += mul_hi(d[6], b[4]);
    e += d[7] * b[3];
    f += mul_hi(d[7], b[3]);
    e += d[8] * b[2];
    f += mul_hi(d[8], b[2]);
    e += d[9] * b[1];
    f += mul_hi(d[9], b[1]);
    a[0] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[2] * a[9];
    uint32_t i = mul_hi(a[2], a[9]);
    uint32_t j = a[3] * a[8];
    uint32_t k = mul_hi(a[3], a[8]);
    uint32_t l = a[4] * a[7];
    uint32_t m = mul_hi(a[4], a[7]);
    uint32_t n = a[5] * a[6];
    uint32_t o = mul_hi(a[5], a[6]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += d[2] * b[9];
    f += mul_hi(d[2], b[9]);
    e += d[3] * b[8];
    f += mul_hi(d[3], b[8]);
    e += d[4] * b[7];
    f += mul_hi(d[4], b[7]);
    e += d[5] * b[6];
    f += mul_hi(d[5], b[6]);
    e += d[6] * b[5];
    f += mul_hi(d[6], b[5]);
    e += d[7] * b[4];
    f += mul_hi(d[7], b[4]);
    e += d[8] * b[3];
    f += mul_hi(d[8], b[3]);
    e += d[9] * b[2];
    f += mul_hi(d[9], b[2]);
    a[1] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[3] * a[9];
    uint32_t i = mul_hi(a[3], a[9]);
    uint32_t j = a[4] * a[8];
    uint32_t k = mul_hi(a[4], a[8]);
    uint32_t l = a[5] * a[7];
    uint32_t m = mul_hi(a[5], a[7]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += a[6] * a[6];
    f += mul_hi(a[6], a[6]);
    e += d[3] * b[9];
    f += mul_hi(d[3], b[9]);
    e += d[4] * b[8];
    f += mul_hi(d[4], b[8]);
    e += d[5] * b[7];
    f += mul_hi(d[5], b[7]);
    e += d[6] * b[6];
    f += mul_hi(d[6], b[6]);
    e += d[7] * b[5];
    f += mul_hi(d[7], b[5]);
    e += d[8] * b[4];
    f += mul_hi(d[8], b[4]);
    e += d[9] * b[3];
    f += mul_hi(d[9], b[3]);
    a[2] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[4] * a[9];
    uint32_t i = mul_hi(a[4], a[9]);
    uint32_t j = a[5] * a[8];
    uint32_t k = mul_hi(a[5], a[8]);
    uint32_t l = a[6] * a[7];
    uint32_t m = mul_hi(a[6], a[7]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += d[4] * b[9];
    f += mul_hi(d[4], b[9]);
    e += d[5] * b[8];
    f += mul_hi(d[5], b[8]);
    e += d[6] * b[7];
    f += mul_hi(d[6], b[7]);
    e += d[7] * b[6];
    f += mul_hi(d[7], b[6]);
    e += d[8] * b[5];
    f += mul_hi(d[8], b[5]);
    e += d[9] * b[4];
    f += mul_hi(d[9], b[4]);
    a[3] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[5] * a[9];
    uint32_t i = mul_hi(a[5], a[9]);
    uint32_t j = a[6] * a[8];
    uint32_t k = mul_hi(a[6], a[8]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += a[7] * a[7];
    f += mul_hi(a[7], a[7]);
    e += d[5] * b[9];
    f += mul_hi(d[5], b[9]);
    e += d[6] * b[8];
    f += mul_hi(d[6], b[8]);
    e += d[7] * b[7];
    f += mul_hi(d[7], b[7]);
    e += d[8] * b[6];
    f += mul_hi(d[8], b[6]);
    e += d[9] * b[5];
    f += mul_hi(d[9], b[5]);
    a[4] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[6] * a[9];
    uint32_t i = mul_hi(a[6], a[9]);
    uint32_t j = a[7] * a[8];
    uint32_t k = mul_hi(a[7], a[8]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += d[6] * b[9];
    f += mul_hi(d[6], b[9]);
    e += d[7] * b[8];
    f += mul_hi(d[7], b[8]);
    e += d[8] * b[7];
    f += mul_hi(d[8], b[7]);
    e += d[9] * b[6];
    f += mul_hi(d[9], b[6]);
    a[5] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[7] * a[9];
    uint32_t i = mul_hi(a[7], a[9]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += a[8] * a[8];
    f += mul_hi(a[8], a[8]);
    e += d[7] * b[9];
    f += mul_hi(d[7], b[9]);
    e += d[8] * b[8];
    f += mul_hi(d[8], b[8]);
    e += d[9] * b[7];
    f += mul_hi(d[9], b[7]);
    a[6] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[8] * a[9];
    uint32_t i = mul_hi(a[8], a[9]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += d[8] * b[9];
    f += mul_hi(d[8], b[9]);
    e += d[9] * b[8];
    f += mul_hi(d[9], b[8]);
    a[7] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += a[9] * a[9];
    f += mul_hi(a[9], a[9]);
    e += d[9] * b[9];
    f += mul_hi(d[9], b[9]);
    a[8] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  a[9] = e;
  g.v64 = e;
  if (g.v32.y)
    A(a, b, 10);
}
void C(uint32_t* a, uint32_t* b, uint32_t* c, uint32_t d) {
  uint32_t e[10];
  uint64_t f = 0, g = 0;
  union {
    uint2 v32;
    ulong v64;
  } h;
  {
    f += a[0] * b[0];
    g += mul_hi(a[0], b[0]);
    e[0] = d * (uint32_t)f;
    f += e[0] * c[0];
    g += mul_hi(e[0], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[1];
    g += mul_hi(a[0], b[1]);
    f += a[1] * b[0];
    g += mul_hi(a[1], b[0]);
    f += e[0] * c[1];
    g += mul_hi(e[0], c[1]);
    e[1] = d * (uint32_t)f;
    f += e[1] * c[0];
    g += mul_hi(e[1], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[2];
    g += mul_hi(a[0], b[2]);
    f += a[1] * b[1];
    g += mul_hi(a[1], b[1]);
    f += a[2] * b[0];
    g += mul_hi(a[2], b[0]);
    f += e[0] * c[2];
    g += mul_hi(e[0], c[2]);
    f += e[1] * c[1];
    g += mul_hi(e[1], c[1]);
    e[2] = d * (uint32_t)f;
    f += e[2] * c[0];
    g += mul_hi(e[2], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[3];
    g += mul_hi(a[0], b[3]);
    f += a[1] * b[2];
    g += mul_hi(a[1], b[2]);
    f += a[2] * b[1];
    g += mul_hi(a[2], b[1]);
    f += a[3] * b[0];
    g += mul_hi(a[3], b[0]);
    f += e[0] * c[3];
    g += mul_hi(e[0], c[3]);
    f += e[1] * c[2];
    g += mul_hi(e[1], c[2]);
    f += e[2] * c[1];
    g += mul_hi(e[2], c[1]);
    e[3] = d * (uint32_t)f;
    f += e[3] * c[0];
    g += mul_hi(e[3], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[4];
    g += mul_hi(a[0], b[4]);
    f += a[1] * b[3];
    g += mul_hi(a[1], b[3]);
    f += a[2] * b[2];
    g += mul_hi(a[2], b[2]);
    f += a[3] * b[1];
    g += mul_hi(a[3], b[1]);
    f += a[4] * b[0];
    g += mul_hi(a[4], b[0]);
    f += e[0] * c[4];
    g += mul_hi(e[0], c[4]);
    f += e[1] * c[3];
    g += mul_hi(e[1], c[3]);
    f += e[2] * c[2];
    g += mul_hi(e[2], c[2]);
    f += e[3] * c[1];
    g += mul_hi(e[3], c[1]);
    e[4] = d * (uint32_t)f;
    f += e[4] * c[0];
    g += mul_hi(e[4], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[5];
    g += mul_hi(a[0], b[5]);
    f += a[1] * b[4];
    g += mul_hi(a[1], b[4]);
    f += a[2] * b[3];
    g += mul_hi(a[2], b[3]);
    f += a[3] * b[2];
    g += mul_hi(a[3], b[2]);
    f += a[4] * b[1];
    g += mul_hi(a[4], b[1]);
    f += a[5] * b[0];
    g += mul_hi(a[5], b[0]);
    f += e[0] * c[5];
    g += mul_hi(e[0], c[5]);
    f += e[1] * c[4];
    g += mul_hi(e[1], c[4]);
    f += e[2] * c[3];
    g += mul_hi(e[2], c[3]);
    f += e[3] * c[2];
    g += mul_hi(e[3], c[2]);
    f += e[4] * c[1];
    g += mul_hi(e[4], c[1]);
    e[5] = d * (uint32_t)f;
    f += e[5] * c[0];
    g += mul_hi(e[5], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[6];
    g += mul_hi(a[0], b[6]);
    f += a[1] * b[5];
    g += mul_hi(a[1], b[5]);
    f += a[2] * b[4];
    g += mul_hi(a[2], b[4]);
    f += a[3] * b[3];
    g += mul_hi(a[3], b[3]);
    f += a[4] * b[2];
    g += mul_hi(a[4], b[2]);
    f += a[5] * b[1];
    g += mul_hi(a[5], b[1]);
    f += a[6] * b[0];
    g += mul_hi(a[6], b[0]);
    f += e[0] * c[6];
    g += mul_hi(e[0], c[6]);
    f += e[1] * c[5];
    g += mul_hi(e[1], c[5]);
    f += e[2] * c[4];
    g += mul_hi(e[2], c[4]);
    f += e[3] * c[3];
    g += mul_hi(e[3], c[3]);
    f += e[4] * c[2];
    g += mul_hi(e[4], c[2]);
    f += e[5] * c[1];
    g += mul_hi(e[5], c[1]);
    e[6] = d * (uint32_t)f;
    f += e[6] * c[0];
    g += mul_hi(e[6], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[7];
    g += mul_hi(a[0], b[7]);
    f += a[1] * b[6];
    g += mul_hi(a[1], b[6]);
    f += a[2] * b[5];
    g += mul_hi(a[2], b[5]);
    f += a[3] * b[4];
    g += mul_hi(a[3], b[4]);
    f += a[4] * b[3];
    g += mul_hi(a[4], b[3]);
    f += a[5] * b[2];
    g += mul_hi(a[5], b[2]);
    f += a[6] * b[1];
    g += mul_hi(a[6], b[1]);
    f += a[7] * b[0];
    g += mul_hi(a[7], b[0]);
    f += e[0] * c[7];
    g += mul_hi(e[0], c[7]);
    f += e[1] * c[6];
    g += mul_hi(e[1], c[6]);
    f += e[2] * c[5];
    g += mul_hi(e[2], c[5]);
    f += e[3] * c[4];
    g += mul_hi(e[3], c[4]);
    f += e[4] * c[3];
    g += mul_hi(e[4], c[3]);
    f += e[5] * c[2];
    g += mul_hi(e[5], c[2]);
    f += e[6] * c[1];
    g += mul_hi(e[6], c[1]);
    e[7] = d * (uint32_t)f;
    f += e[7] * c[0];
    g += mul_hi(e[7], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[8];
    g += mul_hi(a[0], b[8]);
    f += a[1] * b[7];
    g += mul_hi(a[1], b[7]);
    f += a[2] * b[6];
    g += mul_hi(a[2], b[6]);
    f += a[3] * b[5];
    g += mul_hi(a[3], b[5]);
    f += a[4] * b[4];
    g += mul_hi(a[4], b[4]);
    f += a[5] * b[3];
    g += mul_hi(a[5], b[3]);
    f += a[6] * b[2];
    g += mul_hi(a[6], b[2]);
    f += a[7] * b[1];
    g += mul_hi(a[7], b[1]);
    f += a[8] * b[0];
    g += mul_hi(a[8], b[0]);
    f += e[0] * c[8];
    g += mul_hi(e[0], c[8]);
    f += e[1] * c[7];
    g += mul_hi(e[1], c[7]);
    f += e[2] * c[6];
    g += mul_hi(e[2], c[6]);
    f += e[3] * c[5];
    g += mul_hi(e[3], c[5]);
    f += e[4] * c[4];
    g += mul_hi(e[4], c[4]);
    f += e[5] * c[3];
    g += mul_hi(e[5], c[3]);
    f += e[6] * c[2];
    g += mul_hi(e[6], c[2]);
    f += e[7] * c[1];
    g += mul_hi(e[7], c[1]);
    e[8] = d * (uint32_t)f;
    f += e[8] * c[0];
    g += mul_hi(e[8], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[9];
    g += mul_hi(a[0], b[9]);
    f += a[1] * b[8];
    g += mul_hi(a[1], b[8]);
    f += a[2] * b[7];
    g += mul_hi(a[2], b[7]);
    f += a[3] * b[6];
    g += mul_hi(a[3], b[6]);
    f += a[4] * b[5];
    g += mul_hi(a[4], b[5]);
    f += a[5] * b[4];
    g += mul_hi(a[5], b[4]);
    f += a[6] * b[3];
    g += mul_hi(a[6], b[3]);
    f += a[7] * b[2];
    g += mul_hi(a[7], b[2]);
    f += a[8] * b[1];
    g += mul_hi(a[8], b[1]);
    f += a[9] * b[0];
    g += mul_hi(a[9], b[0]);
    f += e[0] * c[9];
    g += mul_hi(e[0], c[9]);
    f += e[1] * c[8];
    g += mul_hi(e[1], c[8]);
    f += e[2] * c[7];
    g += mul_hi(e[2], c[7]);
    f += e[3] * c[6];
    g += mul_hi(e[3], c[6]);
    f += e[4] * c[5];
    g += mul_hi(e[4], c[5]);
    f += e[5] * c[4];
    g += mul_hi(e[5], c[4]);
    f += e[6] * c[3];
    g += mul_hi(e[6], c[3]);
    f += e[7] * c[2];
    g += mul_hi(e[7], c[2]);
    f += e[8] * c[1];
    g += mul_hi(e[8], c[1]);
    e[9] = d * (uint32_t)f;
    f += e[9] * c[0];
    g += mul_hi(e[9], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[1] * b[9];
    g += mul_hi(a[1], b[9]);
    f += a[2] * b[8];
    g += mul_hi(a[2], b[8]);
    f += a[3] * b[7];
    g += mul_hi(a[3], b[7]);
    f += a[4] * b[6];
    g += mul_hi(a[4], b[6]);
    f += a[5] * b[5];
    g += mul_hi(a[5], b[5]);
    f += a[6] * b[4];
    g += mul_hi(a[6], b[4]);
    f += a[7] * b[3];
    g += mul_hi(a[7], b[3]);
    f += a[8] * b[2];
    g += mul_hi(a[8], b[2]);
    f += a[9] * b[1];
    g += mul_hi(a[9], b[1]);
    f += e[1] * c[9];
    g += mul_hi(e[1], c[9]);
    f += e[2] * c[8];
    g += mul_hi(e[2], c[8]);
    f += e[3] * c[7];
    g += mul_hi(e[3], c[7]);
    f += e[4] * c[6];
    g += mul_hi(e[4], c[6]);
    f += e[5] * c[5];
    g += mul_hi(e[5], c[5]);
    f += e[6] * c[4];
    g += mul_hi(e[6], c[4]);
    f += e[7] * c[3];
    g += mul_hi(e[7], c[3]);
    f += e[8] * c[2];
    g += mul_hi(e[8], c[2]);
    f += e[9] * c[1];
    g += mul_hi(e[9], c[1]);
    a[0] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[2] * b[9];
    g += mul_hi(a[2], b[9]);
    f += a[3] * b[8];
    g += mul_hi(a[3], b[8]);
    f += a[4] * b[7];
    g += mul_hi(a[4], b[7]);
    f += a[5] * b[6];
    g += mul_hi(a[5], b[6]);
    f += a[6] * b[5];
    g += mul_hi(a[6], b[5]);
    f += a[7] * b[4];
    g += mul_hi(a[7], b[4]);
    f += a[8] * b[3];
    g += mul_hi(a[8], b[3]);
    f += a[9] * b[2];
    g += mul_hi(a[9], b[2]);
    f += e[2] * c[9];
    g += mul_hi(e[2], c[9]);
    f += e[3] * c[8];
    g += mul_hi(e[3], c[8]);
    f += e[4] * c[7];
    g += mul_hi(e[4], c[7]);
    f += e[5] * c[6];
    g += mul_hi(e[5], c[6]);
    f += e[6] * c[5];
    g += mul_hi(e[6], c[5]);
    f += e[7] * c[4];
    g += mul_hi(e[7], c[4]);
    f += e[8] * c[3];
    g += mul_hi(e[8], c[3]);
    f += e[9] * c[2];
    g += mul_hi(e[9], c[2]);
    a[1] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[3] * b[9];
    g += mul_hi(a[3], b[9]);
    f += a[4] * b[8];
    g += mul_hi(a[4], b[8]);
    f += a[5] * b[7];
    g += mul_hi(a[5], b[7]);
    f += a[6] * b[6];
    g += mul_hi(a[6], b[6]);
    f += a[7] * b[5];
    g += mul_hi(a[7], b[5]);
    f += a[8] * b[4];
    g += mul_hi(a[8], b[4]);
    f += a[9] * b[3];
    g += mul_hi(a[9], b[3]);
    f += e[3] * c[9];
    g += mul_hi(e[3], c[9]);
    f += e[4] * c[8];
    g += mul_hi(e[4], c[8]);
    f += e[5] * c[7];
    g += mul_hi(e[5], c[7]);
    f += e[6] * c[6];
    g += mul_hi(e[6], c[6]);
    f += e[7] * c[5];
    g += mul_hi(e[7], c[5]);
    f += e[8] * c[4];
    g += mul_hi(e[8], c[4]);
    f += e[9] * c[3];
    g += mul_hi(e[9], c[3]);
    a[2] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[4] * b[9];
    g += mul_hi(a[4], b[9]);
    f += a[5] * b[8];
    g += mul_hi(a[5], b[8]);
    f += a[6] * b[7];
    g += mul_hi(a[6], b[7]);
    f += a[7] * b[6];
    g += mul_hi(a[7], b[6]);
    f += a[8] * b[5];
    g += mul_hi(a[8], b[5]);
    f += a[9] * b[4];
    g += mul_hi(a[9], b[4]);
    f += e[4] * c[9];
    g += mul_hi(e[4], c[9]);
    f += e[5] * c[8];
    g += mul_hi(e[5], c[8]);
    f += e[6] * c[7];
    g += mul_hi(e[6], c[7]);
    f += e[7] * c[6];
    g += mul_hi(e[7], c[6]);
    f += e[8] * c[5];
    g += mul_hi(e[8], c[5]);
    f += e[9] * c[4];
    g += mul_hi(e[9], c[4]);
    a[3] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[5] * b[9];
    g += mul_hi(a[5], b[9]);
    f += a[6] * b[8];
    g += mul_hi(a[6], b[8]);
    f += a[7] * b[7];
    g += mul_hi(a[7], b[7]);
    f += a[8] * b[6];
    g += mul_hi(a[8], b[6]);
    f += a[9] * b[5];
    g += mul_hi(a[9], b[5]);
    f += e[5] * c[9];
    g += mul_hi(e[5], c[9]);
    f += e[6] * c[8];
    g += mul_hi(e[6], c[8]);
    f += e[7] * c[7];
    g += mul_hi(e[7], c[7]);
    f += e[8] * c[6];
    g += mul_hi(e[8], c[6]);
    f += e[9] * c[5];
    g += mul_hi(e[9], c[5]);
    a[4] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[6] * b[9];
    g += mul_hi(a[6], b[9]);
    f += a[7] * b[8];
    g += mul_hi(a[7], b[8]);
    f += a[8] * b[7];
    g += mul_hi(a[8], b[7]);
    f += a[9] * b[6];
    g += mul_hi(a[9], b[6]);
    f += e[6] * c[9];
    g += mul_hi(e[6], c[9]);
    f += e[7] * c[8];
    g += mul_hi(e[7], c[8]);
    f += e[8] * c[7];
    g += mul_hi(e[8], c[7]);
    f += e[9] * c[6];
    g += mul_hi(e[9], c[6]);
    a[5] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[7] * b[9];
    g += mul_hi(a[7], b[9]);
    f += a[8] * b[8];
    g += mul_hi(a[8], b[8]);
    f += a[9] * b[7];
    g += mul_hi(a[9], b[7]);
    f += e[7] * c[9];
    g += mul_hi(e[7], c[9]);
    f += e[8] * c[8];
    g += mul_hi(e[8], c[8]);
    f += e[9] * c[7];
    g += mul_hi(e[9], c[7]);
    a[6] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[8] * b[9];
    g += mul_hi(a[8], b[9]);
    f += a[9] * b[8];
    g += mul_hi(a[9], b[8]);
    f += e[8] * c[9];
    g += mul_hi(e[8], c[9]);
    f += e[9] * c[8];
    g += mul_hi(e[9], c[8]);
    a[7] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[9] * b[9];
    g += mul_hi(a[9], b[9]);
    f += e[9] * c[9];
    g += mul_hi(e[9], c[9]);
    a[8] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  a[9] = f;
  h.v64 = f;
  if (h.v32.y)
    A(a, c, 10);
}
void D(uint32_t* a, uint32_t* b, uint32_t c) {
  uint32_t d[10];
  uint64_t e = a[0], f = a[1];
  union {
    uint2 v32;
    ulong v64;
  } g;
  {
    d[0] = c * (uint32_t)e;
    e += d[0] * b[0];
    f += mul_hi(d[0], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[2];
  }
  {
    e += d[0] * b[1];
    f += mul_hi(d[0], b[1]);
    d[1] = c * (uint32_t)e;
    e += d[1] * b[0];
    f += mul_hi(d[1], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[3];
  }
  {
    e += d[0] * b[2];
    f += mul_hi(d[0], b[2]);
    e += d[1] * b[1];
    f += mul_hi(d[1], b[1]);
    d[2] = c * (uint32_t)e;
    e += d[2] * b[0];
    f += mul_hi(d[2], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[4];
  }
  {
    e += d[0] * b[3];
    f += mul_hi(d[0], b[3]);
    e += d[1] * b[2];
    f += mul_hi(d[1], b[2]);
    e += d[2] * b[1];
    f += mul_hi(d[2], b[1]);
    d[3] = c * (uint32_t)e;
    e += d[3] * b[0];
    f += mul_hi(d[3], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[5];
  }
  {
    e += d[0] * b[4];
    f += mul_hi(d[0], b[4]);
    e += d[1] * b[3];
    f += mul_hi(d[1], b[3]);
    e += d[2] * b[2];
    f += mul_hi(d[2], b[2]);
    e += d[3] * b[1];
    f += mul_hi(d[3], b[1]);
    d[4] = c * (uint32_t)e;
    e += d[4] * b[0];
    f += mul_hi(d[4], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[6];
  }
  {
    e += d[0] * b[5];
    f += mul_hi(d[0], b[5]);
    e += d[1] * b[4];
    f += mul_hi(d[1], b[4]);
    e += d[2] * b[3];
    f += mul_hi(d[2], b[3]);
    e += d[3] * b[2];
    f += mul_hi(d[3], b[2]);
    e += d[4] * b[1];
    f += mul_hi(d[4], b[1]);
    d[5] = c * (uint32_t)e;
    e += d[5] * b[0];
    f += mul_hi(d[5], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[7];
  }
  {
    e += d[0] * b[6];
    f += mul_hi(d[0], b[6]);
    e += d[1] * b[5];
    f += mul_hi(d[1], b[5]);
    e += d[2] * b[4];
    f += mul_hi(d[2], b[4]);
    e += d[3] * b[3];
    f += mul_hi(d[3], b[3]);
    e += d[4] * b[2];
    f += mul_hi(d[4], b[2]);
    e += d[5] * b[1];
    f += mul_hi(d[5], b[1]);
    d[6] = c * (uint32_t)e;
    e += d[6] * b[0];
    f += mul_hi(d[6], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[8];
  }
  {
    e += d[0] * b[7];
    f += mul_hi(d[0], b[7]);
    e += d[1] * b[6];
    f += mul_hi(d[1], b[6]);
    e += d[2] * b[5];
    f += mul_hi(d[2], b[5]);
    e += d[3] * b[4];
    f += mul_hi(d[3], b[4]);
    e += d[4] * b[3];
    f += mul_hi(d[4], b[3]);
    e += d[5] * b[2];
    f += mul_hi(d[5], b[2]);
    e += d[6] * b[1];
    f += mul_hi(d[6], b[1]);
    d[7] = c * (uint32_t)e;
    e += d[7] * b[0];
    f += mul_hi(d[7], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[9];
  }
  {
    e += d[0] * b[8];
    f += mul_hi(d[0], b[8]);
    e += d[1] * b[7];
    f += mul_hi(d[1], b[7]);
    e += d[2] * b[6];
    f += mul_hi(d[2], b[6]);
    e += d[3] * b[5];
    f += mul_hi(d[3], b[5]);
    e += d[4] * b[4];
    f += mul_hi(d[4], b[4]);
    e += d[5] * b[3];
    f += mul_hi(d[5], b[3]);
    e += d[6] * b[2];
    f += mul_hi(d[6], b[2]);
    e += d[7] * b[1];
    f += mul_hi(d[7], b[1]);
    d[8] = c * (uint32_t)e;
    e += d[8] * b[0];
    f += mul_hi(d[8], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[0] * b[9];
    f += mul_hi(d[0], b[9]);
    e += d[1] * b[8];
    f += mul_hi(d[1], b[8]);
    e += d[2] * b[7];
    f += mul_hi(d[2], b[7]);
    e += d[3] * b[6];
    f += mul_hi(d[3], b[6]);
    e += d[4] * b[5];
    f += mul_hi(d[4], b[5]);
    e += d[5] * b[4];
    f += mul_hi(d[5], b[4]);
    e += d[6] * b[3];
    f += mul_hi(d[6], b[3]);
    e += d[7] * b[2];
    f += mul_hi(d[7], b[2]);
    e += d[8] * b[1];
    f += mul_hi(d[8], b[1]);
    d[9] = c * (uint32_t)e;
    e += d[9] * b[0];
    f += mul_hi(d[9], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[1] * b[9];
    f += mul_hi(d[1], b[9]);
    e += d[2] * b[8];
    f += mul_hi(d[2], b[8]);
    e += d[3] * b[7];
    f += mul_hi(d[3], b[7]);
    e += d[4] * b[6];
    f += mul_hi(d[4], b[6]);
    e += d[5] * b[5];
    f += mul_hi(d[5], b[5]);
    e += d[6] * b[4];
    f += mul_hi(d[6], b[4]);
    e += d[7] * b[3];
    f += mul_hi(d[7], b[3]);
    e += d[8] * b[2];
    f += mul_hi(d[8], b[2]);
    e += d[9] * b[1];
    f += mul_hi(d[9], b[1]);
    a[0] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[2] * b[9];
    f += mul_hi(d[2], b[9]);
    e += d[3] * b[8];
    f += mul_hi(d[3], b[8]);
    e += d[4] * b[7];
    f += mul_hi(d[4], b[7]);
    e += d[5] * b[6];
    f += mul_hi(d[5], b[6]);
    e += d[6] * b[5];
    f += mul_hi(d[6], b[5]);
    e += d[7] * b[4];
    f += mul_hi(d[7], b[4]);
    e += d[8] * b[3];
    f += mul_hi(d[8], b[3]);
    e += d[9] * b[2];
    f += mul_hi(d[9], b[2]);
    a[1] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[3] * b[9];
    f += mul_hi(d[3], b[9]);
    e += d[4] * b[8];
    f += mul_hi(d[4], b[8]);
    e += d[5] * b[7];
    f += mul_hi(d[5], b[7]);
    e += d[6] * b[6];
    f += mul_hi(d[6], b[6]);
    e += d[7] * b[5];
    f += mul_hi(d[7], b[5]);
    e += d[8] * b[4];
    f += mul_hi(d[8], b[4]);
    e += d[9] * b[3];
    f += mul_hi(d[9], b[3]);
    a[2] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[4] * b[9];
    f += mul_hi(d[4], b[9]);
    e += d[5] * b[8];
    f += mul_hi(d[5], b[8]);
    e += d[6] * b[7];
    f += mul_hi(d[6], b[7]);
    e += d[7] * b[6];
    f += mul_hi(d[7], b[6]);
    e += d[8] * b[5];
    f += mul_hi(d[8], b[5]);
    e += d[9] * b[4];
    f += mul_hi(d[9], b[4]);
    a[3] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[5] * b[9];
    f += mul_hi(d[5], b[9]);
    e += d[6] * b[8];
    f += mul_hi(d[6], b[8]);
    e += d[7] * b[7];
    f += mul_hi(d[7], b[7]);
    e += d[8] * b[6];
    f += mul_hi(d[8], b[6]);
    e += d[9] * b[5];
    f += mul_hi(d[9], b[5]);
    a[4] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[6] * b[9];
    f += mul_hi(d[6], b[9]);
    e += d[7] * b[8];
    f += mul_hi(d[7], b[8]);
    e += d[8] * b[7];
    f += mul_hi(d[8], b[7]);
    e += d[9] * b[6];
    f += mul_hi(d[9], b[6]);
    a[5] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[7] * b[9];
    f += mul_hi(d[7], b[9]);
    e += d[8] * b[8];
    f += mul_hi(d[8], b[8]);
    e += d[9] * b[7];
    f += mul_hi(d[9], b[7]);
    a[6] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[8] * b[9];
    f += mul_hi(d[8], b[9]);
    e += d[9] * b[8];
    f += mul_hi(d[9], b[8]);
    a[7] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[9] * b[9];
    f += mul_hi(d[9], b[9]);
    a[8] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  a[9] = e;
  g.v64 = e;
  if (g.v32.y)
    A(a, b, 10);
}
void E(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
}
void F(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[3];
    e += mul_hi(b[0], c[3]);
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[3];
    e += mul_hi(b[1], c[3]);
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[3];
    e += mul_hi(b[2], c[3]);
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[3];
    e += mul_hi(b[3], c[3]);
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[3];
    e += mul_hi(b[4], c[3]);
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[3];
    e += mul_hi(b[5], c[3]);
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[6] * c[3];
    e += mul_hi(b[6], c[3]);
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[7] * c[3];
    e += mul_hi(b[7], c[3]);
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
}
void G(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[3];
    e += mul_hi(b[0], c[3]);
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[4];
    e += mul_hi(b[0], c[4]);
    d += b[1] * c[3];
    e += mul_hi(b[1], c[3]);
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[5];
    e += mul_hi(b[0], c[5]);
    d += b[1] * c[4];
    e += mul_hi(b[1], c[4]);
    d += b[2] * c[3];
    e += mul_hi(b[2], c[3]);
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[5];
    e += mul_hi(b[1], c[5]);
    d += b[2] * c[4];
    e += mul_hi(b[2], c[4]);
    d += b[3] * c[3];
    e += mul_hi(b[3], c[3]);
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[5];
    e += mul_hi(b[2], c[5]);
    d += b[3] * c[4];
    e += mul_hi(b[3], c[4]);
    d += b[4] * c[3];
    e += mul_hi(b[4], c[3]);
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[5];
    e += mul_hi(b[3], c[5]);
    d += b[4] * c[4];
    e += mul_hi(b[4], c[4]);
    d += b[5] * c[3];
    e += mul_hi(b[5], c[3]);
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[5];
    e += mul_hi(b[4], c[5]);
    d += b[5] * c[4];
    e += mul_hi(b[5], c[4]);
    d += b[6] * c[3];
    e += mul_hi(b[6], c[3]);
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[5];
    e += mul_hi(b[5], c[5]);
    d += b[6] * c[4];
    e += mul_hi(b[6], c[4]);
    d += b[7] * c[3];
    e += mul_hi(b[7], c[3]);
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
}
void H(uint32_t* a, uint32_t* b, uint32_t c) {
  uint32_t d[11];
  uint64_t e = 0, f = 0;
  union {
    uint2 v32;
    ulong v64;
  } g;
  {
    e += a[0] * a[0];
    f += mul_hi(a[0], a[0]);
    d[0] = c * (uint32_t)e;
    e += d[0] * b[0];
    f += mul_hi(d[0], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[1];
    uint32_t i = mul_hi(a[0], a[1]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += d[0] * b[1];
    f += mul_hi(d[0], b[1]);
    d[1] = c * (uint32_t)e;
    e += d[1] * b[0];
    f += mul_hi(d[1], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[2];
    uint32_t i = mul_hi(a[0], a[2]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += a[1] * a[1];
    f += mul_hi(a[1], a[1]);
    e += d[0] * b[2];
    f += mul_hi(d[0], b[2]);
    e += d[1] * b[1];
    f += mul_hi(d[1], b[1]);
    d[2] = c * (uint32_t)e;
    e += d[2] * b[0];
    f += mul_hi(d[2], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[3];
    uint32_t i = mul_hi(a[0], a[3]);
    uint32_t j = a[1] * a[2];
    uint32_t k = mul_hi(a[1], a[2]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += d[0] * b[3];
    f += mul_hi(d[0], b[3]);
    e += d[1] * b[2];
    f += mul_hi(d[1], b[2]);
    e += d[2] * b[1];
    f += mul_hi(d[2], b[1]);
    d[3] = c * (uint32_t)e;
    e += d[3] * b[0];
    f += mul_hi(d[3], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[4];
    uint32_t i = mul_hi(a[0], a[4]);
    uint32_t j = a[1] * a[3];
    uint32_t k = mul_hi(a[1], a[3]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += a[2] * a[2];
    f += mul_hi(a[2], a[2]);
    e += d[0] * b[4];
    f += mul_hi(d[0], b[4]);
    e += d[1] * b[3];
    f += mul_hi(d[1], b[3]);
    e += d[2] * b[2];
    f += mul_hi(d[2], b[2]);
    e += d[3] * b[1];
    f += mul_hi(d[3], b[1]);
    d[4] = c * (uint32_t)e;
    e += d[4] * b[0];
    f += mul_hi(d[4], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[5];
    uint32_t i = mul_hi(a[0], a[5]);
    uint32_t j = a[1] * a[4];
    uint32_t k = mul_hi(a[1], a[4]);
    uint32_t l = a[2] * a[3];
    uint32_t m = mul_hi(a[2], a[3]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += d[0] * b[5];
    f += mul_hi(d[0], b[5]);
    e += d[1] * b[4];
    f += mul_hi(d[1], b[4]);
    e += d[2] * b[3];
    f += mul_hi(d[2], b[3]);
    e += d[3] * b[2];
    f += mul_hi(d[3], b[2]);
    e += d[4] * b[1];
    f += mul_hi(d[4], b[1]);
    d[5] = c * (uint32_t)e;
    e += d[5] * b[0];
    f += mul_hi(d[5], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[6];
    uint32_t i = mul_hi(a[0], a[6]);
    uint32_t j = a[1] * a[5];
    uint32_t k = mul_hi(a[1], a[5]);
    uint32_t l = a[2] * a[4];
    uint32_t m = mul_hi(a[2], a[4]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += a[3] * a[3];
    f += mul_hi(a[3], a[3]);
    e += d[0] * b[6];
    f += mul_hi(d[0], b[6]);
    e += d[1] * b[5];
    f += mul_hi(d[1], b[5]);
    e += d[2] * b[4];
    f += mul_hi(d[2], b[4]);
    e += d[3] * b[3];
    f += mul_hi(d[3], b[3]);
    e += d[4] * b[2];
    f += mul_hi(d[4], b[2]);
    e += d[5] * b[1];
    f += mul_hi(d[5], b[1]);
    d[6] = c * (uint32_t)e;
    e += d[6] * b[0];
    f += mul_hi(d[6], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[7];
    uint32_t i = mul_hi(a[0], a[7]);
    uint32_t j = a[1] * a[6];
    uint32_t k = mul_hi(a[1], a[6]);
    uint32_t l = a[2] * a[5];
    uint32_t m = mul_hi(a[2], a[5]);
    uint32_t n = a[3] * a[4];
    uint32_t o = mul_hi(a[3], a[4]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += d[0] * b[7];
    f += mul_hi(d[0], b[7]);
    e += d[1] * b[6];
    f += mul_hi(d[1], b[6]);
    e += d[2] * b[5];
    f += mul_hi(d[2], b[5]);
    e += d[3] * b[4];
    f += mul_hi(d[3], b[4]);
    e += d[4] * b[3];
    f += mul_hi(d[4], b[3]);
    e += d[5] * b[2];
    f += mul_hi(d[5], b[2]);
    e += d[6] * b[1];
    f += mul_hi(d[6], b[1]);
    d[7] = c * (uint32_t)e;
    e += d[7] * b[0];
    f += mul_hi(d[7], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[8];
    uint32_t i = mul_hi(a[0], a[8]);
    uint32_t j = a[1] * a[7];
    uint32_t k = mul_hi(a[1], a[7]);
    uint32_t l = a[2] * a[6];
    uint32_t m = mul_hi(a[2], a[6]);
    uint32_t n = a[3] * a[5];
    uint32_t o = mul_hi(a[3], a[5]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += a[4] * a[4];
    f += mul_hi(a[4], a[4]);
    e += d[0] * b[8];
    f += mul_hi(d[0], b[8]);
    e += d[1] * b[7];
    f += mul_hi(d[1], b[7]);
    e += d[2] * b[6];
    f += mul_hi(d[2], b[6]);
    e += d[3] * b[5];
    f += mul_hi(d[3], b[5]);
    e += d[4] * b[4];
    f += mul_hi(d[4], b[4]);
    e += d[5] * b[3];
    f += mul_hi(d[5], b[3]);
    e += d[6] * b[2];
    f += mul_hi(d[6], b[2]);
    e += d[7] * b[1];
    f += mul_hi(d[7], b[1]);
    d[8] = c * (uint32_t)e;
    e += d[8] * b[0];
    f += mul_hi(d[8], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[9];
    uint32_t i = mul_hi(a[0], a[9]);
    uint32_t j = a[1] * a[8];
    uint32_t k = mul_hi(a[1], a[8]);
    uint32_t l = a[2] * a[7];
    uint32_t m = mul_hi(a[2], a[7]);
    uint32_t n = a[3] * a[6];
    uint32_t o = mul_hi(a[3], a[6]);
    uint32_t p = a[4] * a[5];
    uint32_t q = mul_hi(a[4], a[5]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += p;
    e += p;
    f += q;
    f += q;
    e += d[0] * b[9];
    f += mul_hi(d[0], b[9]);
    e += d[1] * b[8];
    f += mul_hi(d[1], b[8]);
    e += d[2] * b[7];
    f += mul_hi(d[2], b[7]);
    e += d[3] * b[6];
    f += mul_hi(d[3], b[6]);
    e += d[4] * b[5];
    f += mul_hi(d[4], b[5]);
    e += d[5] * b[4];
    f += mul_hi(d[5], b[4]);
    e += d[6] * b[3];
    f += mul_hi(d[6], b[3]);
    e += d[7] * b[2];
    f += mul_hi(d[7], b[2]);
    e += d[8] * b[1];
    f += mul_hi(d[8], b[1]);
    d[9] = c * (uint32_t)e;
    e += d[9] * b[0];
    f += mul_hi(d[9], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[0] * a[10];
    uint32_t i = mul_hi(a[0], a[10]);
    uint32_t j = a[1] * a[9];
    uint32_t k = mul_hi(a[1], a[9]);
    uint32_t l = a[2] * a[8];
    uint32_t m = mul_hi(a[2], a[8]);
    uint32_t n = a[3] * a[7];
    uint32_t o = mul_hi(a[3], a[7]);
    uint32_t p = a[4] * a[6];
    uint32_t q = mul_hi(a[4], a[6]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += p;
    e += p;
    f += q;
    f += q;
    e += a[5] * a[5];
    f += mul_hi(a[5], a[5]);
    e += d[0] * b[10];
    f += mul_hi(d[0], b[10]);
    e += d[1] * b[9];
    f += mul_hi(d[1], b[9]);
    e += d[2] * b[8];
    f += mul_hi(d[2], b[8]);
    e += d[3] * b[7];
    f += mul_hi(d[3], b[7]);
    e += d[4] * b[6];
    f += mul_hi(d[4], b[6]);
    e += d[5] * b[5];
    f += mul_hi(d[5], b[5]);
    e += d[6] * b[4];
    f += mul_hi(d[6], b[4]);
    e += d[7] * b[3];
    f += mul_hi(d[7], b[3]);
    e += d[8] * b[2];
    f += mul_hi(d[8], b[2]);
    e += d[9] * b[1];
    f += mul_hi(d[9], b[1]);
    d[10] = c * (uint32_t)e;
    e += d[10] * b[0];
    f += mul_hi(d[10], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[1] * a[10];
    uint32_t i = mul_hi(a[1], a[10]);
    uint32_t j = a[2] * a[9];
    uint32_t k = mul_hi(a[2], a[9]);
    uint32_t l = a[3] * a[8];
    uint32_t m = mul_hi(a[3], a[8]);
    uint32_t n = a[4] * a[7];
    uint32_t o = mul_hi(a[4], a[7]);
    uint32_t p = a[5] * a[6];
    uint32_t q = mul_hi(a[5], a[6]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += p;
    e += p;
    f += q;
    f += q;
    e += d[1] * b[10];
    f += mul_hi(d[1], b[10]);
    e += d[2] * b[9];
    f += mul_hi(d[2], b[9]);
    e += d[3] * b[8];
    f += mul_hi(d[3], b[8]);
    e += d[4] * b[7];
    f += mul_hi(d[4], b[7]);
    e += d[5] * b[6];
    f += mul_hi(d[5], b[6]);
    e += d[6] * b[5];
    f += mul_hi(d[6], b[5]);
    e += d[7] * b[4];
    f += mul_hi(d[7], b[4]);
    e += d[8] * b[3];
    f += mul_hi(d[8], b[3]);
    e += d[9] * b[2];
    f += mul_hi(d[9], b[2]);
    e += d[10] * b[1];
    f += mul_hi(d[10], b[1]);
    a[0] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[2] * a[10];
    uint32_t i = mul_hi(a[2], a[10]);
    uint32_t j = a[3] * a[9];
    uint32_t k = mul_hi(a[3], a[9]);
    uint32_t l = a[4] * a[8];
    uint32_t m = mul_hi(a[4], a[8]);
    uint32_t n = a[5] * a[7];
    uint32_t o = mul_hi(a[5], a[7]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += a[6] * a[6];
    f += mul_hi(a[6], a[6]);
    e += d[2] * b[10];
    f += mul_hi(d[2], b[10]);
    e += d[3] * b[9];
    f += mul_hi(d[3], b[9]);
    e += d[4] * b[8];
    f += mul_hi(d[4], b[8]);
    e += d[5] * b[7];
    f += mul_hi(d[5], b[7]);
    e += d[6] * b[6];
    f += mul_hi(d[6], b[6]);
    e += d[7] * b[5];
    f += mul_hi(d[7], b[5]);
    e += d[8] * b[4];
    f += mul_hi(d[8], b[4]);
    e += d[9] * b[3];
    f += mul_hi(d[9], b[3]);
    e += d[10] * b[2];
    f += mul_hi(d[10], b[2]);
    a[1] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[3] * a[10];
    uint32_t i = mul_hi(a[3], a[10]);
    uint32_t j = a[4] * a[9];
    uint32_t k = mul_hi(a[4], a[9]);
    uint32_t l = a[5] * a[8];
    uint32_t m = mul_hi(a[5], a[8]);
    uint32_t n = a[6] * a[7];
    uint32_t o = mul_hi(a[6], a[7]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += n;
    e += n;
    f += o;
    f += o;
    e += d[3] * b[10];
    f += mul_hi(d[3], b[10]);
    e += d[4] * b[9];
    f += mul_hi(d[4], b[9]);
    e += d[5] * b[8];
    f += mul_hi(d[5], b[8]);
    e += d[6] * b[7];
    f += mul_hi(d[6], b[7]);
    e += d[7] * b[6];
    f += mul_hi(d[7], b[6]);
    e += d[8] * b[5];
    f += mul_hi(d[8], b[5]);
    e += d[9] * b[4];
    f += mul_hi(d[9], b[4]);
    e += d[10] * b[3];
    f += mul_hi(d[10], b[3]);
    a[2] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[4] * a[10];
    uint32_t i = mul_hi(a[4], a[10]);
    uint32_t j = a[5] * a[9];
    uint32_t k = mul_hi(a[5], a[9]);
    uint32_t l = a[6] * a[8];
    uint32_t m = mul_hi(a[6], a[8]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += a[7] * a[7];
    f += mul_hi(a[7], a[7]);
    e += d[4] * b[10];
    f += mul_hi(d[4], b[10]);
    e += d[5] * b[9];
    f += mul_hi(d[5], b[9]);
    e += d[6] * b[8];
    f += mul_hi(d[6], b[8]);
    e += d[7] * b[7];
    f += mul_hi(d[7], b[7]);
    e += d[8] * b[6];
    f += mul_hi(d[8], b[6]);
    e += d[9] * b[5];
    f += mul_hi(d[9], b[5]);
    e += d[10] * b[4];
    f += mul_hi(d[10], b[4]);
    a[3] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[5] * a[10];
    uint32_t i = mul_hi(a[5], a[10]);
    uint32_t j = a[6] * a[9];
    uint32_t k = mul_hi(a[6], a[9]);
    uint32_t l = a[7] * a[8];
    uint32_t m = mul_hi(a[7], a[8]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += l;
    e += l;
    f += m;
    f += m;
    e += d[5] * b[10];
    f += mul_hi(d[5], b[10]);
    e += d[6] * b[9];
    f += mul_hi(d[6], b[9]);
    e += d[7] * b[8];
    f += mul_hi(d[7], b[8]);
    e += d[8] * b[7];
    f += mul_hi(d[8], b[7]);
    e += d[9] * b[6];
    f += mul_hi(d[9], b[6]);
    e += d[10] * b[5];
    f += mul_hi(d[10], b[5]);
    a[4] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[6] * a[10];
    uint32_t i = mul_hi(a[6], a[10]);
    uint32_t j = a[7] * a[9];
    uint32_t k = mul_hi(a[7], a[9]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += a[8] * a[8];
    f += mul_hi(a[8], a[8]);
    e += d[6] * b[10];
    f += mul_hi(d[6], b[10]);
    e += d[7] * b[9];
    f += mul_hi(d[7], b[9]);
    e += d[8] * b[8];
    f += mul_hi(d[8], b[8]);
    e += d[9] * b[7];
    f += mul_hi(d[9], b[7]);
    e += d[10] * b[6];
    f += mul_hi(d[10], b[6]);
    a[5] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[7] * a[10];
    uint32_t i = mul_hi(a[7], a[10]);
    uint32_t j = a[8] * a[9];
    uint32_t k = mul_hi(a[8], a[9]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += j;
    e += j;
    f += k;
    f += k;
    e += d[7] * b[10];
    f += mul_hi(d[7], b[10]);
    e += d[8] * b[9];
    f += mul_hi(d[8], b[9]);
    e += d[9] * b[8];
    f += mul_hi(d[9], b[8]);
    e += d[10] * b[7];
    f += mul_hi(d[10], b[7]);
    a[6] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[8] * a[10];
    uint32_t i = mul_hi(a[8], a[10]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += a[9] * a[9];
    f += mul_hi(a[9], a[9]);
    e += d[8] * b[10];
    f += mul_hi(d[8], b[10]);
    e += d[9] * b[9];
    f += mul_hi(d[9], b[9]);
    e += d[10] * b[8];
    f += mul_hi(d[10], b[8]);
    a[7] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    uint32_t h = a[9] * a[10];
    uint32_t i = mul_hi(a[9], a[10]);
    e += h;
    e += h;
    f += i;
    f += i;
    e += d[9] * b[10];
    f += mul_hi(d[9], b[10]);
    e += d[10] * b[9];
    f += mul_hi(d[10], b[9]);
    a[8] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += a[10] * a[10];
    f += mul_hi(a[10], a[10]);
    e += d[10] * b[10];
    f += mul_hi(d[10], b[10]);
    a[9] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  a[10] = e;
  g.v64 = e;
  if (g.v32.y)
    A(a, b, 11);
}
void I(uint32_t* a, uint32_t* b, uint32_t* c, uint32_t d) {
  uint32_t e[11];
  uint64_t f = 0, g = 0;
  union {
    uint2 v32;
    ulong v64;
  } h;
  {
    f += a[0] * b[0];
    g += mul_hi(a[0], b[0]);
    e[0] = d * (uint32_t)f;
    f += e[0] * c[0];
    g += mul_hi(e[0], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[1];
    g += mul_hi(a[0], b[1]);
    f += a[1] * b[0];
    g += mul_hi(a[1], b[0]);
    f += e[0] * c[1];
    g += mul_hi(e[0], c[1]);
    e[1] = d * (uint32_t)f;
    f += e[1] * c[0];
    g += mul_hi(e[1], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[2];
    g += mul_hi(a[0], b[2]);
    f += a[1] * b[1];
    g += mul_hi(a[1], b[1]);
    f += a[2] * b[0];
    g += mul_hi(a[2], b[0]);
    f += e[0] * c[2];
    g += mul_hi(e[0], c[2]);
    f += e[1] * c[1];
    g += mul_hi(e[1], c[1]);
    e[2] = d * (uint32_t)f;
    f += e[2] * c[0];
    g += mul_hi(e[2], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[3];
    g += mul_hi(a[0], b[3]);
    f += a[1] * b[2];
    g += mul_hi(a[1], b[2]);
    f += a[2] * b[1];
    g += mul_hi(a[2], b[1]);
    f += a[3] * b[0];
    g += mul_hi(a[3], b[0]);
    f += e[0] * c[3];
    g += mul_hi(e[0], c[3]);
    f += e[1] * c[2];
    g += mul_hi(e[1], c[2]);
    f += e[2] * c[1];
    g += mul_hi(e[2], c[1]);
    e[3] = d * (uint32_t)f;
    f += e[3] * c[0];
    g += mul_hi(e[3], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[4];
    g += mul_hi(a[0], b[4]);
    f += a[1] * b[3];
    g += mul_hi(a[1], b[3]);
    f += a[2] * b[2];
    g += mul_hi(a[2], b[2]);
    f += a[3] * b[1];
    g += mul_hi(a[3], b[1]);
    f += a[4] * b[0];
    g += mul_hi(a[4], b[0]);
    f += e[0] * c[4];
    g += mul_hi(e[0], c[4]);
    f += e[1] * c[3];
    g += mul_hi(e[1], c[3]);
    f += e[2] * c[2];
    g += mul_hi(e[2], c[2]);
    f += e[3] * c[1];
    g += mul_hi(e[3], c[1]);
    e[4] = d * (uint32_t)f;
    f += e[4] * c[0];
    g += mul_hi(e[4], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[5];
    g += mul_hi(a[0], b[5]);
    f += a[1] * b[4];
    g += mul_hi(a[1], b[4]);
    f += a[2] * b[3];
    g += mul_hi(a[2], b[3]);
    f += a[3] * b[2];
    g += mul_hi(a[3], b[2]);
    f += a[4] * b[1];
    g += mul_hi(a[4], b[1]);
    f += a[5] * b[0];
    g += mul_hi(a[5], b[0]);
    f += e[0] * c[5];
    g += mul_hi(e[0], c[5]);
    f += e[1] * c[4];
    g += mul_hi(e[1], c[4]);
    f += e[2] * c[3];
    g += mul_hi(e[2], c[3]);
    f += e[3] * c[2];
    g += mul_hi(e[3], c[2]);
    f += e[4] * c[1];
    g += mul_hi(e[4], c[1]);
    e[5] = d * (uint32_t)f;
    f += e[5] * c[0];
    g += mul_hi(e[5], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[6];
    g += mul_hi(a[0], b[6]);
    f += a[1] * b[5];
    g += mul_hi(a[1], b[5]);
    f += a[2] * b[4];
    g += mul_hi(a[2], b[4]);
    f += a[3] * b[3];
    g += mul_hi(a[3], b[3]);
    f += a[4] * b[2];
    g += mul_hi(a[4], b[2]);
    f += a[5] * b[1];
    g += mul_hi(a[5], b[1]);
    f += a[6] * b[0];
    g += mul_hi(a[6], b[0]);
    f += e[0] * c[6];
    g += mul_hi(e[0], c[6]);
    f += e[1] * c[5];
    g += mul_hi(e[1], c[5]);
    f += e[2] * c[4];
    g += mul_hi(e[2], c[4]);
    f += e[3] * c[3];
    g += mul_hi(e[3], c[3]);
    f += e[4] * c[2];
    g += mul_hi(e[4], c[2]);
    f += e[5] * c[1];
    g += mul_hi(e[5], c[1]);
    e[6] = d * (uint32_t)f;
    f += e[6] * c[0];
    g += mul_hi(e[6], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[7];
    g += mul_hi(a[0], b[7]);
    f += a[1] * b[6];
    g += mul_hi(a[1], b[6]);
    f += a[2] * b[5];
    g += mul_hi(a[2], b[5]);
    f += a[3] * b[4];
    g += mul_hi(a[3], b[4]);
    f += a[4] * b[3];
    g += mul_hi(a[4], b[3]);
    f += a[5] * b[2];
    g += mul_hi(a[5], b[2]);
    f += a[6] * b[1];
    g += mul_hi(a[6], b[1]);
    f += a[7] * b[0];
    g += mul_hi(a[7], b[0]);
    f += e[0] * c[7];
    g += mul_hi(e[0], c[7]);
    f += e[1] * c[6];
    g += mul_hi(e[1], c[6]);
    f += e[2] * c[5];
    g += mul_hi(e[2], c[5]);
    f += e[3] * c[4];
    g += mul_hi(e[3], c[4]);
    f += e[4] * c[3];
    g += mul_hi(e[4], c[3]);
    f += e[5] * c[2];
    g += mul_hi(e[5], c[2]);
    f += e[6] * c[1];
    g += mul_hi(e[6], c[1]);
    e[7] = d * (uint32_t)f;
    f += e[7] * c[0];
    g += mul_hi(e[7], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[8];
    g += mul_hi(a[0], b[8]);
    f += a[1] * b[7];
    g += mul_hi(a[1], b[7]);
    f += a[2] * b[6];
    g += mul_hi(a[2], b[6]);
    f += a[3] * b[5];
    g += mul_hi(a[3], b[5]);
    f += a[4] * b[4];
    g += mul_hi(a[4], b[4]);
    f += a[5] * b[3];
    g += mul_hi(a[5], b[3]);
    f += a[6] * b[2];
    g += mul_hi(a[6], b[2]);
    f += a[7] * b[1];
    g += mul_hi(a[7], b[1]);
    f += a[8] * b[0];
    g += mul_hi(a[8], b[0]);
    f += e[0] * c[8];
    g += mul_hi(e[0], c[8]);
    f += e[1] * c[7];
    g += mul_hi(e[1], c[7]);
    f += e[2] * c[6];
    g += mul_hi(e[2], c[6]);
    f += e[3] * c[5];
    g += mul_hi(e[3], c[5]);
    f += e[4] * c[4];
    g += mul_hi(e[4], c[4]);
    f += e[5] * c[3];
    g += mul_hi(e[5], c[3]);
    f += e[6] * c[2];
    g += mul_hi(e[6], c[2]);
    f += e[7] * c[1];
    g += mul_hi(e[7], c[1]);
    e[8] = d * (uint32_t)f;
    f += e[8] * c[0];
    g += mul_hi(e[8], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[9];
    g += mul_hi(a[0], b[9]);
    f += a[1] * b[8];
    g += mul_hi(a[1], b[8]);
    f += a[2] * b[7];
    g += mul_hi(a[2], b[7]);
    f += a[3] * b[6];
    g += mul_hi(a[3], b[6]);
    f += a[4] * b[5];
    g += mul_hi(a[4], b[5]);
    f += a[5] * b[4];
    g += mul_hi(a[5], b[4]);
    f += a[6] * b[3];
    g += mul_hi(a[6], b[3]);
    f += a[7] * b[2];
    g += mul_hi(a[7], b[2]);
    f += a[8] * b[1];
    g += mul_hi(a[8], b[1]);
    f += a[9] * b[0];
    g += mul_hi(a[9], b[0]);
    f += e[0] * c[9];
    g += mul_hi(e[0], c[9]);
    f += e[1] * c[8];
    g += mul_hi(e[1], c[8]);
    f += e[2] * c[7];
    g += mul_hi(e[2], c[7]);
    f += e[3] * c[6];
    g += mul_hi(e[3], c[6]);
    f += e[4] * c[5];
    g += mul_hi(e[4], c[5]);
    f += e[5] * c[4];
    g += mul_hi(e[5], c[4]);
    f += e[6] * c[3];
    g += mul_hi(e[6], c[3]);
    f += e[7] * c[2];
    g += mul_hi(e[7], c[2]);
    f += e[8] * c[1];
    g += mul_hi(e[8], c[1]);
    e[9] = d * (uint32_t)f;
    f += e[9] * c[0];
    g += mul_hi(e[9], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[0] * b[10];
    g += mul_hi(a[0], b[10]);
    f += a[1] * b[9];
    g += mul_hi(a[1], b[9]);
    f += a[2] * b[8];
    g += mul_hi(a[2], b[8]);
    f += a[3] * b[7];
    g += mul_hi(a[3], b[7]);
    f += a[4] * b[6];
    g += mul_hi(a[4], b[6]);
    f += a[5] * b[5];
    g += mul_hi(a[5], b[5]);
    f += a[6] * b[4];
    g += mul_hi(a[6], b[4]);
    f += a[7] * b[3];
    g += mul_hi(a[7], b[3]);
    f += a[8] * b[2];
    g += mul_hi(a[8], b[2]);
    f += a[9] * b[1];
    g += mul_hi(a[9], b[1]);
    f += a[10] * b[0];
    g += mul_hi(a[10], b[0]);
    f += e[0] * c[10];
    g += mul_hi(e[0], c[10]);
    f += e[1] * c[9];
    g += mul_hi(e[1], c[9]);
    f += e[2] * c[8];
    g += mul_hi(e[2], c[8]);
    f += e[3] * c[7];
    g += mul_hi(e[3], c[7]);
    f += e[4] * c[6];
    g += mul_hi(e[4], c[6]);
    f += e[5] * c[5];
    g += mul_hi(e[5], c[5]);
    f += e[6] * c[4];
    g += mul_hi(e[6], c[4]);
    f += e[7] * c[3];
    g += mul_hi(e[7], c[3]);
    f += e[8] * c[2];
    g += mul_hi(e[8], c[2]);
    f += e[9] * c[1];
    g += mul_hi(e[9], c[1]);
    e[10] = d * (uint32_t)f;
    f += e[10] * c[0];
    g += mul_hi(e[10], c[0]);
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[1] * b[10];
    g += mul_hi(a[1], b[10]);
    f += a[2] * b[9];
    g += mul_hi(a[2], b[9]);
    f += a[3] * b[8];
    g += mul_hi(a[3], b[8]);
    f += a[4] * b[7];
    g += mul_hi(a[4], b[7]);
    f += a[5] * b[6];
    g += mul_hi(a[5], b[6]);
    f += a[6] * b[5];
    g += mul_hi(a[6], b[5]);
    f += a[7] * b[4];
    g += mul_hi(a[7], b[4]);
    f += a[8] * b[3];
    g += mul_hi(a[8], b[3]);
    f += a[9] * b[2];
    g += mul_hi(a[9], b[2]);
    f += a[10] * b[1];
    g += mul_hi(a[10], b[1]);
    f += e[1] * c[10];
    g += mul_hi(e[1], c[10]);
    f += e[2] * c[9];
    g += mul_hi(e[2], c[9]);
    f += e[3] * c[8];
    g += mul_hi(e[3], c[8]);
    f += e[4] * c[7];
    g += mul_hi(e[4], c[7]);
    f += e[5] * c[6];
    g += mul_hi(e[5], c[6]);
    f += e[6] * c[5];
    g += mul_hi(e[6], c[5]);
    f += e[7] * c[4];
    g += mul_hi(e[7], c[4]);
    f += e[8] * c[3];
    g += mul_hi(e[8], c[3]);
    f += e[9] * c[2];
    g += mul_hi(e[9], c[2]);
    f += e[10] * c[1];
    g += mul_hi(e[10], c[1]);
    a[0] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[2] * b[10];
    g += mul_hi(a[2], b[10]);
    f += a[3] * b[9];
    g += mul_hi(a[3], b[9]);
    f += a[4] * b[8];
    g += mul_hi(a[4], b[8]);
    f += a[5] * b[7];
    g += mul_hi(a[5], b[7]);
    f += a[6] * b[6];
    g += mul_hi(a[6], b[6]);
    f += a[7] * b[5];
    g += mul_hi(a[7], b[5]);
    f += a[8] * b[4];
    g += mul_hi(a[8], b[4]);
    f += a[9] * b[3];
    g += mul_hi(a[9], b[3]);
    f += a[10] * b[2];
    g += mul_hi(a[10], b[2]);
    f += e[2] * c[10];
    g += mul_hi(e[2], c[10]);
    f += e[3] * c[9];
    g += mul_hi(e[3], c[9]);
    f += e[4] * c[8];
    g += mul_hi(e[4], c[8]);
    f += e[5] * c[7];
    g += mul_hi(e[5], c[7]);
    f += e[6] * c[6];
    g += mul_hi(e[6], c[6]);
    f += e[7] * c[5];
    g += mul_hi(e[7], c[5]);
    f += e[8] * c[4];
    g += mul_hi(e[8], c[4]);
    f += e[9] * c[3];
    g += mul_hi(e[9], c[3]);
    f += e[10] * c[2];
    g += mul_hi(e[10], c[2]);
    a[1] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[3] * b[10];
    g += mul_hi(a[3], b[10]);
    f += a[4] * b[9];
    g += mul_hi(a[4], b[9]);
    f += a[5] * b[8];
    g += mul_hi(a[5], b[8]);
    f += a[6] * b[7];
    g += mul_hi(a[6], b[7]);
    f += a[7] * b[6];
    g += mul_hi(a[7], b[6]);
    f += a[8] * b[5];
    g += mul_hi(a[8], b[5]);
    f += a[9] * b[4];
    g += mul_hi(a[9], b[4]);
    f += a[10] * b[3];
    g += mul_hi(a[10], b[3]);
    f += e[3] * c[10];
    g += mul_hi(e[3], c[10]);
    f += e[4] * c[9];
    g += mul_hi(e[4], c[9]);
    f += e[5] * c[8];
    g += mul_hi(e[5], c[8]);
    f += e[6] * c[7];
    g += mul_hi(e[6], c[7]);
    f += e[7] * c[6];
    g += mul_hi(e[7], c[6]);
    f += e[8] * c[5];
    g += mul_hi(e[8], c[5]);
    f += e[9] * c[4];
    g += mul_hi(e[9], c[4]);
    f += e[10] * c[3];
    g += mul_hi(e[10], c[3]);
    a[2] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[4] * b[10];
    g += mul_hi(a[4], b[10]);
    f += a[5] * b[9];
    g += mul_hi(a[5], b[9]);
    f += a[6] * b[8];
    g += mul_hi(a[6], b[8]);
    f += a[7] * b[7];
    g += mul_hi(a[7], b[7]);
    f += a[8] * b[6];
    g += mul_hi(a[8], b[6]);
    f += a[9] * b[5];
    g += mul_hi(a[9], b[5]);
    f += a[10] * b[4];
    g += mul_hi(a[10], b[4]);
    f += e[4] * c[10];
    g += mul_hi(e[4], c[10]);
    f += e[5] * c[9];
    g += mul_hi(e[5], c[9]);
    f += e[6] * c[8];
    g += mul_hi(e[6], c[8]);
    f += e[7] * c[7];
    g += mul_hi(e[7], c[7]);
    f += e[8] * c[6];
    g += mul_hi(e[8], c[6]);
    f += e[9] * c[5];
    g += mul_hi(e[9], c[5]);
    f += e[10] * c[4];
    g += mul_hi(e[10], c[4]);
    a[3] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[5] * b[10];
    g += mul_hi(a[5], b[10]);
    f += a[6] * b[9];
    g += mul_hi(a[6], b[9]);
    f += a[7] * b[8];
    g += mul_hi(a[7], b[8]);
    f += a[8] * b[7];
    g += mul_hi(a[8], b[7]);
    f += a[9] * b[6];
    g += mul_hi(a[9], b[6]);
    f += a[10] * b[5];
    g += mul_hi(a[10], b[5]);
    f += e[5] * c[10];
    g += mul_hi(e[5], c[10]);
    f += e[6] * c[9];
    g += mul_hi(e[6], c[9]);
    f += e[7] * c[8];
    g += mul_hi(e[7], c[8]);
    f += e[8] * c[7];
    g += mul_hi(e[8], c[7]);
    f += e[9] * c[6];
    g += mul_hi(e[9], c[6]);
    f += e[10] * c[5];
    g += mul_hi(e[10], c[5]);
    a[4] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[6] * b[10];
    g += mul_hi(a[6], b[10]);
    f += a[7] * b[9];
    g += mul_hi(a[7], b[9]);
    f += a[8] * b[8];
    g += mul_hi(a[8], b[8]);
    f += a[9] * b[7];
    g += mul_hi(a[9], b[7]);
    f += a[10] * b[6];
    g += mul_hi(a[10], b[6]);
    f += e[6] * c[10];
    g += mul_hi(e[6], c[10]);
    f += e[7] * c[9];
    g += mul_hi(e[7], c[9]);
    f += e[8] * c[8];
    g += mul_hi(e[8], c[8]);
    f += e[9] * c[7];
    g += mul_hi(e[9], c[7]);
    f += e[10] * c[6];
    g += mul_hi(e[10], c[6]);
    a[5] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[7] * b[10];
    g += mul_hi(a[7], b[10]);
    f += a[8] * b[9];
    g += mul_hi(a[8], b[9]);
    f += a[9] * b[8];
    g += mul_hi(a[9], b[8]);
    f += a[10] * b[7];
    g += mul_hi(a[10], b[7]);
    f += e[7] * c[10];
    g += mul_hi(e[7], c[10]);
    f += e[8] * c[9];
    g += mul_hi(e[8], c[9]);
    f += e[9] * c[8];
    g += mul_hi(e[9], c[8]);
    f += e[10] * c[7];
    g += mul_hi(e[10], c[7]);
    a[6] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[8] * b[10];
    g += mul_hi(a[8], b[10]);
    f += a[9] * b[9];
    g += mul_hi(a[9], b[9]);
    f += a[10] * b[8];
    g += mul_hi(a[10], b[8]);
    f += e[8] * c[10];
    g += mul_hi(e[8], c[10]);
    f += e[9] * c[9];
    g += mul_hi(e[9], c[9]);
    f += e[10] * c[8];
    g += mul_hi(e[10], c[8]);
    a[7] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[9] * b[10];
    g += mul_hi(a[9], b[10]);
    f += a[10] * b[9];
    g += mul_hi(a[10], b[9]);
    f += e[9] * c[10];
    g += mul_hi(e[9], c[10]);
    f += e[10] * c[9];
    g += mul_hi(e[10], c[9]);
    a[8] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  {
    f += a[10] * b[10];
    g += mul_hi(a[10], b[10]);
    f += e[10] * c[10];
    g += mul_hi(e[10], c[10]);
    a[9] = f;
    h.v64 = f;
    g += h.v32.y;
    f = g;
    g = 0;
  }
  a[10] = f;
  h.v64 = f;
  if (h.v32.y)
    A(a, c, 11);
}
void J(uint32_t* a, uint32_t* b, uint32_t c) {
  uint32_t d[11];
  uint64_t e = a[0], f = a[1];
  union {
    uint2 v32;
    ulong v64;
  } g;
  {
    d[0] = c * (uint32_t)e;
    e += d[0] * b[0];
    f += mul_hi(d[0], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[2];
  }
  {
    e += d[0] * b[1];
    f += mul_hi(d[0], b[1]);
    d[1] = c * (uint32_t)e;
    e += d[1] * b[0];
    f += mul_hi(d[1], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[3];
  }
  {
    e += d[0] * b[2];
    f += mul_hi(d[0], b[2]);
    e += d[1] * b[1];
    f += mul_hi(d[1], b[1]);
    d[2] = c * (uint32_t)e;
    e += d[2] * b[0];
    f += mul_hi(d[2], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[4];
  }
  {
    e += d[0] * b[3];
    f += mul_hi(d[0], b[3]);
    e += d[1] * b[2];
    f += mul_hi(d[1], b[2]);
    e += d[2] * b[1];
    f += mul_hi(d[2], b[1]);
    d[3] = c * (uint32_t)e;
    e += d[3] * b[0];
    f += mul_hi(d[3], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[5];
  }
  {
    e += d[0] * b[4];
    f += mul_hi(d[0], b[4]);
    e += d[1] * b[3];
    f += mul_hi(d[1], b[3]);
    e += d[2] * b[2];
    f += mul_hi(d[2], b[2]);
    e += d[3] * b[1];
    f += mul_hi(d[3], b[1]);
    d[4] = c * (uint32_t)e;
    e += d[4] * b[0];
    f += mul_hi(d[4], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[6];
  }
  {
    e += d[0] * b[5];
    f += mul_hi(d[0], b[5]);
    e += d[1] * b[4];
    f += mul_hi(d[1], b[4]);
    e += d[2] * b[3];
    f += mul_hi(d[2], b[3]);
    e += d[3] * b[2];
    f += mul_hi(d[3], b[2]);
    e += d[4] * b[1];
    f += mul_hi(d[4], b[1]);
    d[5] = c * (uint32_t)e;
    e += d[5] * b[0];
    f += mul_hi(d[5], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[7];
  }
  {
    e += d[0] * b[6];
    f += mul_hi(d[0], b[6]);
    e += d[1] * b[5];
    f += mul_hi(d[1], b[5]);
    e += d[2] * b[4];
    f += mul_hi(d[2], b[4]);
    e += d[3] * b[3];
    f += mul_hi(d[3], b[3]);
    e += d[4] * b[2];
    f += mul_hi(d[4], b[2]);
    e += d[5] * b[1];
    f += mul_hi(d[5], b[1]);
    d[6] = c * (uint32_t)e;
    e += d[6] * b[0];
    f += mul_hi(d[6], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[8];
  }
  {
    e += d[0] * b[7];
    f += mul_hi(d[0], b[7]);
    e += d[1] * b[6];
    f += mul_hi(d[1], b[6]);
    e += d[2] * b[5];
    f += mul_hi(d[2], b[5]);
    e += d[3] * b[4];
    f += mul_hi(d[3], b[4]);
    e += d[4] * b[3];
    f += mul_hi(d[4], b[3]);
    e += d[5] * b[2];
    f += mul_hi(d[5], b[2]);
    e += d[6] * b[1];
    f += mul_hi(d[6], b[1]);
    d[7] = c * (uint32_t)e;
    e += d[7] * b[0];
    f += mul_hi(d[7], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[9];
  }
  {
    e += d[0] * b[8];
    f += mul_hi(d[0], b[8]);
    e += d[1] * b[7];
    f += mul_hi(d[1], b[7]);
    e += d[2] * b[6];
    f += mul_hi(d[2], b[6]);
    e += d[3] * b[5];
    f += mul_hi(d[3], b[5]);
    e += d[4] * b[4];
    f += mul_hi(d[4], b[4]);
    e += d[5] * b[3];
    f += mul_hi(d[5], b[3]);
    e += d[6] * b[2];
    f += mul_hi(d[6], b[2]);
    e += d[7] * b[1];
    f += mul_hi(d[7], b[1]);
    d[8] = c * (uint32_t)e;
    e += d[8] * b[0];
    f += mul_hi(d[8], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = a[10];
  }
  {
    e += d[0] * b[9];
    f += mul_hi(d[0], b[9]);
    e += d[1] * b[8];
    f += mul_hi(d[1], b[8]);
    e += d[2] * b[7];
    f += mul_hi(d[2], b[7]);
    e += d[3] * b[6];
    f += mul_hi(d[3], b[6]);
    e += d[4] * b[5];
    f += mul_hi(d[4], b[5]);
    e += d[5] * b[4];
    f += mul_hi(d[5], b[4]);
    e += d[6] * b[3];
    f += mul_hi(d[6], b[3]);
    e += d[7] * b[2];
    f += mul_hi(d[7], b[2]);
    e += d[8] * b[1];
    f += mul_hi(d[8], b[1]);
    d[9] = c * (uint32_t)e;
    e += d[9] * b[0];
    f += mul_hi(d[9], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[0] * b[10];
    f += mul_hi(d[0], b[10]);
    e += d[1] * b[9];
    f += mul_hi(d[1], b[9]);
    e += d[2] * b[8];
    f += mul_hi(d[2], b[8]);
    e += d[3] * b[7];
    f += mul_hi(d[3], b[7]);
    e += d[4] * b[6];
    f += mul_hi(d[4], b[6]);
    e += d[5] * b[5];
    f += mul_hi(d[5], b[5]);
    e += d[6] * b[4];
    f += mul_hi(d[6], b[4]);
    e += d[7] * b[3];
    f += mul_hi(d[7], b[3]);
    e += d[8] * b[2];
    f += mul_hi(d[8], b[2]);
    e += d[9] * b[1];
    f += mul_hi(d[9], b[1]);
    d[10] = c * (uint32_t)e;
    e += d[10] * b[0];
    f += mul_hi(d[10], b[0]);
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[1] * b[10];
    f += mul_hi(d[1], b[10]);
    e += d[2] * b[9];
    f += mul_hi(d[2], b[9]);
    e += d[3] * b[8];
    f += mul_hi(d[3], b[8]);
    e += d[4] * b[7];
    f += mul_hi(d[4], b[7]);
    e += d[5] * b[6];
    f += mul_hi(d[5], b[6]);
    e += d[6] * b[5];
    f += mul_hi(d[6], b[5]);
    e += d[7] * b[4];
    f += mul_hi(d[7], b[4]);
    e += d[8] * b[3];
    f += mul_hi(d[8], b[3]);
    e += d[9] * b[2];
    f += mul_hi(d[9], b[2]);
    e += d[10] * b[1];
    f += mul_hi(d[10], b[1]);
    a[0] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[2] * b[10];
    f += mul_hi(d[2], b[10]);
    e += d[3] * b[9];
    f += mul_hi(d[3], b[9]);
    e += d[4] * b[8];
    f += mul_hi(d[4], b[8]);
    e += d[5] * b[7];
    f += mul_hi(d[5], b[7]);
    e += d[6] * b[6];
    f += mul_hi(d[6], b[6]);
    e += d[7] * b[5];
    f += mul_hi(d[7], b[5]);
    e += d[8] * b[4];
    f += mul_hi(d[8], b[4]);
    e += d[9] * b[3];
    f += mul_hi(d[9], b[3]);
    e += d[10] * b[2];
    f += mul_hi(d[10], b[2]);
    a[1] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[3] * b[10];
    f += mul_hi(d[3], b[10]);
    e += d[4] * b[9];
    f += mul_hi(d[4], b[9]);
    e += d[5] * b[8];
    f += mul_hi(d[5], b[8]);
    e += d[6] * b[7];
    f += mul_hi(d[6], b[7]);
    e += d[7] * b[6];
    f += mul_hi(d[7], b[6]);
    e += d[8] * b[5];
    f += mul_hi(d[8], b[5]);
    e += d[9] * b[4];
    f += mul_hi(d[9], b[4]);
    e += d[10] * b[3];
    f += mul_hi(d[10], b[3]);
    a[2] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[4] * b[10];
    f += mul_hi(d[4], b[10]);
    e += d[5] * b[9];
    f += mul_hi(d[5], b[9]);
    e += d[6] * b[8];
    f += mul_hi(d[6], b[8]);
    e += d[7] * b[7];
    f += mul_hi(d[7], b[7]);
    e += d[8] * b[6];
    f += mul_hi(d[8], b[6]);
    e += d[9] * b[5];
    f += mul_hi(d[9], b[5]);
    e += d[10] * b[4];
    f += mul_hi(d[10], b[4]);
    a[3] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[5] * b[10];
    f += mul_hi(d[5], b[10]);
    e += d[6] * b[9];
    f += mul_hi(d[6], b[9]);
    e += d[7] * b[8];
    f += mul_hi(d[7], b[8]);
    e += d[8] * b[7];
    f += mul_hi(d[8], b[7]);
    e += d[9] * b[6];
    f += mul_hi(d[9], b[6]);
    e += d[10] * b[5];
    f += mul_hi(d[10], b[5]);
    a[4] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[6] * b[10];
    f += mul_hi(d[6], b[10]);
    e += d[7] * b[9];
    f += mul_hi(d[7], b[9]);
    e += d[8] * b[8];
    f += mul_hi(d[8], b[8]);
    e += d[9] * b[7];
    f += mul_hi(d[9], b[7]);
    e += d[10] * b[6];
    f += mul_hi(d[10], b[6]);
    a[5] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[7] * b[10];
    f += mul_hi(d[7], b[10]);
    e += d[8] * b[9];
    f += mul_hi(d[8], b[9]);
    e += d[9] * b[8];
    f += mul_hi(d[9], b[8]);
    e += d[10] * b[7];
    f += mul_hi(d[10], b[7]);
    a[6] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[8] * b[10];
    f += mul_hi(d[8], b[10]);
    e += d[9] * b[9];
    f += mul_hi(d[9], b[9]);
    e += d[10] * b[8];
    f += mul_hi(d[10], b[8]);
    a[7] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[9] * b[10];
    f += mul_hi(d[9], b[10]);
    e += d[10] * b[9];
    f += mul_hi(d[10], b[9]);
    a[8] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  {
    e += d[10] * b[10];
    f += mul_hi(d[10], b[10]);
    a[9] = e;
    g.v64 = e;
    f += g.v32.y;
    e = f;
    f = 0;
  }
  a[10] = e;
  g.v64 = e;
  if (g.v32.y)
    A(a, b, 11);
}
void K(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    d += b[10] * c[0];
    e += mul_hi(b[10], c[0]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[9] * c[2];
    e += mul_hi(b[9], c[2]);
    d += b[10] * c[1];
    e += mul_hi(b[10], c[1]);
    a[11] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
}
void L(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[3];
    e += mul_hi(b[0], c[3]);
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[3];
    e += mul_hi(b[1], c[3]);
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[3];
    e += mul_hi(b[2], c[3]);
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[3];
    e += mul_hi(b[3], c[3]);
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[3];
    e += mul_hi(b[4], c[3]);
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[3];
    e += mul_hi(b[5], c[3]);
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[6] * c[3];
    e += mul_hi(b[6], c[3]);
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[7] * c[3];
    e += mul_hi(b[7], c[3]);
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    d += b[10] * c[0];
    e += mul_hi(b[10], c[0]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[8] * c[3];
    e += mul_hi(b[8], c[3]);
    d += b[9] * c[2];
    e += mul_hi(b[9], c[2]);
    d += b[10] * c[1];
    e += mul_hi(b[10], c[1]);
    a[11] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
}
void M(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[3];
    e += mul_hi(b[0], c[3]);
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[4];
    e += mul_hi(b[0], c[4]);
    d += b[1] * c[3];
    e += mul_hi(b[1], c[3]);
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[5];
    e += mul_hi(b[0], c[5]);
    d += b[1] * c[4];
    e += mul_hi(b[1], c[4]);
    d += b[2] * c[3];
    e += mul_hi(b[2], c[3]);
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[5];
    e += mul_hi(b[1], c[5]);
    d += b[2] * c[4];
    e += mul_hi(b[2], c[4]);
    d += b[3] * c[3];
    e += mul_hi(b[3], c[3]);
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[5];
    e += mul_hi(b[2], c[5]);
    d += b[3] * c[4];
    e += mul_hi(b[3], c[4]);
    d += b[4] * c[3];
    e += mul_hi(b[4], c[3]);
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[5];
    e += mul_hi(b[3], c[5]);
    d += b[4] * c[4];
    e += mul_hi(b[4], c[4]);
    d += b[5] * c[3];
    e += mul_hi(b[5], c[3]);
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[5];
    e += mul_hi(b[4], c[5]);
    d += b[5] * c[4];
    e += mul_hi(b[5], c[4]);
    d += b[6] * c[3];
    e += mul_hi(b[6], c[3]);
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[5];
    e += mul_hi(b[5], c[5]);
    d += b[6] * c[4];
    e += mul_hi(b[6], c[4]);
    d += b[7] * c[3];
    e += mul_hi(b[7], c[3]);
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    d += b[10] * c[0];
    e += mul_hi(b[10], c[0]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[6] * c[5];
    e += mul_hi(b[6], c[5]);
    d += b[7] * c[4];
    e += mul_hi(b[7], c[4]);
    d += b[8] * c[3];
    e += mul_hi(b[8], c[3]);
    d += b[9] * c[2];
    e += mul_hi(b[9], c[2]);
    d += b[10] * c[1];
    e += mul_hi(b[10], c[1]);
    a[11] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
}
N(uint32_t* a, uint32_t* b) {
  uint64_t c = 0, d = 0;
  union {
    uint2 v32;
    ulong v64;
  } e;
  {
    c += b[0] * b[0];
    d += mul_hi(b[0], b[0]);
    a[0] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[1];
    uint32_t g = mul_hi(b[0], b[1]);
    c += f;
    c += f;
    d += g;
    d += g;
    a[1] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[2];
    uint32_t g = mul_hi(b[0], b[2]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += b[1] * b[1];
    d += mul_hi(b[1], b[1]);
    a[2] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[3];
    uint32_t g = mul_hi(b[0], b[3]);
    uint32_t h = b[1] * b[2];
    uint32_t i = mul_hi(b[1], b[2]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    a[3] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[4];
    uint32_t g = mul_hi(b[0], b[4]);
    uint32_t h = b[1] * b[3];
    uint32_t i = mul_hi(b[1], b[3]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += b[2] * b[2];
    d += mul_hi(b[2], b[2]);
    a[4] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[5];
    uint32_t g = mul_hi(b[0], b[5]);
    uint32_t h = b[1] * b[4];
    uint32_t i = mul_hi(b[1], b[4]);
    uint32_t j = b[2] * b[3];
    uint32_t k = mul_hi(b[2], b[3]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    a[5] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[6];
    uint32_t g = mul_hi(b[0], b[6]);
    uint32_t h = b[1] * b[5];
    uint32_t i = mul_hi(b[1], b[5]);
    uint32_t j = b[2] * b[4];
    uint32_t k = mul_hi(b[2], b[4]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += b[3] * b[3];
    d += mul_hi(b[3], b[3]);
    a[6] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[7];
    uint32_t g = mul_hi(b[0], b[7]);
    uint32_t h = b[1] * b[6];
    uint32_t i = mul_hi(b[1], b[6]);
    uint32_t j = b[2] * b[5];
    uint32_t k = mul_hi(b[2], b[5]);
    uint32_t l = b[3] * b[4];
    uint32_t m = mul_hi(b[3], b[4]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    a[7] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[8];
    uint32_t g = mul_hi(b[0], b[8]);
    uint32_t h = b[1] * b[7];
    uint32_t i = mul_hi(b[1], b[7]);
    uint32_t j = b[2] * b[6];
    uint32_t k = mul_hi(b[2], b[6]);
    uint32_t l = b[3] * b[5];
    uint32_t m = mul_hi(b[3], b[5]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += b[4] * b[4];
    d += mul_hi(b[4], b[4]);
    a[8] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[9];
    uint32_t g = mul_hi(b[0], b[9]);
    uint32_t h = b[1] * b[8];
    uint32_t i = mul_hi(b[1], b[8]);
    uint32_t j = b[2] * b[7];
    uint32_t k = mul_hi(b[2], b[7]);
    uint32_t l = b[3] * b[6];
    uint32_t m = mul_hi(b[3], b[6]);
    uint32_t n = b[4] * b[5];
    uint32_t o = mul_hi(b[4], b[5]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += n;
    c += n;
    d += o;
    d += o;
    a[9] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[1] * b[9];
    uint32_t g = mul_hi(b[1], b[9]);
    uint32_t h = b[2] * b[8];
    uint32_t i = mul_hi(b[2], b[8]);
    uint32_t j = b[3] * b[7];
    uint32_t k = mul_hi(b[3], b[7]);
    uint32_t l = b[4] * b[6];
    uint32_t m = mul_hi(b[4], b[6]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += b[5] * b[5];
    d += mul_hi(b[5], b[5]);
    a[10] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[2] * b[9];
    uint32_t g = mul_hi(b[2], b[9]);
    uint32_t h = b[3] * b[8];
    uint32_t i = mul_hi(b[3], b[8]);
    uint32_t j = b[4] * b[7];
    uint32_t k = mul_hi(b[4], b[7]);
    uint32_t l = b[5] * b[6];
    uint32_t m = mul_hi(b[5], b[6]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    a[11] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[3] * b[9];
    uint32_t g = mul_hi(b[3], b[9]);
    uint32_t h = b[4] * b[8];
    uint32_t i = mul_hi(b[4], b[8]);
    uint32_t j = b[5] * b[7];
    uint32_t k = mul_hi(b[5], b[7]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += b[6] * b[6];
    d += mul_hi(b[6], b[6]);
    a[12] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[4] * b[9];
    uint32_t g = mul_hi(b[4], b[9]);
    uint32_t h = b[5] * b[8];
    uint32_t i = mul_hi(b[5], b[8]);
    uint32_t j = b[6] * b[7];
    uint32_t k = mul_hi(b[6], b[7]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    a[13] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[5] * b[9];
    uint32_t g = mul_hi(b[5], b[9]);
    uint32_t h = b[6] * b[8];
    uint32_t i = mul_hi(b[6], b[8]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += b[7] * b[7];
    d += mul_hi(b[7], b[7]);
    a[14] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[6] * b[9];
    uint32_t g = mul_hi(b[6], b[9]);
    uint32_t h = b[7] * b[8];
    uint32_t i = mul_hi(b[7], b[8]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    a[15] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[7] * b[9];
    uint32_t g = mul_hi(b[7], b[9]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += b[8] * b[8];
    d += mul_hi(b[8], b[8]);
    a[16] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[8] * b[9];
    uint32_t g = mul_hi(b[8], b[9]);
    c += f;
    c += f;
    d += g;
    d += g;
    a[17] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    c += b[9] * b[9];
    d += mul_hi(b[9], b[9]);
    a[18] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  a[19] = c;
}
O(uint32_t* a, uint32_t* b) {
  uint64_t c = 0, d = 0;
  union {
    uint2 v32;
    ulong v64;
  } e;
  {
    c += b[0] * b[0];
    d += mul_hi(b[0], b[0]);
    a[0] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[1];
    uint32_t g = mul_hi(b[0], b[1]);
    c += f;
    c += f;
    d += g;
    d += g;
    a[1] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[2];
    uint32_t g = mul_hi(b[0], b[2]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += b[1] * b[1];
    d += mul_hi(b[1], b[1]);
    a[2] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[3];
    uint32_t g = mul_hi(b[0], b[3]);
    uint32_t h = b[1] * b[2];
    uint32_t i = mul_hi(b[1], b[2]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    a[3] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[4];
    uint32_t g = mul_hi(b[0], b[4]);
    uint32_t h = b[1] * b[3];
    uint32_t i = mul_hi(b[1], b[3]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += b[2] * b[2];
    d += mul_hi(b[2], b[2]);
    a[4] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[5];
    uint32_t g = mul_hi(b[0], b[5]);
    uint32_t h = b[1] * b[4];
    uint32_t i = mul_hi(b[1], b[4]);
    uint32_t j = b[2] * b[3];
    uint32_t k = mul_hi(b[2], b[3]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    a[5] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[6];
    uint32_t g = mul_hi(b[0], b[6]);
    uint32_t h = b[1] * b[5];
    uint32_t i = mul_hi(b[1], b[5]);
    uint32_t j = b[2] * b[4];
    uint32_t k = mul_hi(b[2], b[4]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += b[3] * b[3];
    d += mul_hi(b[3], b[3]);
    a[6] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[7];
    uint32_t g = mul_hi(b[0], b[7]);
    uint32_t h = b[1] * b[6];
    uint32_t i = mul_hi(b[1], b[6]);
    uint32_t j = b[2] * b[5];
    uint32_t k = mul_hi(b[2], b[5]);
    uint32_t l = b[3] * b[4];
    uint32_t m = mul_hi(b[3], b[4]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    a[7] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[8];
    uint32_t g = mul_hi(b[0], b[8]);
    uint32_t h = b[1] * b[7];
    uint32_t i = mul_hi(b[1], b[7]);
    uint32_t j = b[2] * b[6];
    uint32_t k = mul_hi(b[2], b[6]);
    uint32_t l = b[3] * b[5];
    uint32_t m = mul_hi(b[3], b[5]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += b[4] * b[4];
    d += mul_hi(b[4], b[4]);
    a[8] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[9];
    uint32_t g = mul_hi(b[0], b[9]);
    uint32_t h = b[1] * b[8];
    uint32_t i = mul_hi(b[1], b[8]);
    uint32_t j = b[2] * b[7];
    uint32_t k = mul_hi(b[2], b[7]);
    uint32_t l = b[3] * b[6];
    uint32_t m = mul_hi(b[3], b[6]);
    uint32_t n = b[4] * b[5];
    uint32_t o = mul_hi(b[4], b[5]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += n;
    c += n;
    d += o;
    d += o;
    a[9] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[0] * b[10];
    uint32_t g = mul_hi(b[0], b[10]);
    uint32_t h = b[1] * b[9];
    uint32_t i = mul_hi(b[1], b[9]);
    uint32_t j = b[2] * b[8];
    uint32_t k = mul_hi(b[2], b[8]);
    uint32_t l = b[3] * b[7];
    uint32_t m = mul_hi(b[3], b[7]);
    uint32_t n = b[4] * b[6];
    uint32_t o = mul_hi(b[4], b[6]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += n;
    c += n;
    d += o;
    d += o;
    c += b[5] * b[5];
    d += mul_hi(b[5], b[5]);
    a[10] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[1] * b[10];
    uint32_t g = mul_hi(b[1], b[10]);
    uint32_t h = b[2] * b[9];
    uint32_t i = mul_hi(b[2], b[9]);
    uint32_t j = b[3] * b[8];
    uint32_t k = mul_hi(b[3], b[8]);
    uint32_t l = b[4] * b[7];
    uint32_t m = mul_hi(b[4], b[7]);
    uint32_t n = b[5] * b[6];
    uint32_t o = mul_hi(b[5], b[6]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += n;
    c += n;
    d += o;
    d += o;
    a[11] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[2] * b[10];
    uint32_t g = mul_hi(b[2], b[10]);
    uint32_t h = b[3] * b[9];
    uint32_t i = mul_hi(b[3], b[9]);
    uint32_t j = b[4] * b[8];
    uint32_t k = mul_hi(b[4], b[8]);
    uint32_t l = b[5] * b[7];
    uint32_t m = mul_hi(b[5], b[7]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    c += b[6] * b[6];
    d += mul_hi(b[6], b[6]);
    a[12] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[3] * b[10];
    uint32_t g = mul_hi(b[3], b[10]);
    uint32_t h = b[4] * b[9];
    uint32_t i = mul_hi(b[4], b[9]);
    uint32_t j = b[5] * b[8];
    uint32_t k = mul_hi(b[5], b[8]);
    uint32_t l = b[6] * b[7];
    uint32_t m = mul_hi(b[6], b[7]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += l;
    c += l;
    d += m;
    d += m;
    a[13] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[4] * b[10];
    uint32_t g = mul_hi(b[4], b[10]);
    uint32_t h = b[5] * b[9];
    uint32_t i = mul_hi(b[5], b[9]);
    uint32_t j = b[6] * b[8];
    uint32_t k = mul_hi(b[6], b[8]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    c += b[7] * b[7];
    d += mul_hi(b[7], b[7]);
    a[14] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[5] * b[10];
    uint32_t g = mul_hi(b[5], b[10]);
    uint32_t h = b[6] * b[9];
    uint32_t i = mul_hi(b[6], b[9]);
    uint32_t j = b[7] * b[8];
    uint32_t k = mul_hi(b[7], b[8]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += j;
    c += j;
    d += k;
    d += k;
    a[15] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[6] * b[10];
    uint32_t g = mul_hi(b[6], b[10]);
    uint32_t h = b[7] * b[9];
    uint32_t i = mul_hi(b[7], b[9]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    c += b[8] * b[8];
    d += mul_hi(b[8], b[8]);
    a[16] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[7] * b[10];
    uint32_t g = mul_hi(b[7], b[10]);
    uint32_t h = b[8] * b[9];
    uint32_t i = mul_hi(b[8], b[9]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += h;
    c += h;
    d += i;
    d += i;
    a[17] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[8] * b[10];
    uint32_t g = mul_hi(b[8], b[10]);
    c += f;
    c += f;
    d += g;
    d += g;
    c += b[9] * b[9];
    d += mul_hi(b[9], b[9]);
    a[18] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    uint32_t f = b[9] * b[10];
    uint32_t g = mul_hi(b[9], b[10]);
    c += f;
    c += f;
    d += g;
    d += g;
    a[19] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  {
    c += b[10] * b[10];
    d += mul_hi(b[10], b[10]);
    a[20] = c;
    e.v64 = c;
    d += e.v32.y;
    c = d;
    d = 0;
  }
  a[21] = c;
}
void P(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[3];
    e += mul_hi(b[0], c[3]);
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[4];
    e += mul_hi(b[0], c[4]);
    d += b[1] * c[3];
    e += mul_hi(b[1], c[3]);
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[5];
    e += mul_hi(b[0], c[5]);
    d += b[1] * c[4];
    e += mul_hi(b[1], c[4]);
    d += b[2] * c[3];
    e += mul_hi(b[2], c[3]);
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[6];
    e += mul_hi(b[0], c[6]);
    d += b[1] * c[5];
    e += mul_hi(b[1], c[5]);
    d += b[2] * c[4];
    e += mul_hi(b[2], c[4]);
    d += b[3] * c[3];
    e += mul_hi(b[3], c[3]);
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[7];
    e += mul_hi(b[0], c[7]);
    d += b[1] * c[6];
    e += mul_hi(b[1], c[6]);
    d += b[2] * c[5];
    e += mul_hi(b[2], c[5]);
    d += b[3] * c[4];
    e += mul_hi(b[3], c[4]);
    d += b[4] * c[3];
    e += mul_hi(b[4], c[3]);
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[8];
    e += mul_hi(b[0], c[8]);
    d += b[1] * c[7];
    e += mul_hi(b[1], c[7]);
    d += b[2] * c[6];
    e += mul_hi(b[2], c[6]);
    d += b[3] * c[5];
    e += mul_hi(b[3], c[5]);
    d += b[4] * c[4];
    e += mul_hi(b[4], c[4]);
    d += b[5] * c[3];
    e += mul_hi(b[5], c[3]);
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[9];
    e += mul_hi(b[0], c[9]);
    d += b[1] * c[8];
    e += mul_hi(b[1], c[8]);
    d += b[2] * c[7];
    e += mul_hi(b[2], c[7]);
    d += b[3] * c[6];
    e += mul_hi(b[3], c[6]);
    d += b[4] * c[5];
    e += mul_hi(b[4], c[5]);
    d += b[5] * c[4];
    e += mul_hi(b[5], c[4]);
    d += b[6] * c[3];
    e += mul_hi(b[6], c[3]);
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[9];
    e += mul_hi(b[1], c[9]);
    d += b[2] * c[8];
    e += mul_hi(b[2], c[8]);
    d += b[3] * c[7];
    e += mul_hi(b[3], c[7]);
    d += b[4] * c[6];
    e += mul_hi(b[4], c[6]);
    d += b[5] * c[5];
    e += mul_hi(b[5], c[5]);
    d += b[6] * c[4];
    e += mul_hi(b[6], c[4]);
    d += b[7] * c[3];
    e += mul_hi(b[7], c[3]);
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[9];
    e += mul_hi(b[2], c[9]);
    d += b[3] * c[8];
    e += mul_hi(b[3], c[8]);
    d += b[4] * c[7];
    e += mul_hi(b[4], c[7]);
    d += b[5] * c[6];
    e += mul_hi(b[5], c[6]);
    d += b[6] * c[5];
    e += mul_hi(b[6], c[5]);
    d += b[7] * c[4];
    e += mul_hi(b[7], c[4]);
    d += b[8] * c[3];
    e += mul_hi(b[8], c[3]);
    d += b[9] * c[2];
    e += mul_hi(b[9], c[2]);
    a[11] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[9];
    e += mul_hi(b[3], c[9]);
    d += b[4] * c[8];
    e += mul_hi(b[4], c[8]);
    d += b[5] * c[7];
    e += mul_hi(b[5], c[7]);
    d += b[6] * c[6];
    e += mul_hi(b[6], c[6]);
    d += b[7] * c[5];
    e += mul_hi(b[7], c[5]);
    d += b[8] * c[4];
    e += mul_hi(b[8], c[4]);
    d += b[9] * c[3];
    e += mul_hi(b[9], c[3]);
    a[12] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[9];
    e += mul_hi(b[4], c[9]);
    d += b[5] * c[8];
    e += mul_hi(b[5], c[8]);
    d += b[6] * c[7];
    e += mul_hi(b[6], c[7]);
    d += b[7] * c[6];
    e += mul_hi(b[7], c[6]);
    d += b[8] * c[5];
    e += mul_hi(b[8], c[5]);
    d += b[9] * c[4];
    e += mul_hi(b[9], c[4]);
    a[13] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[9];
    e += mul_hi(b[5], c[9]);
    d += b[6] * c[8];
    e += mul_hi(b[6], c[8]);
    d += b[7] * c[7];
    e += mul_hi(b[7], c[7]);
    d += b[8] * c[6];
    e += mul_hi(b[8], c[6]);
    d += b[9] * c[5];
    e += mul_hi(b[9], c[5]);
    a[14] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[6] * c[9];
    e += mul_hi(b[6], c[9]);
    d += b[7] * c[8];
    e += mul_hi(b[7], c[8]);
    d += b[8] * c[7];
    e += mul_hi(b[8], c[7]);
    d += b[9] * c[6];
    e += mul_hi(b[9], c[6]);
    a[15] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[7] * c[9];
    e += mul_hi(b[7], c[9]);
    d += b[8] * c[8];
    e += mul_hi(b[8], c[8]);
    d += b[9] * c[7];
    e += mul_hi(b[9], c[7]);
    a[16] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[8] * c[9];
    e += mul_hi(b[8], c[9]);
    d += b[9] * c[8];
    e += mul_hi(b[9], c[8]);
    a[17] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[9] * c[9];
    e += mul_hi(b[9], c[9]);
    a[18] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  a[19] = d;
}
void Q(uint32_t* a, uint32_t* b, uint32_t* c) {
  uint64_t d = 0, e = 0;
  union {
    uint2 v32;
    ulong v64;
  } f;
  {
    d += b[0] * c[0];
    e += mul_hi(b[0], c[0]);
    a[0] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[1];
    e += mul_hi(b[0], c[1]);
    d += b[1] * c[0];
    e += mul_hi(b[1], c[0]);
    a[1] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[2];
    e += mul_hi(b[0], c[2]);
    d += b[1] * c[1];
    e += mul_hi(b[1], c[1]);
    d += b[2] * c[0];
    e += mul_hi(b[2], c[0]);
    a[2] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[3];
    e += mul_hi(b[0], c[3]);
    d += b[1] * c[2];
    e += mul_hi(b[1], c[2]);
    d += b[2] * c[1];
    e += mul_hi(b[2], c[1]);
    d += b[3] * c[0];
    e += mul_hi(b[3], c[0]);
    a[3] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[4];
    e += mul_hi(b[0], c[4]);
    d += b[1] * c[3];
    e += mul_hi(b[1], c[3]);
    d += b[2] * c[2];
    e += mul_hi(b[2], c[2]);
    d += b[3] * c[1];
    e += mul_hi(b[3], c[1]);
    d += b[4] * c[0];
    e += mul_hi(b[4], c[0]);
    a[4] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[5];
    e += mul_hi(b[0], c[5]);
    d += b[1] * c[4];
    e += mul_hi(b[1], c[4]);
    d += b[2] * c[3];
    e += mul_hi(b[2], c[3]);
    d += b[3] * c[2];
    e += mul_hi(b[3], c[2]);
    d += b[4] * c[1];
    e += mul_hi(b[4], c[1]);
    d += b[5] * c[0];
    e += mul_hi(b[5], c[0]);
    a[5] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[6];
    e += mul_hi(b[0], c[6]);
    d += b[1] * c[5];
    e += mul_hi(b[1], c[5]);
    d += b[2] * c[4];
    e += mul_hi(b[2], c[4]);
    d += b[3] * c[3];
    e += mul_hi(b[3], c[3]);
    d += b[4] * c[2];
    e += mul_hi(b[4], c[2]);
    d += b[5] * c[1];
    e += mul_hi(b[5], c[1]);
    d += b[6] * c[0];
    e += mul_hi(b[6], c[0]);
    a[6] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[7];
    e += mul_hi(b[0], c[7]);
    d += b[1] * c[6];
    e += mul_hi(b[1], c[6]);
    d += b[2] * c[5];
    e += mul_hi(b[2], c[5]);
    d += b[3] * c[4];
    e += mul_hi(b[3], c[4]);
    d += b[4] * c[3];
    e += mul_hi(b[4], c[3]);
    d += b[5] * c[2];
    e += mul_hi(b[5], c[2]);
    d += b[6] * c[1];
    e += mul_hi(b[6], c[1]);
    d += b[7] * c[0];
    e += mul_hi(b[7], c[0]);
    a[7] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[8];
    e += mul_hi(b[0], c[8]);
    d += b[1] * c[7];
    e += mul_hi(b[1], c[7]);
    d += b[2] * c[6];
    e += mul_hi(b[2], c[6]);
    d += b[3] * c[5];
    e += mul_hi(b[3], c[5]);
    d += b[4] * c[4];
    e += mul_hi(b[4], c[4]);
    d += b[5] * c[3];
    e += mul_hi(b[5], c[3]);
    d += b[6] * c[2];
    e += mul_hi(b[6], c[2]);
    d += b[7] * c[1];
    e += mul_hi(b[7], c[1]);
    d += b[8] * c[0];
    e += mul_hi(b[8], c[0]);
    a[8] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[9];
    e += mul_hi(b[0], c[9]);
    d += b[1] * c[8];
    e += mul_hi(b[1], c[8]);
    d += b[2] * c[7];
    e += mul_hi(b[2], c[7]);
    d += b[3] * c[6];
    e += mul_hi(b[3], c[6]);
    d += b[4] * c[5];
    e += mul_hi(b[4], c[5]);
    d += b[5] * c[4];
    e += mul_hi(b[5], c[4]);
    d += b[6] * c[3];
    e += mul_hi(b[6], c[3]);
    d += b[7] * c[2];
    e += mul_hi(b[7], c[2]);
    d += b[8] * c[1];
    e += mul_hi(b[8], c[1]);
    d += b[9] * c[0];
    e += mul_hi(b[9], c[0]);
    a[9] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[0] * c[10];
    e += mul_hi(b[0], c[10]);
    d += b[1] * c[9];
    e += mul_hi(b[1], c[9]);
    d += b[2] * c[8];
    e += mul_hi(b[2], c[8]);
    d += b[3] * c[7];
    e += mul_hi(b[3], c[7]);
    d += b[4] * c[6];
    e += mul_hi(b[4], c[6]);
    d += b[5] * c[5];
    e += mul_hi(b[5], c[5]);
    d += b[6] * c[4];
    e += mul_hi(b[6], c[4]);
    d += b[7] * c[3];
    e += mul_hi(b[7], c[3]);
    d += b[8] * c[2];
    e += mul_hi(b[8], c[2]);
    d += b[9] * c[1];
    e += mul_hi(b[9], c[1]);
    d += b[10] * c[0];
    e += mul_hi(b[10], c[0]);
    a[10] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[1] * c[10];
    e += mul_hi(b[1], c[10]);
    d += b[2] * c[9];
    e += mul_hi(b[2], c[9]);
    d += b[3] * c[8];
    e += mul_hi(b[3], c[8]);
    d += b[4] * c[7];
    e += mul_hi(b[4], c[7]);
    d += b[5] * c[6];
    e += mul_hi(b[5], c[6]);
    d += b[6] * c[5];
    e += mul_hi(b[6], c[5]);
    d += b[7] * c[4];
    e += mul_hi(b[7], c[4]);
    d += b[8] * c[3];
    e += mul_hi(b[8], c[3]);
    d += b[9] * c[2];
    e += mul_hi(b[9], c[2]);
    d += b[10] * c[1];
    e += mul_hi(b[10], c[1]);
    a[11] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[2] * c[10];
    e += mul_hi(b[2], c[10]);
    d += b[3] * c[9];
    e += mul_hi(b[3], c[9]);
    d += b[4] * c[8];
    e += mul_hi(b[4], c[8]);
    d += b[5] * c[7];
    e += mul_hi(b[5], c[7]);
    d += b[6] * c[6];
    e += mul_hi(b[6], c[6]);
    d += b[7] * c[5];
    e += mul_hi(b[7], c[5]);
    d += b[8] * c[4];
    e += mul_hi(b[8], c[4]);
    d += b[9] * c[3];
    e += mul_hi(b[9], c[3]);
    d += b[10] * c[2];
    e += mul_hi(b[10], c[2]);
    a[12] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[3] * c[10];
    e += mul_hi(b[3], c[10]);
    d += b[4] * c[9];
    e += mul_hi(b[4], c[9]);
    d += b[5] * c[8];
    e += mul_hi(b[5], c[8]);
    d += b[6] * c[7];
    e += mul_hi(b[6], c[7]);
    d += b[7] * c[6];
    e += mul_hi(b[7], c[6]);
    d += b[8] * c[5];
    e += mul_hi(b[8], c[5]);
    d += b[9] * c[4];
    e += mul_hi(b[9], c[4]);
    d += b[10] * c[3];
    e += mul_hi(b[10], c[3]);
    a[13] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[4] * c[10];
    e += mul_hi(b[4], c[10]);
    d += b[5] * c[9];
    e += mul_hi(b[5], c[9]);
    d += b[6] * c[8];
    e += mul_hi(b[6], c[8]);
    d += b[7] * c[7];
    e += mul_hi(b[7], c[7]);
    d += b[8] * c[6];
    e += mul_hi(b[8], c[6]);
    d += b[9] * c[5];
    e += mul_hi(b[9], c[5]);
    d += b[10] * c[4];
    e += mul_hi(b[10], c[4]);
    a[14] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[5] * c[10];
    e += mul_hi(b[5], c[10]);
    d += b[6] * c[9];
    e += mul_hi(b[6], c[9]);
    d += b[7] * c[8];
    e += mul_hi(b[7], c[8]);
    d += b[8] * c[7];
    e += mul_hi(b[8], c[7]);
    d += b[9] * c[6];
    e += mul_hi(b[9], c[6]);
    d += b[10] * c[5];
    e += mul_hi(b[10], c[5]);
    a[15] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[6] * c[10];
    e += mul_hi(b[6], c[10]);
    d += b[7] * c[9];
    e += mul_hi(b[7], c[9]);
    d += b[8] * c[8];
    e += mul_hi(b[8], c[8]);
    d += b[9] * c[7];
    e += mul_hi(b[9], c[7]);
    d += b[10] * c[6];
    e += mul_hi(b[10], c[6]);
    a[16] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[7] * c[10];
    e += mul_hi(b[7], c[10]);
    d += b[8] * c[9];
    e += mul_hi(b[8], c[9]);
    d += b[9] * c[8];
    e += mul_hi(b[9], c[8]);
    d += b[10] * c[7];
    e += mul_hi(b[10], c[7]);
    a[17] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[8] * c[10];
    e += mul_hi(b[8], c[10]);
    d += b[9] * c[9];
    e += mul_hi(b[9], c[9]);
    d += b[10] * c[8];
    e += mul_hi(b[10], c[8]);
    a[18] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[9] * c[10];
    e += mul_hi(b[9], c[10]);
    d += b[10] * c[9];
    e += mul_hi(b[10], c[9]);
    a[19] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  {
    d += b[10] * c[10];
    e += mul_hi(b[10], c[10]);
    a[20] = d;
    f.v64 = d;
    e += f.v32.y;
    d = e;
    e = 0;
  }
  a[21] = d;
}