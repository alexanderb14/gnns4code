__kernel void A(int a, int b, float c, __global int* d, __global float* e, __global int* f, __global float* g, __global float* h, __global float* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, int s, int t, __global float* u, __global float* v, __global float* w) {
  int x, y, z, aa;
  float ab, ac, ad;
  int ae = d[2];
  int af = 1;
  z = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int ag = z;
  int ah = d[8];
  x = get_group_id(1) * get_local_size(1) + get_local_id(1) + ah;

  if (z > b || x > d[9]) {
    return;
  }

  for (y = d[2]; y <= d[3]; y++) {
    if (z == 1 || z == 2 || z == 0) {
      if (z == 0)
        z = a;
      if (z == 1) {
        ab = (i[((z)-1) * 4 + (3) - 1] - i[((z)-1) * 4 + (1) - 1]) * o[(2) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + i[((z)-1) * 4 + (4) - 1] * o[(3) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))];
        ac = (i[((z)-1) * 4 + (3) - 1] - i[((z)-1) * 4 + (1) - 1]) * q[(2) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + i[((z)-1) * 4 + (4) - 1] * q[(3) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)];
        ad = l[((z)-1) * 4 + (3) - 1] / c * (35. / 8. * r[(z)-1 + a * ((x)-1 + ((y)-1) * s)] - 35. / 24. * r[(z + 1) - 1 + a * ((x)-1 + ((y)-1) * s)] + 21. / 40. * r[(z + 2) - 1 + a * ((x)-1 + ((y)-1) * s)] - 5. / 56. * r[(z + 3) - 1 + a * ((x)-1 + ((y)-1) * s)]);
      } else if (z == 2) {
        ab = i[((z)-1) * 4 + (2) - 1] * o[(2) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + i[((z)-1) * 4 + (3) - 1] * o[(3) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + i[((z)-1) * 4 + (4) - 1] * o[(4) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))];
        ac = i[((z)-1) * 4 + (2) - 1] * q[(2) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + i[((z)-1) * 4 + (3) - 1] * q[(3) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + i[((z)-1) * 4 + (4) - 1] * q[(4) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)];
        ad = l[((z)-1) * 4 + (3) - 1] / c * (-31. / 24. * r[(z - 1) - 1 + a * ((x)-1 + ((y)-1) * s)] + 29. / 24. * r[(z)-1 + a * ((x)-1 + ((y)-1) * s)] - 3. / 40. * r[(z + 1) - 1 + a * ((x)-1 + ((y)-1) * s)] + 1. / 168. * r[(z + 2) - 1 + a * ((x)-1 + ((y)-1) * s)]);
      }

      else {
        ab = i[((z)-1) * 4 + (2) - 1] / c * (o[(z)-1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] - o[(z + 1) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))]);
        ac = i[((z)-1) * 4 + (2) - 1] / c * (q[(z)-1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] - q[(z + 1) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)]);
        ad = l[((z)-1) * 4 + (2) - 1] / c * (r[(z - 1) - 1 + a * ((x)-1 + ((y)-1) * s)] - r[(z)-1 + a * ((x)-1 + ((y)-1) * s)]);
      }
      u[(z) + (a + 2) * ((x) + 1 + (y) * (s + 3))] =
          u[(z) + (a + 2) * ((x) + 1 + (y) * (s + 3))] +
          0.5 * (e[(f[(z) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1] + e[(f[(z) + (a + 2) * ((x + 1) - 1 + ((y)-1) * (s + 1))]) - 1]) * (g[((x)-1) * 4 + (1) - 1] * m[(z)-1 + a * ((x - 1) + ((y)-1) * (s + 3))] + g[((x)-1) * 4 + (2) - 1] * m[(z)-1 + a * ((x) + ((y)-1) * (s + 3))] + g[((x)-1) * 4 + (3) - 1] * m[(z)-1 + a * ((x + 1) + ((y)-1) * (s + 3))] + g[((x)-1) * 4 + (4) - 1] * m[(z)-1 + a * ((x + 2) + ((y)-1) * (s + 3))] +
                                                                                                                                             k[((y)-1) * 4 + (1) - 1] * n[(z)-1 + a * ((x) + 1 + ((y - 2) + 1) * (s + 3))] + k[((y)-1) * 4 + (2) - 1] * n[(z)-1 + a * ((x) + 1 + ((y - 1) + 1) * (s + 3))] + k[((y)-1) * 4 + (3) - 1] * n[(z)-1 + a * ((x) + 1 + ((y) + 1) * (s + 3))] + k[((y)-1) * 4 + (4) - 1] * n[(z)-1 + a * ((x) + 1 + ((y + 1) + 1) * (s + 3))] + ab);

      v[(z) + (a + 2) * ((x) + ((y) + 1) * (s + 3))] =
          v[(z) + (a + 2) * ((x) + ((y) + 1) * (s + 3))] +
          0.5 * (e[(f[(z) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1] + e[(f[(z) + (a + 2) * ((x)-1 + ((y + 1) - 1) * (s + 1))]) - 1]) * (j[((x)-1) * 4 + (1) - 1] * n[(z)-1 + a * ((x - 2) + 1 + ((y) + 1) * (s + 3))] + j[((x)-1) * 4 + (2) - 1] * n[(z)-1 + a * ((x - 1) + 1 + ((y) + 1) * (s + 3))] + j[((x)-1) * 4 + (3) - 1] * n[(z)-1 + a * ((x) + 1 + ((y) + 1) * (s + 3))] + j[((x)-1) * 4 + (4) - 1] * n[(z)-1 + a * ((x + 1) + 1 + ((y) + 1) * (s + 3))] +
                                                                                                                                             h[((y)-1) * 4 + (1) - 1] * p[(z)-1 + a * (((x)-1) + (y - 1) * s)] + h[((y)-1) * 4 + (2) - 1] * p[(z)-1 + a * (((x)-1) + (y)*s)] + h[((y)-1) * 4 + (3) - 1] * p[(z)-1 + a * (((x)-1) + (y + 1) * s)] + h[((y)-1) * 4 + (4) - 1] * p[(z)-1 + a * (((x)-1) + (y + 2) * s)] + ac);

      w[(z) + (a + 2) * ((x) + (y) * (s + 3))] =
          w[(z) + (a + 2) * ((x) + (y) * (s + 3))] +
          0.5 * (e[(f[(z) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1] + e[(f[(z - 1) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1]) * (j[((x)-1) * 4 + (1) - 1] * o[(z)-1 + (a + 1) * ((x - 2) + 1 + ((y)-1) * (s + 3))] + j[((x)-1) * 4 + (2) - 1] * o[(z)-1 + (a + 1) * ((x - 1) + 1 + ((y)-1) * (s + 3))] + j[((x)-1) * 4 + (3) - 1] * o[(z)-1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + j[((x)-1) * 4 + (4) - 1] * o[(z)-1 + (a + 1) * ((x + 1) + 1 + ((y)-1) * (s + 3))] +
                                                                                                                                           k[((y)-1) * 4 + (1) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y - 2) + 1) * s)] + k[((y)-1) * 4 + (2) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y - 1) + 1) * s)] + k[((y)-1) * 4 + (3) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + k[((y)-1) * 4 + (4) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y + 1) + 1) * s)] + ad);

      z = ag;

    } else {
      z = ag;
      u[(z) + (a + 2) * ((x) + 1 + (y) * (s + 3))] =
          u[(z) + (a + 2) * ((x) + 1 + (y) * (s + 3))] +
          0.5 * (e[(f[(z) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1] + e[(f[(z) + (a + 2) * ((x + 1) - 1 + ((y)-1) * (s + 1))]) - 1]) * (g[((x)-1) * 4 + (1) - 1] * m[(z)-1 + a * ((x - 1) + ((y)-1) * (s + 3))] + g[((x)-1) * 4 + (2) - 1] * m[(z)-1 + a * ((x) + ((y)-1) * (s + 3))] + g[((x)-1) * 4 + (3) - 1] * m[(z)-1 + a * ((x + 1) + ((y)-1) * (s + 3))] + g[((x)-1) * 4 + (4) - 1] * m[(z)-1 + a * ((x + 2) + ((y)-1) * (s + 3))] +
                                                                                                                                             k[((y)-1) * 4 + (1) - 1] * n[(z)-1 + a * ((x) + 1 + ((y - 2) + 1) * (s + 3))] + k[((y)-1) * 4 + (2) - 1] * n[(z)-1 + a * ((x) + 1 + ((y - 1) + 1) * (s + 3))] + k[((y)-1) * 4 + (3) - 1] * n[(z)-1 + a * ((x) + 1 + ((y) + 1) * (s + 3))] + k[((y)-1) * 4 + (4) - 1] * n[(z)-1 + a * ((x) + 1 + ((y + 1) + 1) * (s + 3))] +
                                                                                                                                             i[((z)-1) * 4 + (1) - 1] * o[(z - 1) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + i[((z)-1) * 4 + (2) - 1] * o[(z)-1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + i[((z)-1) * 4 + (3) - 1] * o[(z + 1) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + i[((z)-1) * 4 + (4) - 1] * o[(z + 2) - 1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))]);

      v[(z) + (a + 2) * ((x) + ((y) + 1) * (s + 3))] =
          v[(z) + (a + 2) * ((x) + ((y) + 1) * (s + 3))] +
          0.5 * (e[(f[(z) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1] + e[(f[(z) + (a + 2) * ((x)-1 + ((y + 1) - 1) * (s + 1))]) - 1]) *
              (j[((x)-1) * 4 + (1) - 1] * n[(z)-1 + a * ((x - 2) + 1 + ((y) + 1) * (s + 3))] + j[((x)-1) * 4 + (2) - 1] * n[(z)-1 + a * ((x - 1) + 1 + ((y) + 1) * (s + 3))] + j[((x)-1) * 4 + (3) - 1] * n[(z)-1 + a * ((x) + 1 + ((y) + 1) * (s + 3))] + j[((x)-1) * 4 + (4) - 1] * n[(z)-1 + a * ((x + 1) + 1 + ((y) + 1) * (s + 3))] + h[((y)-1) * 4 + (1) - 1] * p[(z)-1 + a * (((x)-1) + (y - 1) * s)] + h[((y)-1) * 4 + (2) - 1] * p[(z)-1 + a * (((x)-1) + (y)*s)] +
               h[((y)-1) * 4 + (3) - 1] * p[(z)-1 + a * (((x)-1) + (y + 1) * s)] + h[((y)-1) * 4 + (4) - 1] * p[(z)-1 + a * (((x)-1) + (y + 2) * s)] + i[((z)-1) * 4 + (1) - 1] * q[(z - 1) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + i[((z)-1) * 4 + (2) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + i[((z)-1) * 4 + (3) - 1] * q[(z + 1) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + i[((z)-1) * 4 + (4) - 1] * q[(z + 2) - 1 + (a + 1) * ((x)-1 + ((y) + 1) * s)]);

      w[(z) + (a + 2) * ((x) + (y) * (s + 3))] =
          w[(z) + (a + 2) * ((x) + (y) * (s + 3))] +
          0.5 * (e[(f[(z) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1] + e[(f[(z - 1) + (a + 2) * ((x)-1 + ((y)-1) * (s + 1))]) - 1]) * (j[((x)-1) * 4 + (1) - 1] * o[(z)-1 + (a + 1) * ((x - 2) + 1 + ((y)-1) * (s + 3))] + j[((x)-1) * 4 + (2) - 1] * o[(z)-1 + (a + 1) * ((x - 1) + 1 + ((y)-1) * (s + 3))] + j[((x)-1) * 4 + (3) - 1] * o[(z)-1 + (a + 1) * ((x) + 1 + ((y)-1) * (s + 3))] + j[((x)-1) * 4 + (4) - 1] * o[(z)-1 + (a + 1) * ((x + 1) + 1 + ((y)-1) * (s + 3))] +
                                                                                                                                           k[((y)-1) * 4 + (1) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y - 2) + 1) * s)] + k[((y)-1) * 4 + (2) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y - 1) + 1) * s)] + k[((y)-1) * 4 + (3) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y) + 1) * s)] + k[((y)-1) * 4 + (4) - 1] * q[(z)-1 + (a + 1) * ((x)-1 + ((y + 1) + 1) * s)] +
                                                                                                                                           l[((z)-1) * 4 + (1) - 1] * r[(z - 2) - 1 + a * ((x)-1 + ((y)-1) * s)] + l[((z)-1) * 4 + (2) - 1] * r[(z - 1) - 1 + a * ((x)-1 + ((y)-1) * s)] + l[((z)-1) * 4 + (3) - 1] * r[(z)-1 + a * ((x)-1 + ((y)-1) * s)] + l[((z)-1) * 4 + (4) - 1] * r[(z + 1) - 1 + a * ((x)-1 + ((y)-1) * s)]);
    }
  }
  return;
}

__kernel void B(float a, __global int* b, __global float* c, __global float* d, __global float* e, __global float* f, __global float* g, __global float* h, __global float* i, __global int* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, int q, int r, int s, __global float* t, __global float* u, __global float* v) {
  int w, x, y, z;

  int aa = 2, ab = b[8];
  y = get_group_id(0) * get_local_size(0) + get_local_id(0) + aa;
  z = y;
  w = get_group_id(1) * get_local_size(1) + get_local_id(1) + ab;

  if (y > b[15] || w > b[9]) {
    return;
  }
  for (x = b[2]; x <= b[3]; x++) {
    if (y == b[15]) {
      y = 1;
      t[(y) + (s + 1) * ((w) + 1 + (q + 3) * (x))] =
          t[(y) + (s + 1) * ((w) + 1 + (q + 3) * (x))] +
          0.5 * (c[(j[(y) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1] + c[(j[(y) + (s + 1) * ((w + 1) - 1 + ((x)-1) * (q + 1))]) - 1]) *
              (d[(1) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w - 1) + ((x)-1) * (q + 3))] + d[(2) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w) + ((x)-1) * (q + 3))] + d[(3) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w + 1) + ((x)-1) * (q + 3))] + d[(4) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w + 2) + ((x)-1) * (q + 3))] + h[(1) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x - 2) + 1) * (q + 3))] + h[(2) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x - 1) + 1) * (q + 3))] +
               h[(3) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x) + 1) * (q + 3))] + h[(4) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x + 1) + 1) * (q + 3))] + f[(1) - 1 + 4 * ((y)-1)] * m[(y - 1) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + f[(2) - 1 + 4 * ((y)-1)] * m[(y) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + f[(3) - 1 + 4 * ((y)-1)] * m[(y + 1) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + f[(4) - 1 + 4 * ((y)-1)] * m[(y + 2) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))]);

      u[(y) + (s + 1) * ((w) + (q + 3) * ((x) + 1))] =
          u[(y) + (s + 1) * ((w) + (q + 3) * ((x) + 1))] +
          0.5 * (c[(j[(y) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1] + c[(j[(y) + (s + 1) * ((w)-1 + ((x + 1) - 1) * (q + 1))]) - 1]) *
              (g[(1) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w - 2) + 1 + ((x) + 1) * (q + 3))] + g[(2) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w - 1) + 1 + ((x) + 1) * (q + 3))] + g[(3) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w) + 1 + ((x) + 1) * (q + 3))] + g[(4) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w + 1) + 1 + ((x) + 1) * (q + 3))] + e[(1) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x - 1) * q)] + e[(2) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x)*q)] +
               e[(3) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x + 1) * q)] + e[(4) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x + 2) * q)] + f[(1) - 1 + 4 * ((y)-1)] * o[(y - 1) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + f[(2) - 1 + 4 * ((y)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + f[(3) - 1 + 4 * ((y)-1)] * o[(y + 1) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + f[(4) - 1 + 4 * ((y)-1)] * o[(y + 2) + (s + 1) * ((w)-1 + ((x) + 1) * q)]);

      v[(y) + (s + 1) * ((w) + (q + 3) * (x))] = v[(y) + (s + 1) * ((w) + (q + 3) * (x))] +
                                                 0.5 * (c[(j[(y) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1] + c[(j[(y - 1) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1]) *
                                                     (g[(1) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w - 2) + 1 + ((x)-1) * (q + 3))] + g[(2) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w - 1) + 1 + ((x)-1) * (q + 3))] + g[(3) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + g[(4) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w + 1) + 1 + ((x)-1) * (q + 3))] + h[(1) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x - 2) + 1) * q)] +
                                                      h[(2) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x - 1) + 1) * q)] + h[(3) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + h[(4) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x + 1) + 1) * q)] + i[(2) - 1 + 4 * ((y)-1)] / a * (p[(y - 1) + (s + 1) * ((w)-1 + ((x)-1) * q)] - p[(y) + (s + 1) * ((w)-1 + ((x)-1) * q)]));
      y = z;
    }
    t[(y) + (s + 1) * ((w) + 1 + (q + 3) * (x))] =
        t[(y) + (s + 1) * ((w) + 1 + (q + 3) * (x))] +
        0.5 * (c[(j[(y) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1] + c[(j[(y) + (s + 1) * ((w + 1) - 1 + ((x)-1) * (q + 1))]) - 1]) *
            (d[(1) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w - 1) + ((x)-1) * (q + 3))] + d[(2) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w) + ((x)-1) * (q + 3))] + d[(3) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w + 1) + ((x)-1) * (q + 3))] + d[(4) - 1 + 4 * ((w)-1)] * k[(y)-1 + s * ((w + 2) + ((x)-1) * (q + 3))] + h[(1) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x - 2) + 1) * (q + 3))] + h[(2) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x - 1) + 1) * (q + 3))] +
             h[(3) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x) + 1) * (q + 3))] + h[(4) - 1 + 4 * ((x)-1)] * l[(y)-1 + s * ((w) + 1 + ((x + 1) + 1) * (q + 3))] + f[(1) - 1 + 4 * ((y)-1)] * m[(y - 1) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + f[(2) - 1 + 4 * ((y)-1)] * m[(y) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + f[(3) - 1 + 4 * ((y)-1)] * m[(y + 1) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + f[(4) - 1 + 4 * ((y)-1)] * m[(y + 2) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))]);

    u[(y) + (s + 1) * ((w) + (q + 3) * ((x) + 1))] = u[(y) + (s + 1) * ((w) + (q + 3) * ((x) + 1))] +
                                                     0.5 * (c[(j[(y) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1] + c[(j[(y) + (s + 1) * ((w)-1 + ((x + 1) - 1) * (q + 1))]) - 1]) * (g[(1) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w - 2) + 1 + ((x) + 1) * (q + 3))] + g[(2) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w - 1) + 1 + ((x) + 1) * (q + 3))] + g[(3) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w) + 1 + ((x) + 1) * (q + 3))] + g[(4) - 1 + 4 * ((w)-1)] * l[(y)-1 + s * ((w + 1) + 1 + ((x) + 1) * (q + 3))] +
                                                                                                                                                                                        e[(1) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x - 1) * q)] + e[(2) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x)*q)] + e[(3) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x + 1) * q)] + e[(4) - 1 + 4 * ((x)-1)] * n[(y)-1 + s * (((w)-1) + (x + 2) * q)] +
                                                                                                                                                                                        f[(1) - 1 + 4 * ((y)-1)] * o[(y - 1) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + f[(2) - 1 + 4 * ((y)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + f[(3) - 1 + 4 * ((y)-1)] * o[(y + 1) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + f[(4) - 1 + 4 * ((y)-1)] * o[(y + 2) + (s + 1) * ((w)-1 + ((x) + 1) * q)]);

    v[(y) + (s + 1) * ((w) + (q + 3) * (x))] = v[(y) + (s + 1) * ((w) + (q + 3) * (x))] +
                                               0.5 * (c[(j[(y) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1] + c[(j[(y - 1) + (s + 1) * ((w)-1 + ((x)-1) * (q + 1))]) - 1]) * (g[(1) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w - 2) + 1 + ((x)-1) * (q + 3))] + g[(2) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w - 1) + 1 + ((x)-1) * (q + 3))] + g[(3) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w) + 1 + ((x)-1) * (q + 3))] + g[(4) - 1 + 4 * ((w)-1)] * m[(y) + (s + 1) * ((w + 1) + 1 + ((x)-1) * (q + 3))] +
                                                                                                                                                                                h[(1) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x - 2) + 1) * q)] + h[(2) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x - 1) + 1) * q)] + h[(3) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x) + 1) * q)] + h[(4) - 1 + 4 * ((x)-1)] * o[(y) + (s + 1) * ((w)-1 + ((x + 1) + 1) * q)] +
                                                                                                                                                                                i[(1) - 1 + 4 * ((y)-1)] * p[(y - 2) + (s + 1) * ((w)-1 + ((x)-1) * q)] + i[(2) - 1 + 4 * ((y)-1)] * p[(y - 1) + (s + 1) * ((w)-1 + ((x)-1) * q)] + i[(3) - 1 + 4 * ((y)-1)] * p[(y) + (s + 1) * ((w)-1 + ((x)-1) * q)] + i[(4) - 1 + 4 * ((y)-1)] * p[(y + 1) + (s + 1) * ((w)-1 + ((x)-1) * q)]);
  }
  return;
}

__kernel void C(float a, int b, int c, __global int* d, __global float* e, __global float* f, __global float* g, __global float* h, __global int* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, int v, int w, int x, int y, int z, __global float* aa, __global float* ab, __global float* ac, __global float* ad,
                __global float* ae, __global float* af) {
  int ag, ah, ai, aj, ak, al;
  float am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, ba, bb, bc, bd, be, bf;

  int bg = d[6 + 4 * aj];
  int bh = 1;
  ai = get_group_id(0) * get_local_size(0) + get_local_id(0) + bh;
  int bi = d[0];
  ah = get_group_id(1) * get_local_size(1) + get_local_id(1) + bi;

  int bj = (c - b + 1) * w;

  if (b > c) {
    return;
  }

  if (ah > d[5] || ai > z) {
    return;
  }
  ak = 0;

  for (aj = b; aj <= c; aj++) {
    al = 0;
    for (ag = d[6 + 4 * aj]; ag <= d[7 + 4 * aj]; ag++) {
      al = al + 1;
      ak = ak + 1;
      am = f[(al)-1 + (aj)*v];
      an = g[(al)-1 + (aj)*v];

      ao = h[(ai)-1 + (z + 1) * ((ah)-1 + ((aj)-b) * y)];
      ap = 1. / (1. + am * ao);
      aq = ap * 2. - 1.;
      ar = 1. / (1. + an * ao);
      as = ar * 2. - 1.;
      at = e[(i[(ai) + (z + 2) * ((ag)-1 + ((ah)-1) * (x + 1))]) - 1];
      au = 0.5 * (at + e[(i[(ai) + (z + 2) * ((ag + 1) - 1 + ((ah)-1) * (x + 1))]) - 1]);
      av = 0.5 * (at + e[(i[(ai) + (z + 2) * ((ag)-1 + ((ah + 1) - 1) * (x + 1))]) - 1]);
      aw = 0.5 * (at + e[(i[(ai - 1) + (z + 2) * ((ag)-1 + ((ah)-1) * (x + 1))]) - 1]);
      ax = aa[(ai) + (z + 2) * ((ag) + 1 + (ah) * (x + 3))] - ad[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))];
      ay = ab[(ai) + (z + 2) * ((ag) + ((ah) + 1) * (x + 3))] - ae[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))];
      az = ac[(ai) + (z + 2) * ((ag) + (ah) * (x + 3))] - af[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))];
      if (ah > d[1] && ah < d[4]) {
        bd = n[((ah)-1) * 4 + (1) - 1] * q[(ai)-1 + z * ((ag) + 1 + ((ah - 2) + 1) * (x + 3))] + n[((ah)-1) * 4 + (2) - 1] * q[(ai)-1 + z * ((ag) + 1 + ((ah - 1) + 1) * (x + 3))] + n[((ah)-1) * 4 + (3) - 1] * q[(ai)-1 + z * ((ag) + 1 + ((ah) + 1) * (x + 3))] + n[((ah)-1) * 4 + (4) - 1] * q[(ai)-1 + z * ((ag) + 1 + ((ah + 1) + 1) * (x + 3))];
        be = k[((ah)-1) * 4 + (1) - 1] * s[(ai)-1 + z * (((ag)-1) + (ah - 1) * x)] + k[((ah)-1) * 4 + (2) - 1] * s[(ai)-1 + z * (((ag)-1) + (ah)*x)] + k[((ah)-1) * 4 + (3) - 1] * s[(ai)-1 + z * (((ag)-1) + (ah + 1) * x)] + k[((ah)-1) * 4 + (4) - 1] * s[(ai)-1 + z * (((ag)-1) + (ah + 2) * x)];
        bf = n[((ah)-1) * 4 + (1) - 1] * t[(ai)-1 + (z + 1) * ((ag)-1 + ((ah - 2) + 1) * x)] + n[((ah)-1) * 4 + (2) - 1] * t[(ai)-1 + (z + 1) * ((ag)-1 + ((ah - 1) + 1) * x)] + n[((ah)-1) * 4 + (3) - 1] * t[(ai)-1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] + n[((ah)-1) * 4 + (4) - 1] * t[(ai)-1 + (z + 1) * ((ag)-1 + ((ah + 1) + 1) * x)];
        if (ai == 1) {
          ba = (l[((ai)-1) * 4 + (3) - 1] - l[((ai)-1) * 4 + (1) - 1]) * r[(2) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))] + l[((ai)-1) * 4 + (4) - 1] * r[(3) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))];
          bb = (l[((ai)-1) * 4 + (3) - 1] - l[((ai)-1) * 4 + (1) - 1]) * t[(2) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] + l[((ai)-1) * 4 + (4) - 1] * t[(3) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)];
          bc = o[((ai)-1) * 4 + (3) - 1] / a * (35. / 8. * u[(ai)-1 + z * ((ag)-1 + ((ah)-1) * x)] - 35. / 24. * u[(ai + 1) - 1 + z * ((ag)-1 + ((ah)-1) * x)] + 21. / 40. * u[(ai + 2) - 1 + z * ((ag)-1 + ((ah)-1) * x)] - 5. / 56. * u[(ai + 3) - 1 + z * ((ag)-1 + ((ah)-1) * x)]);
        } else if (ai == 2) {
          ba = l[((ai)-1) * 4 + (2) - 1] * r[(ai)-1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))] + l[((ai)-1) * 4 + (3) - 1] * r[(ai + 1) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))] + l[((ai)-1) * 4 + (4) - 1] * r[(ai + 2) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))];
          bb = l[((ai)-1) * 4 + (2) - 1] * t[(ai)-1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] + l[((ai)-1) * 4 + (3) - 1] * t[(ai + 1) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] + l[((ai)-1) * 4 + (4) - 1] * t[(ai + 2) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)];
          bc = o[((ai)-1) * 4 + (3) - 1] / a * (-31. / 24. * u[(ai - 1) - 1 + z * ((ag)-1 + ((ah)-1) * x)] + 29. / 24. * u[(ai)-1 + z * ((ag)-1 + ((ah)-1) * x)] - 3. / 40. * u[(ai + 1) - 1 + z * ((ag)-1 + ((ah)-1) * x)] + 1. / 168. * u[(ai + 2) - 1 + z * ((ag)-1 + ((ah)-1) * x)]);
        } else if (ai == z) {
          ba = l[((ai)-1) * 4 + (2) - 1] / a * (r[(ai)-1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))] - r[(ai + 1) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))]);
          bb = l[((ai)-1) * 4 + (2) - 1] / a * (t[(ai)-1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] - t[(ai + 1) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)]);
          bc = o[((ai)-1) * 4 + (2) - 1] / a * (u[(ai - 1) - 1 + z * ((ag)-1 + ((ah)-1) * x)] - u[(ai)-1 + z * ((ag)-1 + ((ah)-1) * x)]);
        } else {
          ba = l[((ai)-1) * 4 + (1) - 1] * r[(ai - 1) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))] + l[((ai)-1) * 4 + (2) - 1] * r[(ai)-1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))] + l[((ai)-1) * 4 + (3) - 1] * r[(ai + 1) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))] + l[((ai)-1) * 4 + (4) - 1] * r[(ai + 2) - 1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))];
          bb = l[((ai)-1) * 4 + (1) - 1] * t[(ai - 1) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] + l[((ai)-1) * 4 + (2) - 1] * t[(ai)-1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] + l[((ai)-1) * 4 + (3) - 1] * t[(ai + 1) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)] + l[((ai)-1) * 4 + (4) - 1] * t[(ai + 2) - 1 + (z + 1) * ((ag)-1 + ((ah) + 1) * x)];
          bc = o[((ai)-1) * 4 + (1) - 1] * u[(ai - 2) - 1 + z * ((ag)-1 + ((ah)-1) * x)] + o[((ai)-1) * 4 + (2) - 1] * u[(ai - 1) - 1 + z * ((ag)-1 + ((ah)-1) * x)] + o[((ai)-1) * 4 + (3) - 1] * u[(ai)-1 + z * ((ag)-1 + ((ah)-1) * x)] + o[((ai)-1) * 4 + (4) - 1] * u[(ai + 1) - 1 + z * ((ag)-1 + ((ah)-1) * x)];
        }

        ax = ax + (bd + ba) * au;
        ay = ay + (be + bb) * av;
        az = az + (bf + bc) * aw;
      }

      ad[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))] = ad[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))] * aq + ap * au * j[((ag)-1) * 4 + (2) - 1] / a * (p[(ai)-1 + z * ((ag) + ((ah)-1) * (x + 3))] - p[(ai)-1 + z * ((ag + 1) + ((ah)-1) * (x + 3))]);
      aa[(ai) + (z + 2) * ((ag) + 1 + (ah) * (x + 3))] = ax + ad[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))];

      ae[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))] = ae[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))] * as + ar * av * m[((ag)-1) * 4 + (2) - 1] / a * (q[(ai)-1 + z * ((ag - 1) + 1 + ((ah) + 1) * (x + 3))] - q[(ai)-1 + z * ((ag) + 1 + ((ah) + 1) * (x + 3))]);
      ab[(ai) + (z + 2) * ((ag) + ((ah) + 1) * (x + 3))] = ay + ae[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))];

      af[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))] = af[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))] * as + ar * aw * m[((ag)-1) * 4 + (2) - 1] / a * (r[(ai)-1 + (z + 1) * ((ag - 1) + 1 + ((ah)-1) * (x + 3))] - r[(ai)-1 + (z + 1) * ((ag) + 1 + ((ah)-1) * (x + 3))]);
      ac[(ai) + (z + 2) * ((ag) + (ah) * (x + 3))] = az + af[(ai)-1 + z * ((ak)-1 + bj * ((ah)-1))];
    }
  }
  return;
}

__kernel void D(int a, float b, int c, int d, __global int* e, __global float* f, __global float* g, __global float* h, __global int* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, int w, int x, int y, int z, __global float* aa, __global float* ab, __global float* ac, __global float* ad,
                __global float* ae, __global float* af) {
  int ag, ah, ai, aj, ak, al, am;
  float an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, ba, bb, bc, bd;

  if (c > d)
    return;

  int be = 1;
  ai = get_local_size(0) * get_group_id(0) + get_local_id(0) + be;
  int bf = e[6];
  ag = get_local_size(1) * get_group_id(1) + get_local_id(1) + bf;

  if (ai > a || ag > e[11]) {
    return;
  }

  am = 0;
  for (ai = c; ai < aj; ai++) {
    for (ah = e[4 * ai]; ah <= e[1 + 4 * ai]; ah++) {
      am++;
    }
  }

  ak = am;
  ak = 0;
  for (aj = c; aj <= d; aj++) {
    al = 0;
    int bg = e[4 * aj];
    for (ah = e[4 * aj]; ah <= e[1 + 4 * aj]; ah++) {
      al = al + 1;
      ak = ak + 1;
      an = g[(al)-1 + (aj)*w];
      ao = h[(al)-1 + (aj)*w];

      ap = j[(ai)-1 + (a + 1) * ((ag)-1 + ((aj)-c) * y)];
      aq = 1. / (1. + an * ap);
      ar = aq * 2. - 1.;
      as = 1. / (1. + ao * ap);
      at = as * 2. - 1.;
      au = f[(i[(ai) + (a + 2) * ((ag)-1 + ((ah)-1) * (y + 1))]) - 1];
      av = 0.5 * (au + f[(i[(ai) + (a + 2) * ((ag + 1) - 1 + ((ah)-1) * (y + 1))]) - 1]);
      aw = 0.5 * (au + f[(i[(ai) + (a + 2) * ((ag)-1 + ((ah + 1) - 1) * (y + 1))]) - 1]);
      ax = 0.5 * (au + f[(i[(ai - 1) + (a + 2) * ((ag)-1 + ((ah)-1) * (y + 1))]) - 1]);
      if (ai == 1) {
        ay = (m[((ai)-1) * 4 + (3) - 1] - m[((ai)-1) * 4 + (1) - 1]) * s[(2) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] + m[((ai)-1) * 4 + (4) - 1] * s[(3) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))];
        az = (m[((ai)-1) * 4 + (3) - 1] - m[((ai)-1) * 4 + (1) - 1]) * u[(2) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)] + m[((ai)-1) * 4 + (4) - 1] * u[(3) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)];
        ba = p[((ai)-1) * 4 + (3) - 1] / b * (35. / 8. * v[(ai)-1 + a * ((ag)-1 + ((ah)-1) * y)] - 35. / 24. * v[(ai + 1) - 1 + a * ((ag)-1 + ((ah)-1) * y)] + 21. / 40. * v[(ai + 2) - 1 + a * ((ag)-1 + ((ah)-1) * y)] - 5. / 56. * v[(ai + 3) - 1 + a * ((ag)-1 + ((ah)-1) * y)]);
      } else if (ai == 2) {
        ay = m[((ai)-1) * 4 + (2) - 1] * s[(ai)-1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] + m[((ai)-1) * 4 + (3) - 1] * s[(ai + 1) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] + m[((ai)-1) * 4 + (4) - 1] * s[(ai + 2) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))];
        az = m[((ai)-1) * 4 + (2) - 1] * u[(ai)-1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)] + m[((ai)-1) * 4 + (3) - 1] * u[(ai + 1) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)] + m[((ai)-1) * 4 + (4) - 1] * u[(ai + 2) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)];
        ba = p[((ai)-1) * 4 + (3) - 1] / b * (-31. / 24. * v[(ai - 1) - 1 + a * ((ag)-1 + ((ah)-1) * y)] + 29. / 24. * v[(ai)-1 + a * ((ag)-1 + ((ah)-1) * y)] - 3. / 40. * v[(ai + 1) - 1 + a * ((ag)-1 + ((ah)-1) * y)] + 1. / 168. * v[(ai + 2) - 1 + a * ((ag)-1 + ((ah)-1) * y)]);
      } else if (ai == a) {
        ay = m[((ai)-1) * 4 + (2) - 1] / b * (s[(ai)-1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] - s[(ai + 1) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))]);
        az = m[((ai)-1) * 4 + (2) - 1] / b * (u[(ai)-1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)] - u[(ai + 1) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)]);
        ba = p[((ai)-1) * 4 + (2) - 1] / b * (v[(ai - 1) - 1 + a * ((ag)-1 + ((ah)-1) * y)] - v[(ai)-1 + a * ((ag)-1 + ((ah)-1) * y)]);
      } else {
        ay = m[((ai)-1) * 4 + (1) - 1] * s[(ai - 1) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] + m[((ai)-1) * 4 + (2) - 1] * s[(ai)-1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] + m[((ai)-1) * 4 + (3) - 1] * s[(ai + 1) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] + m[((ai)-1) * 4 + (4) - 1] * s[(ai + 2) - 1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))];
        az = m[((ai)-1) * 4 + (1) - 1] * u[(ai - 1) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)] + m[((ai)-1) * 4 + (2) - 1] * u[(ai)-1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)] + m[((ai)-1) * 4 + (3) - 1] * u[(ai + 1) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)] + m[((ai)-1) * 4 + (4) - 1] * u[(ai + 2) - 1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)];
        ba = p[((ai)-1) * 4 + (1) - 1] * v[(ai - 2) - 1 + a * ((ag)-1 + ((ah)-1) * y)] + p[((ai)-1) * 4 + (2) - 1] * v[(ai - 1) - 1 + a * ((ag)-1 + ((ah)-1) * y)] + p[((ai)-1) * 4 + (3) - 1] * v[(ai)-1 + a * ((ag)-1 + ((ah)-1) * y)] + p[((ai)-1) * 4 + (4) - 1] * v[(ai + 1) - 1 + a * ((ag)-1 + ((ah)-1) * y)];
      }
      bb = aa[(ai) + (a + 2) * ((ag) + 1 + (ah) * (y + 3))] - ad[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] + ay * av;
      bc = ab[(ai) + (a + 2) * ((ag) + ((ah) + 1) * (y + 3))] - ae[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] + az * aw;
      bd = ac[(ai) + (a + 2) * ((ag) + (ah) * (y + 3))] - af[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] + ba * ax;
      if (ag > e[7] && ag < e[10]) {
        bb = bb + av * (k[((ag)-1) * 4 + (1) - 1] * q[(ai)-1 + a * ((ag - 1) + ((ah)-1) * (y + 3))] + k[((ag)-1) * 4 + (2) - 1] * q[(ai)-1 + a * ((ag) + ((ah)-1) * (y + 3))] + k[((ag)-1) * 4 + (3) - 1] * q[(ai)-1 + a * ((ag + 1) + ((ah)-1) * (y + 3))] + k[((ag)-1) * 4 + (4) - 1] * q[(ai)-1 + a * ((ag + 2) + ((ah)-1) * (y + 3))]);
        bc = bc + aw * (n[((ag)-1) * 4 + (1) - 1] * r[(ai)-1 + a * ((ag - 2) + 1 + ((ah) + 1) * (y + 3))] + n[((ag)-1) * 4 + (2) - 1] * r[(ai)-1 + a * ((ag - 1) + 1 + ((ah) + 1) * (y + 3))] + n[((ag)-1) * 4 + (3) - 1] * r[(ai)-1 + a * ((ag) + 1 + ((ah) + 1) * (y + 3))] + n[((ag)-1) * 4 + (4) - 1] * r[(ai)-1 + a * ((ag + 1) + 1 + ((ah) + 1) * (y + 3))]);
        bd = bd + ax * (n[((ag)-1) * 4 + (1) - 1] * s[(ai)-1 + (a + 1) * ((ag - 2) + 1 + ((ah)-1) * (y + 3))] + n[((ag)-1) * 4 + (2) - 1] * s[(ai)-1 + (a + 1) * ((ag - 1) + 1 + ((ah)-1) * (y + 3))] + n[((ag)-1) * 4 + (3) - 1] * s[(ai)-1 + (a + 1) * ((ag) + 1 + ((ah)-1) * (y + 3))] + n[((ag)-1) * 4 + (4) - 1] * s[(ai)-1 + (a + 1) * ((ag + 1) + 1 + ((ah)-1) * (y + 3))]);
      }

      ad[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] = ad[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] * at + as * av * o[((ah)-1) * 4 + (2) - 1] / b * (r[(ai)-1 + a * ((ag) + 1 + ((ah - 1) + 1) * (y + 3))] - r[(ai)-1 + a * ((ag) + 1 + ((ah) + 1) * (y + 3))]);
      aa[(ai) + (a + 2) * ((ag) + 1 + (ah) * (y + 3))] = bb + ad[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))];

      ae[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] = ae[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] * ar + aq * aw * l[((ah)-1) * 4 + (2) - 1] / b * (t[(ai)-1 + a * (((ag)-1) + (ah)*y)] - t[(ai)-1 + a * (((ag)-1) + (ah + 1) * y)]);
      ab[(ai) + (a + 2) * ((ag) + ((ah) + 1) * (y + 3))] = bc + ae[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))];

      af[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] = af[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))] * at + as * ax * o[((ah)-1) * 4 + (2) - 1] / b * (u[(ai)-1 + (a + 1) * ((ag)-1 + ((ah - 1) + 1) * y)] - u[(ai)-1 + (a + 1) * ((ag)-1 + ((ah) + 1) * y)]);
      ac[(ai) + (a + 2) * ((ag) + (ah) * (y + 3))] = bd + af[(ai)-1 + a * ((ag)-1 + y * ((ak)-1))];
    }
  }
  return;
}

__kernel void E(int a, float b, int c, int d, __global int* e, __global float* f, __global float* g, __global float* h, __global float* i, __global int* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, int w, int x, int y, int z, int aa, __global float* ab, __global float* ac, __global float* ad, __global float* ae,
                __global float* af, __global float* ag) {
  int ah, ai, aj, ak, al, am;
  float an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, ba, bb, bc, bd, be, bf, bg;

  int bh = (d - c + 1) * x;

  if (c > d)
    return;

  int bi = 1;
  aj = get_group_id(0) * get_local_size(0) + get_local_id(0) + bi;
  int bj = e[0];
  ai = get_group_id(1) * get_local_size(1) + get_local_id(1) + bj;

  if (ai > e[5] || aj > a) {
    return;
  }
  al = 0;
  for (ak = c; ak <= d; ak++) {
    am = 0;

    int bk = e[6 + 4 * ak];
    for (ah = e[6 + 4 * ak]; ah <= e[7 + 4 * ak]; ah++) {
      am = am + 1;
      al = al + 1;
      an = f[(am)-1 + (ak)*w];
      ao = g[(am)-1 + (ak)*w];
      ap = i[(aj)-1 + aa * ((ai)-1 + ((ak)-c) * z)];
      aq = 1. / (1. + an * ap);
      ar = aq * 2. - 1.;
      as = 1. / (1. + ao * ap);
      at = as * 2. - 1.;
      au = h[(j[(aj) + (aa + 1) * ((ah)-1 + ((ai)-1) * (y + 1))]) - 1];
      av = 0.5 * (au + h[(j[(aj) + (aa + 1) * ((ah + 1) - 1 + ((ai)-1) * (y + 1))]) - 1]);
      aw = 0.5 * (au + h[(j[(aj) + (aa + 1) * ((ah)-1 + ((ai + 1) - 1) * (y + 1))]) - 1]);
      ax = 0.5 * (au + h[(j[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * (y + 1))]) - 1]);
      ay = ab[(aj) + (aa + 1) * ((ah) + 1 + (y + 3) * (ai))] - ae[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))];
      az = ac[(aj) + (aa + 1) * ((ah) + (y + 3) * ((ai) + 1))] - af[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))];
      ba = ad[(aj) + (aa + 1) * ((ah) + (y + 3) * (ai))] - ag[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))];

      if (ai > e[1] && ai < e[4]) {
        bb = o[(1) - 1 + 4 * ((ai)-1)] * r[(aj)-1 + aa * ((ah) + 1 + ((ai - 2) + 1) * (y + 3))] + o[(2) - 1 + 4 * ((ai)-1)] * r[(aj)-1 + aa * ((ah) + 1 + ((ai - 1) + 1) * (y + 3))] + o[(3) - 1 + 4 * ((ai)-1)] * r[(aj)-1 + aa * ((ah) + 1 + ((ai) + 1) * (y + 3))] + o[(4) - 1 + 4 * ((ai)-1)] * r[(aj)-1 + aa * ((ah) + 1 + ((ai + 1) + 1) * (y + 3))];
        bc = l[(1) - 1 + 4 * ((ai)-1)] * t[(aj)-1 + aa * (((ah)-1) + (ai - 1) * y)] + l[(2) - 1 + 4 * ((ai)-1)] * t[(aj)-1 + aa * (((ah)-1) + (ai)*y)] + l[(3) - 1 + 4 * ((ai)-1)] * t[(aj)-1 + aa * (((ah)-1) + (ai + 1) * y)] + l[(4) - 1 + 4 * ((ai)-1)] * t[(aj)-1 + aa * (((ah)-1) + (ai + 2) * y)];
        bd = o[(1) - 1 + 4 * ((ai)-1)] * u[(aj) + (aa + 1) * ((ah)-1 + ((ai - 2) + 1) * y)] + o[(2) - 1 + 4 * ((ai)-1)] * u[(aj) + (aa + 1) * ((ah)-1 + ((ai - 1) + 1) * y)] + o[(3) - 1 + 4 * ((ai)-1)] * u[(aj) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] + o[(4) - 1 + 4 * ((ai)-1)] * u[(aj) + (aa + 1) * ((ah)-1 + ((ai + 1) + 1) * y)];

        if (aj == 1) {
          be = m[(2) - 1 + 4 * ((aj)-1)] / b * (s[(aj) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] - s[(aj + 1) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))]);
          bf = m[(2) - 1 + 4 * ((aj)-1)] / b * (u[(aj) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] - u[(aj + 1) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)]);
          bg = p[(2) - 1 + 4 * ((aj)-1)] / b * (v[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] - v[(aj) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)]);
        }

        else if (aj < e[16]) {
          be = m[(1) - 1 + 4 * ((aj)-1)] * s[(aj - 1) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + m[(2) - 1 + 4 * ((aj)-1)] * s[(aj) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + m[(3) - 1 + 4 * ((aj)-1)] * s[(aj + 1) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + m[(4) - 1 + 4 * ((aj)-1)] * s[(aj + 2) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))];
          bf = m[(1) - 1 + 4 * ((aj)-1)] * u[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] + m[(2) - 1 + 4 * ((aj)-1)] * u[(aj) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] + m[(3) - 1 + 4 * ((aj)-1)] * u[(aj + 1) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] + m[(4) - 1 + 4 * ((aj)-1)] * u[(aj + 2) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)];
          bg = p[(1) - 1 + 4 * ((aj)-1)] * v[(aj - 2) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] + p[(2) - 1 + 4 * ((aj)-1)] * v[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] + p[(3) - 1 + 4 * ((aj)-1)] * v[(aj) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] + p[(4) - 1 + 4 * ((aj)-1)] * v[(aj + 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)];
        } else {
          be = 0.0;
          bf = 0.0;
          bg = 0.0;
        }
        ay = ay + (bb + be) * av;
        az = az + (bc + bf) * aw;
        ba = ba + (bd + bg) * ax;
      }

      ae[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))] = ae[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))] * ar + aq * av * k[(2) - 1 + 4 * ((ah)-1)] / b * (q[(aj)-1 + aa * ((ah) + ((ai)-1) * (y + 3))] - q[(aj)-1 + aa * ((ah + 1) + ((ai)-1) * (y + 3))]);
      ab[(aj) + (aa + 1) * ((ah) + 1 + (y + 3) * (ai))] = ay + ae[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))];

      af[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))] = af[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))] * at + as * aw * n[(2) - 1 + 4 * ((ah)-1)] / b * (r[(aj)-1 + aa * ((ah - 1) + 1 + ((ai) + 1) * (y + 3))] - r[(aj)-1 + aa * ((ah) + 1 + ((ai) + 1) * (y + 3))]);
      ac[(aj) + (aa + 1) * ((ah) + (y + 3) * ((ai) + 1))] = az + af[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))];

      ag[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))] = ag[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))] * at + as * ax * n[(2) - 1 + 4 * ((ah)-1)] / b * (s[(aj) + (aa + 1) * ((ah - 1) + 1 + ((ai)-1) * (y + 3))] - s[(aj) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))]);
      ad[(aj) + (aa + 1) * ((ah) + (y + 3) * (ai))] = ba + ag[(aj)-1 + aa * ((al)-1 + bh * ((ai)-1))];
    }
  }
  return;
}

__kernel void F(int a, float b, int c, int d, __global int* e, __global float* f, __global float* g, __global float* h, __global float* i, __global int* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, int w, int x, int y, int z, int aa, __global float* ab, __global float* ac, __global float* ad, __global float* ae,
                __global float* af, __global float* ag) {
  int ah, ai, aj, ak, al, am, an;
  float ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, ba, bb, bc, bd, be;

  if (c > d) {
    return;
  }

  int bf = 1;
  aj = get_group_id(0) * get_local_size(0) + get_local_id(0) + bf;
  int bg = e[6];
  ah = get_group_id(1) * get_local_size(1) + get_local_id(1) + bg;

  if (aj > a || ah > e[11]) {
    return;
  }
  al = 0;
  for (ak = c; ak <= d; ak++) {
    am = 0;
    int bh = e[4 * ak];
    for (ai = e[4 * ak]; ai <= e[1 + 4 * ak]; ai++) {
      am = am + 1;
      al = al + 1;
      ao = f[(am)-1 + (ak)*w];
      ap = g[(am)-1 + (ak)*w];
      aq = i[(aj)-1 + aa * ((ah)-1 + ((ak)-c) * y)];
      ar = 1. / (1. + ao * aq);
      as = ar * 2. - 1.0;
      at = 1. / (1. + ap * aq);
      au = at * 2. - 1.;
      av = h[(j[(aj) + (aa + 1) * ((ah)-1 + ((ai)-1) * (y + 1))]) - 1];
      aw = 0.5 * (av + h[(j[(aj) + (aa + 1) * ((ah + 1) - 1 + ((ai)-1) * (y + 1))]) - 1]);
      ax = 0.5 * (av + h[(j[(aj) + (aa + 1) * ((ah)-1 + ((ai + 1) - 1) * (y + 1))]) - 1]);
      ay = 0.5 * (av + h[(j[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * (y + 1))]) - 1]);
      az = ab[(aj) + (aa + 1) * ((ah) + 1 + (y + 3) * (ai))] - ae[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))];
      ba = ac[(aj) + (aa + 1) * ((ah) + (y + 3) * ((ai) + 1))] - af[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))];
      bb = ad[(aj) + (aa + 1) * ((ah) + (y + 3) * (ai))] - ag[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))];

      if (aj < e[16]) {
        if (aj > 1) {
          bc = m[(1) - 1 + 4 * ((aj)-1)] * s[(aj - 1) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + m[(2) - 1 + 4 * ((aj)-1)] * s[(aj) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + m[(3) - 1 + 4 * ((aj)-1)] * s[(aj + 1) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + m[(4) - 1 + 4 * ((aj)-1)] * s[(aj + 2) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))];
          bd = m[(1) - 1 + 4 * ((aj)-1)] * u[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] + m[(2) - 1 + 4 * ((aj)-1)] * u[(aj) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] + m[(3) - 1 + 4 * ((aj)-1)] * u[(aj + 1) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] + m[(4) - 1 + 4 * ((aj)-1)] * u[(aj + 2) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)];
          be = p[(1) - 1 + 4 * ((aj)-1)] * v[(aj - 2) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] + p[(2) - 1 + 4 * ((aj)-1)] * v[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] + p[(3) - 1 + 4 * ((aj)-1)] * v[(aj) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] + p[(4) - 1 + 4 * ((aj)-1)] * v[(aj + 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)];
        } else {
          bc = m[(2) - 1 + 4 * ((aj)-1)] / b * (s[(aj) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] - s[(aj + 1) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))]);
          bd = m[(2) - 1 + 4 * ((aj)-1)] / b * (u[(aj) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)] - u[(aj + 1) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)]);
          be = p[(2) - 1 + 4 * ((aj)-1)] / b * (v[(aj - 1) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)] - v[(aj) + (aa + 1) * ((ah)-1 + ((ai)-1) * y)]);
        }

        if (ah > e[7] && ah < e[10]) {
          az = az + aw * (bc + k[(1) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah - 1) + ((ai)-1) * (y + 3))] + k[(2) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah) + ((ai)-1) * (y + 3))] + k[(3) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah + 1) + ((ai)-1) * (y + 3))] + k[(4) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah + 2) + ((ai)-1) * (y + 3))]);

          ba = ba + ax * (bd + n[(1) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah - 2) + 1 + ((ai) + 1) * (y + 3))] + n[(2) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah - 1) + 1 + ((ai) + 1) * (y + 3))] + n[(3) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah) + 1 + ((ai) + 1) * (y + 3))] + n[(4) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah + 1) + 1 + ((ai) + 1) * (y + 3))]);

          bb = bb + ay * (be + n[(1) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah - 2) + 1 + ((ai)-1) * (y + 3))] + n[(2) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah - 1) + 1 + ((ai)-1) * (y + 3))] + n[(3) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + n[(4) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah + 1) + 1 + ((ai)-1) * (y + 3))]);
        } else {
          az = az + aw * bc;
          ba = ba + ax * bd;
          bb = bb + ay * be;
        }
      } else {
        if (ah > e[7] && ah < e[10]) {
          az = az + aw * (k[(1) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah - 1) + ((ai)-1) * (y + 3))] + k[(2) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah) + ((ai)-1) * (y + 3))] + k[(3) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah + 1) + ((ai)-1) * (y + 3))] + k[(4) - 1 + 4 * ((ah)-1)] * q[(aj)-1 + aa * ((ah + 2) + ((ai)-1) * (y + 3))]);

          ba = ba + ax * (n[(1) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah - 2) + 1 + ((ai) + 1) * (y + 3))] + n[(2) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah - 1) + 1 + ((ai) + 1) * (y + 3))] + n[(3) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah) + 1 + ((ai) + 1) * (y + 3))] + n[(4) - 1 + 4 * ((ah)-1)] * r[(aj)-1 + aa * ((ah + 1) + 1 + ((ai) + 1) * (y + 3))]);

          bb = bb + ay * (n[(1) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah - 2) + 1 + ((ai)-1) * (y + 3))] + n[(2) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah - 1) + 1 + ((ai)-1) * (y + 3))] + n[(3) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah) + 1 + ((ai)-1) * (y + 3))] + n[(4) - 1 + 4 * ((ah)-1)] * s[(aj) + (aa + 1) * ((ah + 1) + 1 + ((ai)-1) * (y + 3))]);
        }
      }

      ae[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))] = ae[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))] * au + at * aw * o[(2) - 1 + 4 * ((ai)-1)] / b * (r[(aj)-1 + aa * ((ah) + 1 + ((ai - 1) + 1) * (y + 3))] - r[(aj)-1 + aa * ((ah) + 1 + ((ai) + 1) * (y + 3))]);
      ab[(aj) + (aa + 1) * ((ah) + 1 + (y + 3) * (ai))] = az + ae[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))];

      af[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))] = af[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))] * as + ar * ax * l[(2) - 1 + 4 * ((ai)-1)] / b * (t[(aj)-1 + aa * (((ah)-1) + (ai)*y)] - t[(aj)-1 + aa * (((ah)-1) + (ai + 1) * y)]);
      ac[(aj) + (aa + 1) * ((ah) + (y + 3) * ((ai) + 1))] = ba + af[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))];

      ag[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))] = ag[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))] * au + at * ay * o[(2) - 1 + 4 * ((ai)-1)] / b * (u[(aj) + (aa + 1) * ((ah)-1 + ((ai - 1) + 1) * y)] - u[(aj) + (aa + 1) * ((ah)-1 + ((ai) + 1) * y)]);
      ad[(aj) + (aa + 1) * ((ah) + (y + 3) * (ai))] = bb + ag[(aj)-1 + aa * ((ah)-1 + y * ((al)-1))];
    }
  }
  return;
}

__kernel void G(int a, float b, __global int* c, __global float* d, __global float* e, __global float* f, __global float* g, __global int* h, __global float* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, int u, int v, int w, int x, int y, __global float* z, __global float* aa, __global float* ab, __global float* ac,
                __global float* ad, __global float* ae) {
  int af, ag, ah, ai;
  float aj, ak, al, am, an, ao, ap, aq, ar, as, at, au;

  int av = c[6];
  int aw = c[0];
  int ax = c[16];
  ah = get_group_id(0) * get_local_size(0) + get_local_id(0) + ax;
  af = get_group_id(1) * get_local_size(1) + get_local_id(1) + av;
  if (ah > a || af > c[11]) {
    return;
  }
  for (ag = c[0]; ag <= c[5]; ag++) {
    ai = 0;
    aj = g[(af)-1 + w * ((ag)-1)];

    ai = ah - ax;
    ai = ai + 1;
    ak = 1. / (1. + aj * e[(ai)-1 + (1) * u]);
    al = ak * 2. - 1.;
    am = 1. / (1. + aj * d[(ai)-1 + (1) * u]);
    an = am * 2. - 1.;
    ao = f[(h[(ah) + (y + 1) * ((af)-1 + ((ag)-1) * (w + 1))]) - 1];
    ap = 0.5 * (ao + f[(h[(ah) + (y + 1) * ((af + 1) - 1 + ((ag)-1) * (w + 1))]) - 1]);
    aq = 0.5 * (ao + f[(h[(ah) + (y + 1) * ((af)-1 + ((ag + 1) - 1) * (w + 1))]) - 1]);
    ar = 0.5 * (ao + f[(h[(ah - 1) + (y + 1) * ((af)-1 + ((ag)-1) * (w + 1))]) - 1]);
    as = z[(ah) + (y + 1) * ((af) + 1 + (w + 3) * (ag))] - ac[(ai)-1 + v * ((af)-1 + w * ((ag)-1))];
    at = aa[(ah) + (y + 1) * ((af) + (w + 3) * ((ag) + 1))] - ad[(ai)-1 + v * ((af)-1 + w * ((ag)-1))];
    au = ab[(ah) + (y + 1) * ((af) + (w + 3) * (ag))] - ae[(ai)-1 + v * ((af)-1 + w * ((ag)-1))];

    if (ag > c[1] && ag < c[4] && af > c[7] && af < c[10]) {
      as = as +
           ap * (i[(1) - 1 + 4 * ((af)-1)] * o[(ah)-1 + y * ((af - 1) + ((ag)-1) * (w + 3))] + i[(2) - 1 + 4 * ((af)-1)] * o[(ah)-1 + y * ((af) + ((ag)-1) * (w + 3))] + i[(3) - 1 + 4 * ((af)-1)] * o[(ah)-1 + y * ((af + 1) + ((ag)-1) * (w + 3))] + i[(4) - 1 + 4 * ((af)-1)] * o[(ah)-1 + y * ((af + 2) + ((ag)-1) * (w + 3))] + m[(1) - 1 + 4 * ((ag)-1)] * p[(ah)-1 + y * ((af) + 1 + ((ag - 2) + 1) * (w + 3))] + m[(2) - 1 + 4 * ((ag)-1)] * p[(ah)-1 + y * ((af) + 1 + ((ag - 1) + 1) * (w + 3))] +
                 m[(3) - 1 + 4 * ((ag)-1)] * p[(ah)-1 + y * ((af) + 1 + ((ag) + 1) * (w + 3))] + m[(4) - 1 + 4 * ((ag)-1)] * p[(ah)-1 + y * ((af) + 1 + ((ag + 1) + 1) * (w + 3))]);

      at = at +
           aq * (l[(1) - 1 + 4 * ((af)-1)] * p[(ah)-1 + y * ((af - 2) + 1 + ((ag) + 1) * (w + 3))] + l[(2) - 1 + 4 * ((af)-1)] * p[(ah)-1 + y * ((af - 1) + 1 + ((ag) + 1) * (w + 3))] + l[(3) - 1 + 4 * ((af)-1)] * p[(ah)-1 + y * ((af) + 1 + ((ag) + 1) * (w + 3))] + l[(4) - 1 + 4 * ((af)-1)] * p[(ah)-1 + y * ((af + 1) + 1 + ((ag) + 1) * (w + 3))] + j[(1) - 1 + 4 * ((ag)-1)] * r[(ah)-1 + y * (((af)-1) + (ag - 1) * w)] + j[(2) - 1 + 4 * ((ag)-1)] * r[(ah)-1 + y * (((af)-1) + (ag)*w)] +
                 j[(3) - 1 + 4 * ((ag)-1)] * r[(ah)-1 + y * (((af)-1) + (ag + 1) * w)] + j[(4) - 1 + 4 * ((ag)-1)] * r[(ah)-1 + y * (((af)-1) + (ag + 2) * w)]);

      au = au +
           ar * (l[(1) - 1 + 4 * ((af)-1)] * q[(ah) + (y + 1) * ((af - 2) + 1 + ((ag)-1) * (w + 3))] + l[(2) - 1 + 4 * ((af)-1)] * q[(ah) + (y + 1) * ((af - 1) + 1 + ((ag)-1) * (w + 3))] + l[(3) - 1 + 4 * ((af)-1)] * q[(ah) + (y + 1) * ((af) + 1 + ((ag)-1) * (w + 3))] + l[(4) - 1 + 4 * ((af)-1)] * q[(ah) + (y + 1) * ((af + 1) + 1 + ((ag)-1) * (w + 3))] + m[(1) - 1 + 4 * ((ag)-1)] * s[(ah) + (y + 1) * ((af)-1 + ((ag - 2) + 1) * w)] +
                 m[(2) - 1 + 4 * ((ag)-1)] * s[(ah) + (y + 1) * ((af)-1 + ((ag - 1) + 1) * w)] + m[(3) - 1 + 4 * ((ag)-1)] * s[(ah) + (y + 1) * ((af)-1 + ((ag) + 1) * w)] + m[(4) - 1 + 4 * ((ag)-1)] * s[(ah) + (y + 1) * ((af)-1 + ((ag + 1) + 1) * w)]);
    }

    ac[(ai)-1 + v * ((af)-1 + w * ((ag)-1))] = ac[(ai)-1 + v * ((af)-1 + w * ((ag)-1))] * an + am * ap * k[(2) - 1 + 4 * ((ah)-1)] / b * (q[(ah) + (y + 1) * ((af) + 1 + ((ag)-1) * (w + 3))] - q[(ah + 1) + (y + 1) * ((af) + 1 + ((ag)-1) * (w + 3))]);
    z[(ah) + (y + 1) * ((af) + 1 + (w + 3) * (ag))] = as + ac[(ai)-1 + v * ((af)-1 + w * ((ag)-1))];

    ad[(ai)-1 + v * ((af)-1 + w * ((ag)-1))] = ad[(ai)-1 + v * ((af)-1 + w * ((ag)-1))] * an + am * aq * k[(2) - 1 + 4 * ((ah)-1)] / b * (s[(ah) + (y + 1) * ((af)-1 + ((ag) + 1) * w)] - s[(ah + 1) + (y + 1) * ((af)-1 + ((ag) + 1) * w)]);
    aa[(ah) + (y + 1) * ((af) + (w + 3) * ((ag) + 1))] = at + ad[(ai)-1 + v * ((af)-1 + w * ((ag)-1))];

    ae[(ai)-1 + v * ((af)-1 + w * ((ag)-1))] = ae[(ai)-1 + v * ((af)-1 + w * ((ag)-1))] * al + ak * ar * n[(2) - 1 + 4 * ((ah)-1)] / b * (t[(ah - 1) + (y + 1) * ((af)-1 + ((ag)-1) * w)] - t[(ah) + (y + 1) * ((af)-1 + ((ag)-1) * w)]);
    ab[(ah) + (y + 1) * ((af) + (w + 3) * (ag))] = au + ae[(ai)-1 + v * ((af)-1 + w * ((ag)-1))];
  }
  return;
}

__kernel void H(int a, int b, int c, int d, __global int* e, __global int* f, float g, __global float* h, __global float* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab,
                __global float* ac, __global float* ad) {
  int ae, af, ag, ah, ai, aj, ak;
  float al, am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, ba, bb;

  int bc = e[12];
  int bd = e[8];
  ag = get_group_id(0) * get_local_size(0) + get_local_id(0) + bc;
  ae = get_group_id(1) * get_local_size(1) + get_local_id(1) + bd;

  if (ag > e[17] || ae > e[9]) {
    return;
  }

  for (af = e[2]; af <= e[3]; af++) {
    ai = 2 * ((af + b) & 1) + 1;
    ah = ((ae + a) & 1) + ai;
    al = o[((ae)-1) * 4 + (1) - 1] * ab[(ag) + (d + 2) * ((ae - 2) + 1 + (af) * (c + 3))] + o[((ae)-1) * 4 + (2) - 1] * ab[(ag) + (d + 2) * ((ae - 1) + 1 + (af) * (c + 3))] + o[((ae)-1) * 4 + (3) - 1] * ab[(ag) + (d + 2) * ((ae) + 1 + (af) * (c + 3))] + o[((ae)-1) * 4 + (4) - 1] * ab[(ag) + (d + 2) * ((ae + 1) + 1 + (af) * (c + 3))];
    am = p[((af)-1) * 4 + (1) - 1] * ac[(ag) + (d + 2) * ((ae) + ((af - 2) + 1) * (c + 3))] + p[((af)-1) * 4 + (2) - 1] * ac[(ag) + (d + 2) * ((ae) + ((af - 1) + 1) * (c + 3))] + p[((af)-1) * 4 + (3) - 1] * ac[(ag) + (d + 2) * ((ae) + ((af) + 1) * (c + 3))] + p[((af)-1) * 4 + (4) - 1] * ac[(ag) + (d + 2) * ((ae) + ((af + 1) + 1) * (c + 3))];
    ao = q[((ae)-1) * 4 + (1) - 1] * ac[(ag) + (d + 2) * ((ae - 1) + ((af) + 1) * (c + 3))] + q[((ae)-1) * 4 + (2) - 1] * ac[(ag) + (d + 2) * ((ae) + ((af) + 1) * (c + 3))] + q[((ae)-1) * 4 + (3) - 1] * ac[(ag) + (d + 2) * ((ae + 1) + ((af) + 1) * (c + 3))] + q[((ae)-1) * 4 + (4) - 1] * ac[(ag) + (d + 2) * ((ae + 2) + ((af) + 1) * (c + 3))] + r[((af)-1) * 4 + (1) - 1] * ab[(ag) + (d + 2) * ((ae) + 1 + (af - 1) * (c + 3))] +
         r[((af)-1) * 4 + (2) - 1] * ab[(ag) + (d + 2) * ((ae) + 1 + (af) * (c + 3))] + r[((af)-1) * 4 + (3) - 1] * ab[(ag) + (d + 2) * ((ae) + 1 + (af + 1) * (c + 3))] + r[((af)-1) * 4 + (4) - 1] * ab[(ag) + (d + 2) * ((ae) + 1 + (af + 2) * (c + 3))];
    if (ag == 1) {
      an = s[((ag)-1) * 4 + (2) - 1] / g * (22. * ad[(ag) + (d + 2) * ((ae) + (af) * (c + 3))] - 17. * ad[(ag + 1) + (d + 2) * ((ae) + (af) * (c + 3))] - 9. * ad[(ag + 2) + (d + 2) * ((ae) + (af) * (c + 3))] + 5. * ad[(ag + 3) + (d + 2) * ((ae) + (af) * (c + 3))] - ad[(ag + 4) + (d + 2) * ((ae) + (af) * (c + 3))]) / 24.0;
    } else if (ag == d) {
      an = s[((ag)-1) * 4 + (2) - 1] / g * (ad[(ag) + (d + 2) * ((ae) + (af) * (c + 3))] - ad[(ag + 1) + (d + 2) * ((ae) + (af) * (c + 3))]);
    } else {
      an = s[((ag)-1) * 4 + (1) - 1] * ad[(ag - 1) + (d + 2) * ((ae) + (af) * (c + 3))] + s[((ag)-1) * 4 + (2) - 1] * ad[(ag) + (d + 2) * ((ae) + (af) * (c + 3))] + s[((ag)-1) * 4 + (3) - 1] * ad[(ag + 1) + (d + 2) * ((ae) + (af) * (c + 3))] + s[((ag)-1) * 4 + (4) - 1] * ad[(ag + 2) + (d + 2) * ((ae) + (af) * (c + 3))];
    }

    aj = f[(ag) + (d + 2) * ((ae)-1 + ((af)-1) * (c + 1))];
    av = h[(aj)-1];
    aw = 2. * i[(aj)-1];
    ax = av + aw;
    at = ao / (1. / aw + .5 / i[(f[(ag) + (d + 2) * ((ae + 1) - 1 + ((af + 1) - 1) * (c + 1))]) - 1]);
    au = al + am + an;
    ak = ah + 4 * (ag & 1);
    ay = j[(ak)-1];
    az = 1.0 - ay;
    ba = ax * k[(aj)-1] * (k[(aj)-1] * m[(ak)-1] + n[(ak)-1]);
    bb = aw * l[(aj)-1] * (l[(aj)-1] * m[(ak)-1] + n[(ak)-1]);
    ap = x[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    x[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = ap * ay + (ba * au - bb * (am + an)) * az;
    t[(ag)-1 + d * ((ae) + ((af)-1) * (c + 3))] = t[(ag)-1 + d * ((ae) + ((af)-1) * (c + 3))] + aw * al + av * au - ap - x[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    aq = z[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    z[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = aq * ay + (ba * au - bb * (al + an)) * az;
    v[(ag)-1 + d * (((ae)-1) + (af)*c)] = v[(ag)-1 + d * (((ae)-1) + (af)*c)] + aw * am + av * au - aq - z[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    ar = aa[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    aa[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = ar * ay + (ba * au - bb * (al + am)) * az;
    w[(ag)-1 + d * ((ae)-1 + ((af)-1) * c)] = w[(ag)-1 + d * ((ae)-1 + ((af)-1) * c)] + aw * an + av * au - ar - aa[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    as = y[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    y[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = as * ay + bb / aw * at * az;
    u[(ag)-1 + d * ((ae) + 1 + ((af) + 1) * (c + 3))] = u[(ag)-1 + d * ((ae) + 1 + ((af) + 1) * (c + 3))] + at - as - y[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
  }

  return;
}

__kernel void I(int a, int b, int c, int d, int e, __global int* f, __global int* g, float h, __global float* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w)

{
  int x, y, z, aa, ab, ac, ad;
  float ae, af, ag, ah, ai, aj, ak, al, am, an, ao, ap;

  int aq = f[12];
  int ar = f[8];
  int as = f[2];
  z = get_group_id(0) * get_local_size(0) + get_local_id(0) + aq;
  x = get_group_id(1) * get_local_size(1) + get_local_id(1) + ar;

  if (z > f[17] || x > f[9]) {
    return;
  }
  for (y = f[2]; y <= f[3]; y++) {
    aa = 2 * ((y + b) & 1) + 1;
    ac = ((x + a) & 1) + aa;
    ae = n[((x)-1) * 4 + (1) - 1] * s[(z) + (e + 2) * ((x - 1) + (y) * (c + 3))] + n[((x)-1) * 4 + (2) - 1] * s[(z) + (e + 2) * ((x) + (y) * (c + 3))] + n[((x)-1) * 4 + (3) - 1] * s[(z) + (e + 2) * ((x + 1) + (y) * (c + 3))] + n[((x)-1) * 4 + (4) - 1] * s[(z) + (e + 2) * ((x + 2) + (y) * (c + 3))];
    af = o[((y)-1) * 4 + (1) - 1] * s[(z) + (e + 2) * ((x) + (y - 1) * (c + 3))] + o[((y)-1) * 4 + (2) - 1] * s[(z) + (e + 2) * ((x) + (y) * (c + 3))] + o[((y)-1) * 4 + (3) - 1] * s[(z) + (e + 2) * ((x) + (y + 1) * (c + 3))] + o[((y)-1) * 4 + (4) - 1] * s[(z) + (e + 2) * ((x) + (y + 2) * (c + 3))];
    if (z < e) {
      ag = p[((z)-1) * 4 + (1) - 1] * q[(z - 2) + (e + 2) * ((x) + 1 + (y) * (c + 3))] + p[((z)-1) * 4 + (2) - 1] * q[(z - 1) + (e + 2) * ((x) + 1 + (y) * (c + 3))] + p[((z)-1) * 4 + (3) - 1] * q[(z) + (e + 2) * ((x) + 1 + (y) * (c + 3))] + p[((z)-1) * 4 + (4) - 1] * q[(z + 1) + (e + 2) * ((x) + 1 + (y) * (c + 3))];
      ah = p[((z)-1) * 4 + (1) - 1] * r[(z - 2) + (e + 2) * ((x) + ((y) + 1) * (c + 3))] + p[((z)-1) * 4 + (2) - 1] * r[(z - 1) + (e + 2) * ((x) + ((y) + 1) * (c + 3))] + p[((z)-1) * 4 + (3) - 1] * r[(z) + (e + 2) * ((x) + ((y) + 1) * (c + 3))] + p[((z)-1) * 4 + (4) - 1] * r[(z + 1) + (e + 2) * ((x) + ((y) + 1) * (c + 3))];
    } else {
      ag = p[((z)-1) * 4 + (2) - 1] / h * (q[(z - 1) + (e + 2) * ((x) + 1 + (y) * (c + 3))] - q[(z) + (e + 2) * ((x) + 1 + (y) * (c + 3))]);
      ah = p[((z)-1) * 4 + (2) - 1] / h * (r[(z - 1) + (e + 2) * ((x) + ((y) + 1) * (c + 3))] - r[(z) + (e + 2) * ((x) + ((y) + 1) * (c + 3))]);
    }

    ab = g[(z) + (e + 2) * ((x)-1 + ((y)-1) * (c + 1))];
    ai = i[(ab)-1];
    aj = (ae + ag) / (.5 / ai + .5 / i[(g[(z - 1) + (e + 2) * ((x + 1) - 1 + ((y)-1) * (c + 1))]) - 1]);
    ak = (af + ah) / (.5 / ai + .5 / i[(g[(z - 1) + (e + 2) * ((x)-1 + ((y + 1) - 1) * (c + 1))]) - 1]);

    ad = ac + 4 * (z & 1);
    al = j[(ad)-1];
    am = 1.0 - al;
    an = k[(ab)-1] * (k[(ab)-1] * l[(ad)-1] + m[(ad)-1]);
    ao = v[(z)-1 + (e + 1) * ((x)-1 + c * ((y)-1))];
    v[(z)-1 + (e + 1) * ((x)-1 + c * ((y)-1))] = ao * al + an * aj * am;
    t[(z)-1 + (e + 1) * ((x) + 1 + ((y)-1) * (c + 3))] = t[(z)-1 + (e + 1) * ((x) + 1 + ((y)-1) * (c + 3))] + aj - ao - v[(z)-1 + (e + 1) * ((x)-1 + c * ((y)-1))];
    ap = w[(z)-1 + (e + 1) * ((x)-1 + c * ((y)-1))];
    w[(z)-1 + (e + 1) * ((x)-1 + c * ((y)-1))] = ap * al + an * ak * am;
    u[(z)-1 + (e + 1) * ((x)-1 + ((y) + 1) * c)] = u[(z)-1 + (e + 1) * ((x)-1 + ((y) + 1) * c)] + ak - ap - w[(z)-1 + (e + 1) * ((x)-1 + c * ((y)-1))];
  }
  return;
}

__kernel void J(int a, int b, int c, int d, int e, __global float* f, __global float* g) {
  int h, i;

  i = get_group_id(0) * get_local_size(0) + get_local_id(0) - 1;
  h = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;

  if (i <= a && h <= c) {
    g[(1) - 1 + (e + 1) * ((h)-1 + ((i) + 1) * c)] = 0.0f;
  }
  i = i + 2;
  h = h - 2;

  if (i <= d && h <= b) {
    f[(1) - 1 + (e + 1) * ((h) + 1 + ((i)-1) * (c + 3))] = 0.0;
  }
  return;
}

__kernel void K(int a, int b, int c, int d, int e, int f, int g, int h, int i, __global int* j, __global int* k, float l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab, __global float* ac, __global float* ad, __global float* ae,
                __global float* af, __global float* ag, __global float* ah, __global float* ai, __global float* aj, __global float* ak)

{
  int al, am, an, ao, ap, aq, ar, as, at, au;
  float av, aw, ax, ay, az, ba, bb, bc, bd, be, bf, bg, bh, bi, bj, bk, bl, bm, bn, bo;
  int bp;

  int bq = j[12];
  int br = j[0];
  an = get_group_id(0) * get_local_size(0) + get_local_id(0) + bq;
  am = get_group_id(1) * get_local_size(1) + get_local_id(1) + br;

  if (am > j[5] || an > j[17]) {
    return;
  }
  bp = (i - h + 1) * f + i;

  ar = 2 * ((am + b) & 1) + 1;
  ap = 0;
  for (ao = h; ao <= i; ao++) {
    aq = 0;
    for (al = j[6 + 4 * ao]; al <= j[7 + 4 * ao]; al++) {
      aq = aq + 1;
      ap = ap + 1;
      bf = m[(aq)-1 + (ao)*g];
      as = ((al + a) & 1) + ar;
      bg = 1. / (1. + n[(an)-1 + (e + 1) * ((am)-1 + ((ao)-h) * d)] * bf);
      bh = bg * 2.0 - 1.;
      at = k[(an) + (e + 2) * ((al)-1 + ((am)-1) * (c + 1))];
      bi = o[(at)-1];
      bj = 2. * p[(at)-1];
      bk = bi + bj;
      au = as + 4 * (an & 1);
      bl = q[(au)-1];
      bm = 1.0 - bl;
      bn = bk * r[(at)-1] * (r[(at)-1] * t[(au)-1] + u[(au)-1]);
      bo = bj * s[(at)-1] * (s[(at)-1] * t[(au)-1] + u[(au)-1]);
      av = ab[(an)-1 + e * ((al) + ((am)-1) * (c + 3))] - ae[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];
      aw = ac[(an)-1 + e * (((al)-1) + (am)*c)] - af[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];
      ax = ad[(an)-1 + e * ((al)-1 + ((am)-1) * c)] - af[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];

      if (am > j[1] && am < j[4]) {
        az = x[((am)-1) * 4 + (1) - 1] * z[(an) + (e + 2) * ((al) + ((am - 2) + 1) * (c + 3))] + x[((am)-1) * 4 + (2) - 1] * z[(an) + (e + 2) * ((al) + ((am - 1) + 1) * (c + 3))] + x[((am)-1) * 4 + (3) - 1] * z[(an) + (e + 2) * ((al) + ((am) + 1) * (c + 3))] + x[((am)-1) * 4 + (4) - 1] * z[(an) + (e + 2) * ((al) + ((am + 1) + 1) * (c + 3))];
        if (an == 1) {
          ba = v[((an)-1) * 4 + (2) - 1] / l * (22. * aa[(an) + (e + 2) * ((al) + (am) * (c + 3))] - 17. * aa[(an + 1) + (e + 2) * ((al) + (am) * (c + 3))] - 9. * aa[(an + 2) + (e + 2) * ((al) + (am) * (c + 3))] + 5. * aa[(an + 3) + (e + 2) * ((al) + (am) * (c + 3))] - aa[(an + 4) + (e + 2) * ((al) + (am) * (c + 3))]) / 24.;
        } else if (an == e) {
          ba = v[((an)-1) * 4 + (2) - 1] / l * (aa[(an) + (e + 2) * ((al) + (am) * (c + 3))] - aa[(an + 1) + (e + 2) * ((al) + (am) * (c + 3))]);
        } else {
          ba = v[((an)-1) * 4 + (1) - 1] * aa[(an - 1) + (e + 2) * ((al) + (am) * (c + 3))] + v[((an)-1) * 4 + (2) - 1] * aa[(an) + (e + 2) * ((al) + (am) * (c + 3))] + v[((an)-1) * 4 + (3) - 1] * aa[(an + 1) + (e + 2) * ((al) + (am) * (c + 3))] + v[((an)-1) * 4 + (4) - 1] * aa[(an + 2) + (e + 2) * ((al) + (am) * (c + 3))];
        }
        bb = az + ba;
        bc = ag[(an)-1 + e * ((al)-1 + c * ((am)-1))];
        ag[(an)-1 + e * ((al)-1 + c * ((am)-1))] = bc * bl + (bn - bo) * bb * bm;
        av = av + bi * bb - bc - ag[(an)-1 + e * ((al)-1 + c * ((am)-1))];
        bd = ah[(an)-1 + e * ((al)-1 + c * ((am)-1))];
        ah[(an)-1 + e * ((al)-1 + c * ((am)-1))] = bd * bl + (bn * bb - bo * ba) * bm;
        aw = aw + bj * az + bi * bb - bd - ah[(an)-1 + e * ((al)-1 + c * ((am)-1))];
        be = ai[(an)-1 + e * ((al)-1 + c * ((am)-1))];
        ai[(an)-1 + e * ((al)-1 + c * ((am)-1))] = be * bl + (bn * bb - bo * az) * bm;
        ax = ax + bj * ba + bi * bb - be - ai[(an)-1 + e * ((al)-1 + c * ((am)-1))];
      }
      ay = w[((al)-1) * 4 + (2) - 1] / l * (y[(an) + (e + 2) * ((al - 1) + 1 + (am) * (c + 3))] - y[(an) + (e + 2) * ((al) + 1 + (am) * (c + 3))]);
      bc = aj[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];
      aj[(an)-1 + e * ((ap)-1 + bp * ((am)-1))] = bc * bl + bn * ay * bm;
      ae[(an)-1 + e * ((ap)-1 + bp * ((am)-1))] = bh * ae[(an)-1 + e * ((ap)-1 + bp * ((am)-1))] + bg * (bk * ay - bc - aj[(an)-1 + e * ((ap)-1 + bp * ((am)-1))]);
      ab[(an)-1 + e * ((al) + ((am)-1) * (c + 3))] = av + ae[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];
      bd = ak[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];
      ak[(an)-1 + e * ((ap)-1 + bp * ((am)-1))] = bd * bl + (bn - bo) * ay * bm;
      af[(an)-1 + e * ((ap)-1 + bp * ((am)-1))] = bh * af[(an)-1 + e * ((ap)-1 + bp * ((am)-1))] + bg * (bi * ay - bd - ak[(an)-1 + e * ((ap)-1 + bp * ((am)-1))]);
      ac[(an)-1 + e * (((al)-1) + (am)*c)] = aw + af[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];
      ad[(an)-1 + e * ((al)-1 + ((am)-1) * c)] = ax + af[(an)-1 + e * ((ap)-1 + bp * ((am)-1))];
    }
  }

  return;
}

__kernel void L(int a, int b, int c, int d, int e, int f, int g, __global int* h, __global int* i, float j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab, __global float* ac, __global float* ad,
                __global float* ae, __global float* af, __global float* ag, __global float* ah, __global float* ai)

{
  int aj, ak, al, am, an, ao, ap, aq, ar, as;
  float at, au, av, aw, ax, ay, az, ba, bb, bc, bd, be, bf, bg, bh, bi, bj, bk, bl, bm;

  int bn = h[12];
  int bo = h[6];
  al = get_group_id(0) * get_local_size(0) + get_local_id(0) + bn;
  aj = get_group_id(1) * get_local_size(1) + get_local_id(1) + bo;

  if (aj > h[11] || al > h[17]) {
    return;
  }

  an = 0;
  for (am = f; am <= g; am++) {
    ao = 0;
    for (ak = h[4 * am]; ak <= h[1 + 4 * am]; ak++)

    {
      ao = ao + 1;
      an = an + 1;
      bd = k[(ao)-1 + (am)*c];
      ap = 2 * ((ak + b) & 1) + 1;

      aq = ((aj + a) & 1) + ap;
      be = 1. / (1. + l[(al)-1 + (e + 1) * ((aj)-1 + ((am)-f) * d)] * bd);
      bf = be * 2. - 1.;
      ar = i[(al) + (e + 2) * ((aj)-1 + ((ak)-1) * (d + 1))];
      bg = m[(ar)-1];
      bh = 2. * n[(ar)-1];
      bi = bg + bh;

      as = aq + 4 * (al & 1);
      bj = o[(as)-1];
      bk = 1.0 - bj;
      bl = bi * p[(ar)-1] * (p[(ar)-1] * r[(as)-1] + s[(as)-1]);
      bm = bh * q[(ar)-1] * (q[(ar)-1] * r[(as)-1] + s[(as)-1]);
      if (aj > h[7] && aj < h[10]) {
        aw = t[((aj)-1) * 4 + (1) - 1] * ag[(al) + (e + 2) * ((aj - 2) + 1 + (ak) * (d + 3))] + t[((aj)-1) * 4 + (2) - 1] * ag[(al) + (e + 2) * ((aj - 1) + 1 + (ak) * (d + 3))] + t[((aj)-1) * 4 + (3) - 1] * ag[(al) + (e + 2) * ((aj) + 1 + (ak) * (d + 3))] + t[((aj)-1) * 4 + (4) - 1] * ag[(al) + (e + 2) * ((aj + 1) + 1 + (ak) * (d + 3))];
      } else {
        aw = 0.0;
      }

      if (al == 1) {
        ay = v[((al)-1) * 4 + (2) - 1] / j * (22. * ai[(al) + (e + 2) * ((aj) + (ak) * (d + 3))] - 17. * ai[(al + 1) + (e + 2) * ((aj) + (ak) * (d + 3))] - 9. * ai[(al + 2) + (e + 2) * ((aj) + (ak) * (d + 3))] + 5. * ai[(al + 3) + (e + 2) * ((aj) + (ak) * (d + 3))] - ai[(al + 4) + (e + 2) * ((aj) + (ak) * (d + 3))]) / 24.;
      } else if (al == e) {
        ay = v[((al)-1) * 4 + (2) - 1] / j * (ai[(al) + (e + 2) * ((aj) + (ak) * (d + 3))] - ai[(al + 1) + (e + 2) * ((aj) + (ak) * (d + 3))]);
      } else {
        ay = v[((al)-1) * 4 + (1) - 1] * ai[(al - 1) + (e + 2) * ((aj) + (ak) * (d + 3))] + v[((al)-1) * 4 + (2) - 1] * ai[(al) + (e + 2) * ((aj) + (ak) * (d + 3))] + v[((al)-1) * 4 + (3) - 1] * ai[(al + 1) + (e + 2) * ((aj) + (ak) * (d + 3))] + v[((al)-1) * 4 + (4) - 1] * ai[(al + 2) + (e + 2) * ((aj) + (ak) * (d + 3))];
      }
      az = aw + ay;
      ba = z[(al)-1 + e * ((aj)-1 + d * ((ak)-1))];
      z[(al)-1 + e * ((aj)-1 + d * ((ak)-1))] = ba * bj + (bl * az - bm * ay) * bk;
      at = w[(al)-1 + e * ((aj) + ((ak)-1) * (d + 3))] - ac[(al)-1 + e * ((aj)-1 + d * ((an)-1))] + bh * aw + bg * az - ba - z[(al)-1 + e * ((aj)-1 + d * ((ak)-1))];
      bb = aa[(al)-1 + e * ((aj)-1 + d * ((ak)-1))];
      aa[(al)-1 + e * ((aj)-1 + d * ((ak)-1))] = bb * bj + (bl - bm) * az * bk;
      au = x[(al)-1 + e * (((aj)-1) + (ak)*d)] - ad[(al)-1 + e * ((aj)-1 + d * ((an)-1))] + bg * az - bb - aa[(al)-1 + e * ((aj)-1 + d * ((ak)-1))];
      bc = ab[(al)-1 + e * ((aj)-1 + d * ((ak)-1))];
      ab[(al)-1 + e * ((aj)-1 + d * ((ak)-1))] = bc * bj + (bl * az - bm * aw) * bk;
      av = y[(al)-1 + e * ((aj)-1 + ((ak)-1) * d)] - ac[(al)-1 + e * ((aj)-1 + d * ((an)-1))] + bh * ay + bg * az - bc - ab[(al)-1 + e * ((aj)-1 + d * ((ak)-1))];
      ax = u[((ak)-1) * 4 + (2) - 1] / j * (ah[(al) + (e + 2) * ((aj) + ((ak - 1) + 1) * (d + 3))] - ah[(al) + (e + 2) * ((aj) + ((ak) + 1) * (d + 3))]);
      ba = ae[(al)-1 + e * ((aj)-1 + d * ((an)-1))];
      ae[(al)-1 + e * ((aj)-1 + d * ((an)-1))] = ba * bj + (bl - bm) * ax * bk;
      ac[(al)-1 + e * ((aj)-1 + d * ((an)-1))] = bf * ac[(al)-1 + e * ((aj)-1 + d * ((an)-1))] + be * (bg * ax - ba - ae[(al)-1 + e * ((aj)-1 + d * ((an)-1))]);
      w[(al)-1 + e * ((aj) + ((ak)-1) * (d + 3))] = at + ac[(al)-1 + e * ((aj)-1 + d * ((an)-1))];
      y[(al)-1 + e * ((aj)-1 + ((ak)-1) * d)] = av + ac[(al)-1 + e * ((aj)-1 + d * ((an)-1))];
      bb = af[(al)-1 + e * ((aj)-1 + d * ((an)-1))];
      af[(al)-1 + e * ((aj)-1 + d * ((an)-1))] = bb * bj + bl * ax * bk;
      ad[(al)-1 + e * ((aj)-1 + d * ((an)-1))] = bf * ad[(al)-1 + e * ((aj)-1 + d * ((an)-1))] + be * (bi * ax - bb - af[(al)-1 + e * ((aj)-1 + d * ((an)-1))]);
      x[(al)-1 + e * (((aj)-1) + (ak)*d)] = au + ad[(al)-1 + e * ((aj)-1 + d * ((an)-1))];
    }
  }

  return;
}

__kernel void M(int a, int b, int c, int d, int e, int f, int g, int h, int i, __global int* j, __global int* k, float l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa)

{
  int ab, ac, ad, ae, af, ag, ah, ai, aj, ak;
  float al, am, an, ao, ap, aq, ar, as, at, au;
  int av;

  av = (i - h + 1) * c + 1 - h;

  int aw = j[12];
  int ax = j[0];

  ad = get_group_id(0) * get_local_size(0) + get_local_id(0) + aw;
  ac = get_group_id(1) * get_local_size(1) + get_local_id(1) + ax;

  if (ac > j[5] || ad > j[17]) {
    return;
  }

  ah = 2 * ((ac + b) & 1) + 1;
  af = 0;
  for (ae = h; ae <= i; ae++) {
    ag = 0;
    for (ab = j[6 + 4 * ae]; ab <= j[7 + 4 * ae]; ab++) {
      ag = ag + 1;
      af = af + 1;
      ao = m[(ag)-1 + (ae)*d];
      ai = ((ab + a) & 1) + ah;
      ap = 1. / (1. + n[(ad)-1 + (g + 1) * ((ac)-1 + ((ae)-h) * f)] * ao);
      aq = ap * 2. - 1.;
      aj = k[(ad) + (g + 2) * ((ab)-1 + ((ac)-1) * (e + 1))];
      ar = 2. / (1. / o[(aj)-1] + 1. / o[(k[(ad) + (g + 2) * ((ab + 1) - 1 + ((ac + 1) - 1) * (e + 1))]) - 1]);
      ak = ai + 4 * (ad & 1);

      at = p[(ak)-1];
      au = 1.0 - at;
      as = q[(aj)-1] * (q[(aj)-1] * r[(ak)-1] + s[(ak)-1]);
      al = v[(ad)-1 + g * ((ab) + 1 + ((ac) + 1) * (e + 3))] - x[(ad)-1 + g * ((af)-1 + av * ((ac)-1))];
      if (ac > j[1] && ac < j[4]) {
        am = (u[((ac)-1) * 4 + (1) - 1] * z[(ad) + (g + 2) * ((ab) + 1 + (ac - 1) * (e + 3))] + u[((ac)-1) * 4 + (2) - 1] * z[(ad) + (g + 2) * ((ab) + 1 + (ac) * (e + 3))] + u[((ac)-1) * 4 + (3) - 1] * z[(ad) + (g + 2) * ((ab) + 1 + (ac + 1) * (e + 3))] + u[((ac)-1) * 4 + (4) - 1] * z[(ad) + (g + 2) * ((ab) + 1 + (ac + 2) * (e + 3))]) * ar;
        an = w[(ad)-1 + g * ((ab)-1 + e * ((ac)-1))];
        w[(ad)-1 + g * ((ab)-1 + e * ((ac)-1))] = an * at + as * am * au;
        al = al + am - an - w[(ad)-1 + g * ((ab)-1 + e * ((ac)-1))];
      }
      am = ar * t[((ab)-1) * 4 + (2) - 1] / l * (aa[(ad) + (g + 2) * ((ab) + ((ac) + 1) * (e + 3))] - aa[(ad) + (g + 2) * ((ab + 1) + ((ac) + 1) * (e + 3))]);
      an = y[(ad)-1 + g * ((af)-1 + av * ((ac)-1))];
      y[(ad)-1 + g * ((af)-1 + av * ((ac)-1))] = an * at + as * am * au;
      x[(ad)-1 + g * ((af)-1 + av * ((ac)-1))] = aq * x[(ad)-1 + g * ((af)-1 + av * ((ac)-1))] + ap * (am - an - y[(ad)-1 + g * ((af)-1 + av * ((ac)-1))]);
      v[(ad)-1 + g * ((ab) + 1 + ((ac) + 1) * (e + 3))] = al + x[(ad)-1 + g * ((af)-1 + av * ((ac)-1))];
    }
  }

  return;
}

__kernel void N(int a, int b, int c, int d, int e, int f, int g, __global int* h, __global int* i, float j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y)

{
  int z, aa, ab, ac, ad, ae, af, ag, ah, ai;
  float aj, ak, al, am, an, ao, ap, aq, ar, as;

  int at = h[12];
  int au = h[17];
  int av = h[6];
  int aw = h[11];

  ab = get_group_id(0) * get_local_size(0) + get_local_id(0) + at;
  z = get_group_id(1) * get_local_size(1) + get_local_id(1) + av;
  if (z > aw || ab > au) {
    return;
  }

  ad = 0;
  for (ac = f; ac <= g; ac++) {
    ae = 0;
    for (aa = h[4 * ac]; aa <= h[1 + 4 * ac]; aa++) {
      ae = ae + 1;
      ad = ad + 1;
      am = k[(ae)-1 + (ac)*c];
      af = 2 * ((aa + b) & 1) + 1;
      ag = ((z + a) & 1) + af;
      an = 1. / (1. + l[(ab)-1 + (e + 1) * ((z)-1 + ((ac)-f) * d)] * am);
      ao = an * 2. - 1.;
      ah = i[(ab) + (e + 2) * ((z)-1 + ((aa)-1) * (d + 1))];
      ap = 2. / (1. / m[(ah)-1] + 1. / m[(i[(ab) + (e + 2) * ((z + 1) - 1 + ((aa + 1) - 1) * (d + 1))]) - 1]);
      ai = ag + 4 * (ab & 1);

      ar = n[(ai)-1];
      as = 1.0 - ar;
      aq = o[(ah)-1] * (o[(ah)-1] * p[(ai)-1] + q[(ai)-1]);
      aj = t[(ab)-1 + e * ((z) + 1 + ((aa) + 1) * (d + 3))] - v[(ab)-1 + e * ((z)-1 + d * ((ad)-1))];
      if (z > h[7] && z < h[10]) {
        ak = (r[((z)-1) * 4 + (1) - 1] * y[(ab) + (e + 2) * ((z - 1) + ((aa) + 1) * (d + 3))] + r[((z)-1) * 4 + (2) - 1] * y[(ab) + (e + 2) * ((z) + ((aa) + 1) * (d + 3))] + r[((z)-1) * 4 + (3) - 1] * y[(ab) + (e + 2) * ((z + 1) + ((aa) + 1) * (d + 3))] + r[((z)-1) * 4 + (4) - 1] * y[(ab) + (e + 2) * ((z + 2) + ((aa) + 1) * (d + 3))]) * ap;
        al = u[(ab)-1 + e * ((z)-1 + d * ((aa)-1))];
        u[(ab)-1 + e * ((z)-1 + d * ((aa)-1))] = al * ar + aq * ak * as;
        aj = aj + ak - al - u[(ab)-1 + e * ((z)-1 + d * ((aa)-1))];
      }
      ak = ap * s[((aa)-1) * 4 + (2) - 1] / j * (x[(ab) + (e + 2) * ((z) + 1 + (aa) * (d + 3))] - x[(ab) + (e + 2) * ((z) + 1 + (aa + 1) * (d + 3))]);
      al = w[(ab)-1 + e * ((z)-1 + d * ((ad)-1))];
      w[(ab)-1 + e * ((z)-1 + d * ((ad)-1))] = al * ar + aq * ak * as;
      v[(ab)-1 + e * ((z)-1 + d * ((ad)-1))] = ao * v[(ab)-1 + e * ((z)-1 + d * ((ad)-1))] + an * (ak - al - w[(ab)-1 + e * ((z)-1 + d * ((ad)-1))]);
      t[(ab)-1 + e * ((z) + 1 + ((aa) + 1) * (d + 3))] = aj + v[(ab)-1 + e * ((z)-1 + d * ((ad)-1))];
    }
  }

  return;
}

__kernel void O(int a, int b, int c, int d, int e, int f, int g, int h, int i, __global int* j, __global int* k, float l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa)

{
  int ab, ac, ad, ae, af, ag, ah, ai, aj, ak;
  float al, am, an, ao, ap, aq, ar, as, at, au, av;
  int aw;

  aw = (i - h + 1) * f + 1 - h;

  int ax = j[12];
  int ay = j[0];
  int az = j[17];
  int ba = j[5];
  ad = get_group_id(0) * get_local_size(0) + get_local_id(0) + ax;
  ac = get_group_id(1) * get_local_size(1) + get_local_id(1) + ay;

  if (ac > j[5] || ad > j[17]) {
    return;
  }

  ah = 2 * ((ac + b) & 1) + 1;
  af = 0;

  for (ae = h; ae <= i; ae++) {
    ag = 0;
    for (ab = j[6 + 4 * ae]; ab <= j[7 + 4 * ae]; ab++) {
      ag = ag + 1;
      af = af + 1;
      ap = m[(ag)-1 + (ae)*g];
      ai = ((ab + a) & 1) + ah;
      aq = 1. / (1. + n[(ad)-1 + (e + 1) * ((ac)-1 + ((ae)-h) * d)] * ap);
      ar = aq * 2. - 1.;
      aj = k[(ad) + (e + 2) * ((ab)-1 + ((ac)-1) * (c + 1))];
      as = 2. / (1. / o[(aj)-1] + 1. / o[(k[(ad - 1) + (e + 2) * ((ab + 1) - 1 + ((ac)-1) * (c + 1))]) - 1]);
      ak = ai + 4 * (ad & 1);

      au = p[(ak)-1];
      av = 1.0 - au;
      at = q[(aj)-1] * (q[(aj)-1] * r[(ak)-1] + s[(ak)-1]);
      if (ad < e) {
        an = u[((ad)-1) * 4 + (1) - 1] * z[(ad - 2) + (e + 2) * ((ab) + 1 + (ac) * (c + 3))] + u[((ad)-1) * 4 + (2) - 1] * z[(ad - 1) + (e + 2) * ((ab) + 1 + (ac) * (c + 3))] + u[((ad)-1) * 4 + (3) - 1] * z[(ad) + (e + 2) * ((ab) + 1 + (ac) * (c + 3))] + u[((ad)-1) * 4 + (4) - 1] * z[(ad + 1) + (e + 2) * ((ab) + 1 + (ac) * (c + 3))];
      } else {
        an = u[((ad)-1) * 4 + (2) - 1] / l * (z[(ad - 1) + (e + 2) * ((ab) + 1 + (ac) * (c + 3))] - z[(ad) + (e + 2) * ((ab) + 1 + (ac) * (c + 3))]);
      }
      am = an * as;
      ao = w[(ad)-1 + (e + 1) * ((ab)-1 + c * ((ac)-1))];
      w[(ad)-1 + (e + 1) * ((ab)-1 + c * ((ac)-1))] = ao * au + at * am * av;
      al = v[(ad)-1 + (e + 1) * ((ab) + 1 + ((ac)-1) * (c + 3))] - x[(ad)-1 + (e + 1) * ((af)-1 + aw * ((ac)-1))] + am - ao - w[(ad)-1 + (e + 1) * ((ab)-1 + c * ((ac)-1))];
      am = as * t[((ab)-1) * 4 + (2) - 1] / l * (aa[(ad) + (e + 2) * ((ab) + (ac) * (c + 3))] - aa[(ad) + (e + 2) * ((ab + 1) + (ac) * (c + 3))]);
      ao = y[(ad)-1 + (e + 1) * ((af)-1 + aw * ((ac)-1))];
      y[(ad)-1 + (e + 1) * ((af)-1 + aw * ((ac)-1))] = ao * au + at * am * av;
      x[(ad)-1 + (e + 1) * ((af)-1 + aw * ((ac)-1))] = ar * x[(ad)-1 + (e + 1) * ((af)-1 + aw * ((ac)-1))] + aq * (am - ao - y[(ad)-1 + (e + 1) * ((af)-1 + aw * ((ac)-1))]);
      v[(ad)-1 + (e + 1) * ((ab) + 1 + ((ac)-1) * (c + 3))] = al + x[(ad)-1 + (e + 1) * ((af)-1 + aw * ((ac)-1))];
    }
  }

  return;
}

__kernel void P(int a, int b, int c, int d, int e, int f, __global int* g, __global int* h, float i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t)

{
  int u, v, w, x, y, z, aa, ab;
  float ac, ad, ae, af, ag, ah, ai, aj;

  int ak = g[12];
  int al = g[8];
  w = get_group_id(0) * get_local_size(0) + get_local_id(0) + ak;
  u = get_group_id(1) * get_local_size(1) + get_local_id(1) + al;

  if (u > g[9] || w > g[17]) {
    return;
  }

  for (x = e; x <= f; x++) {
    for (v = g[4 * x]; v <= g[1 + 4 * x]; v++) {
      y = 2 * ((v + b) & 1) + 1;
      z = ((u + a) & 1) + y;
      aa = h[(w) + (d + 2) * ((u)-1 + ((v)-1) * (c + 1))];
      ag = 2. / (1. / j[(aa)-1] + 1. / j[(h[(w - 1) + (d + 2) * ((u + 1) - 1 + ((v)-1) * (c + 1))]) - 1]);
      ab = z + 4 * (w & 1);

      ai = k[(ab)-1];
      aj = 1.0 - ai;
      ah = l[(aa)-1] * (l[(aa)-1] * m[(ab)-1] + n[(ab)-1]);
      ae = o[((u)-1) * 4 + (1) - 1] * t[(w) + (d + 2) * ((u - 1) + (v) * (c + 3))] + o[((u)-1) * 4 + (2) - 1] * t[(w) + (d + 2) * ((u) + (v) * (c + 3))] + o[((u)-1) * 4 + (3) - 1] * t[(w) + (d + 2) * ((u + 1) + (v) * (c + 3))] + o[((u)-1) * 4 + (4) - 1] * t[(w) + (d + 2) * ((u + 2) + (v) * (c + 3))];
      if (w < d) {
        ad = p[((w)-1) * 4 + (1) - 1] * s[(w - 2) + (d + 2) * ((u) + 1 + (v) * (c + 3))] + p[((w)-1) * 4 + (2) - 1] * s[(w - 1) + (d + 2) * ((u) + 1 + (v) * (c + 3))] + p[((w)-1) * 4 + (3) - 1] * s[(w) + (d + 2) * ((u) + 1 + (v) * (c + 3))] + p[((w)-1) * 4 + (4) - 1] * s[(w + 1) + (d + 2) * ((u) + 1 + (v) * (c + 3))];
      } else {
        ad = p[((w)-1) * 4 + (2) - 1] / i * (s[(w - 1) + (d + 2) * ((u) + 1 + (v) * (c + 3))] - s[(w) + (d + 2) * ((u) + 1 + (v) * (c + 3))]);
      }
      ac = (ae + ad) * ag;
      af = r[(w)-1 + (d + 1) * ((u)-1 + c * ((v)-1))];
      r[(w)-1 + (d + 1) * ((u)-1 + c * ((v)-1))] = af * ai + ah * ac * aj;
      q[(w)-1 + (d + 1) * ((u) + 1 + ((v)-1) * (c + 3))] = q[(w)-1 + (d + 1) * ((u) + 1 + ((v)-1) * (c + 3))] + ac - af - r[(w)-1 + (d + 1) * ((u)-1 + c * ((v)-1))];
    }
  }

  return;
}

__kernel void Q(int a, int b, int c, int d, int e, int f, __global int* g, __global int* h, float i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t)

{
  int u, v, w, x, y, z, aa, ab;
  float ac, ad, ae, af, ag, ah, ai, aj;

  int ak = g[12];
  int al = g[2];
  w = get_group_id(0) * get_local_size(0) + get_local_id(0) + ak;
  v = get_group_id(1) * get_local_size(1) + get_local_id(1) + al;

  if (v > g[3] || w > g[17]) {
    return;
  }

  y = 2 * ((v + b) & 1) + 1;
  for (x = e; x <= f; x++) {
    for (u = g[6 + 4 * x]; u <= g[7 + 4 * x]; u++) {
      z = ((u + a) & 1) + y;
      aa = h[(w) + (c + 2) * ((u)-1 + ((v)-1) * (d + 1))];
      ag = 2. / (1. / j[(aa)-1] + 1. / j[(h[(w - 1) + (c + 2) * ((u)-1 + ((v + 1) - 1) * (d + 1))]) - 1]);
      ab = z + 4 * (w & 1);

      ai = k[(ab)-1];
      aj = 1.0 - ai;
      ah = l[(aa)-1] * (l[(aa)-1] * m[(ab)-1] + n[(ab)-1]);
      ae = o[((v)-1) * 4 + (1) - 1] * t[(w) + (c + 2) * ((u) + (v - 1) * (d + 3))] + o[((v)-1) * 4 + (2) - 1] * t[(w) + (c + 2) * ((u) + (v) * (d + 3))] + o[((v)-1) * 4 + (3) - 1] * t[(w) + (c + 2) * ((u) + (v + 1) * (d + 3))] + o[((v)-1) * 4 + (4) - 1] * t[(w) + (c + 2) * ((u) + (v + 2) * (d + 3))];
      if (w < c) {
        ad = p[((w)-1) * 4 + (1) - 1] * s[(w - 2) + (c + 2) * ((u) + ((v) + 1) * (d + 3))] + p[((w)-1) * 4 + (2) - 1] * s[(w - 1) + (c + 2) * ((u) + ((v) + 1) * (d + 3))] + p[((w)-1) * 4 + (3) - 1] * s[(w) + (c + 2) * ((u) + ((v) + 1) * (d + 3))] + p[((w)-1) * 4 + (4) - 1] * s[(w + 1) + (c + 2) * ((u) + ((v) + 1) * (d + 3))];
      } else {
        ad = p[((w)-1) * 4 + (2) - 1] / i * (s[(w - 1) + (c + 2) * ((u) + ((v) + 1) * (d + 3))] - s[(w) + (c + 2) * ((u) + ((v) + 1) * (d + 3))]);
      }
      ac = (ae + ad) * ag;
      af = r[(w)-1 + (c + 1) * ((u)-1 + d * ((v)-1))];
      r[(w)-1 + (c + 1) * ((u)-1 + d * ((v)-1))] = af * ai + ah * ac * aj;
      q[(w)-1 + (c + 1) * ((u)-1 + ((v) + 1) * d)] = q[(w)-1 + (c + 1) * ((u)-1 + ((v) + 1) * d)] + ac - af - r[(w)-1 + (c + 1) * ((u)-1 + d * ((v)-1))];
    }
  }

  return;
}

__kernel void R(int a, int b, int c, int d, int e, int f, int g, __global int* h, __global int* i, float j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y)

{
  int z, aa, ab, ac, ad, ae, af, ag, ah, ai;
  float aj, ak, al, am, an, ao, ap, aq, ar, as, at;

  int au = h[12];
  int av = h[6];
  ab = get_group_id(0) * get_local_size(0) + get_local_id(0) + au;
  z = get_group_id(1) * get_local_size(1) + get_local_id(1) + av;

  if (z > h[11] || ab > h[17]) {
    return;
  }

  ad = 0;
  for (ac = f; ac <= g; ac++) {
    ae = 0;
    for (aa = h[4 * ac]; aa <= h[1 + 4 * ac]; aa++) {
      ae = ae + 1;
      ad = ad + 1;
      an = k[(ae)-1 + (ac)*c];
      af = 2 * ((aa + b) & 1) + 1;

      ag = ((z + a) & 1) + af;
      ao = 1. / (1. + l[(ab)-1 + (e + 1) * ((z)-1 + ((ac)-f) * d)] * an);
      ap = ao * 2. - 1.;
      ah = i[(ab) + (e + 2) * ((z)-1 + ((aa)-1) * (d + 1))];
      aq = 2. / (1. / m[(ah)-1] + 1. / m[(i[(ab - 1) + (e + 2) * ((z)-1 + ((aa + 1) - 1) * (d + 1))]) - 1]);
      ai = ag + 4 * (ab & 1);

      as = n[(ai)-1];
      at = 1.0 - as;
      ar = o[(ah)-1] * (o[(ah)-1] * p[(ai)-1] + q[(ai)-1]);
      if (ab < e) {
        al = s[((ab)-1) * 4 + (1) - 1] * x[(ab - 2) + (e + 2) * ((z) + ((aa) + 1) * (d + 3))] + s[((ab)-1) * 4 + (2) - 1] * x[(ab - 1) + (e + 2) * ((z) + ((aa) + 1) * (d + 3))] + s[((ab)-1) * 4 + (3) - 1] * x[(ab) + (e + 2) * ((z) + ((aa) + 1) * (d + 3))] + s[((ab)-1) * 4 + (4) - 1] * x[(ab + 1) + (e + 2) * ((z) + ((aa) + 1) * (d + 3))];
      } else {
        al = s[((ab)-1) * 4 + (2) - 1] / j * (x[(ab - 1) + (e + 2) * ((z) + ((aa) + 1) * (d + 3))] - x[(ab) + (e + 2) * ((z) + ((aa) + 1) * (d + 3))]);
      }
      ak = al * aq;
      am = u[(ab)-1 + (e + 1) * ((z)-1 + d * ((aa)-1))];
      u[(ab)-1 + (e + 1) * ((z)-1 + d * ((aa)-1))] = am * as + ar * ak * at;
      aj = t[(ab)-1 + (e + 1) * ((z)-1 + ((aa) + 1) * d)] - v[(ab)-1 + (e + 1) * ((z)-1 + d * ((ad)-1))] + ak - am - u[(ab)-1 + (e + 1) * ((z)-1 + d * ((aa)-1))];
      ak = aq * r[((aa)-1) * 4 + (2) - 1] / j * (y[(ab) + (e + 2) * ((z) + (aa) * (d + 3))] - y[(ab) + (e + 2) * ((z) + (aa + 1) * (d + 3))]);
      am = w[(ab)-1 + (e + 1) * ((z)-1 + d * ((ad)-1))];
      w[(ab)-1 + (e + 1) * ((z)-1 + d * ((ad)-1))] = am * as + ar * ak * at;
      v[(ab)-1 + (e + 1) * ((z)-1 + d * ((ad)-1))] = ap * v[(ab)-1 + (e + 1) * ((z)-1 + d * ((ad)-1))] + ao * (ak - am - w[(ab)-1 + (e + 1) * ((z)-1 + d * ((ad)-1))]);
      t[(ab)-1 + (e + 1) * ((z)-1 + ((aa) + 1) * d)] = aj + v[(ab)-1 + (e + 1) * ((z)-1 + d * ((ad)-1))];
    }
  }

  return;
}

__kernel void S(int a, int b, int c, int d, int e, __global int* f, __global int* g, __global float* h, __global float* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab,
                __global float* ac, __global float* ad)

{
  int ae, af, ag, ah, ai, aj, ak;
  float al, am, an, ao, ap, aq, ar, as, at, au, av, aw, ax, ay, az, ba, bb, bc;

  int bd = f[12];
  int be = f[8];
  ag = get_group_id(0) * get_local_size(0) + get_local_id(0) + bd;
  ae = get_group_id(1) * get_local_size(1) + get_local_id(1) + be;

  if (ag > f[15] || ae > f[9]) {
    return;
  }

  for (af = f[2]; af <= f[3]; af++) {
    ah = 2 * ((af + b) & 1) + 1;
    aj = ((ae + a) & 1) + ah;
    al = w[(1) - 1 + 4 * ((ae)-1)] * ab[(ag) + (d + 1) * ((ae - 2) + 1 + (c + 3) * (af))] + w[(2) - 1 + 4 * ((ae)-1)] * ab[(ag) + (d + 1) * ((ae - 1) + 1 + (c + 3) * (af))] + w[(3) - 1 + 4 * ((ae)-1)] * ab[(ag) + (d + 1) * ((ae) + 1 + (c + 3) * (af))] + w[(4) - 1 + 4 * ((ae)-1)] * ab[(ag) + (d + 1) * ((ae + 1) + 1 + (c + 3) * (af))];
    am = x[(1) - 1 + 4 * ((af)-1)] * ac[(ag) + (d + 1) * ((ae) + (c + 3) * ((af - 2) + 1))] + x[(2) - 1 + 4 * ((af)-1)] * ac[(ag) + (d + 1) * ((ae) + (c + 3) * ((af - 1) + 1))] + x[(3) - 1 + 4 * ((af)-1)] * ac[(ag) + (d + 1) * ((ae) + (c + 3) * ((af) + 1))] + x[(4) - 1 + 4 * ((af)-1)] * ac[(ag) + (d + 1) * ((ae) + (c + 3) * ((af + 1) + 1))];
    ao = y[(1) - 1 + 4 * ((ae)-1)] * ac[(ag) + (d + 1) * ((ae - 1) + (c + 3) * ((af) + 1))] + y[(2) - 1 + 4 * ((ae)-1)] * ac[(ag) + (d + 1) * ((ae) + (c + 3) * ((af) + 1))] + y[(3) - 1 + 4 * ((ae)-1)] * ac[(ag) + (d + 1) * ((ae + 1) + (c + 3) * ((af) + 1))] + y[(4) - 1 + 4 * ((ae)-1)] * ac[(ag) + (d + 1) * ((ae + 2) + (c + 3) * ((af) + 1))] + z[(1) - 1 + 4 * ((af)-1)] * ab[(ag) + (d + 1) * ((ae) + 1 + (c + 3) * (af - 1))] +
         z[(2) - 1 + 4 * ((af)-1)] * ab[(ag) + (d + 1) * ((ae) + 1 + (c + 3) * (af))] + z[(3) - 1 + 4 * ((af)-1)] * ab[(ag) + (d + 1) * ((ae) + 1 + (c + 3) * (af + 1))] + z[(4) - 1 + 4 * ((af)-1)] * ab[(ag) + (d + 1) * ((ae) + 1 + (c + 3) * (af + 2))];
    an = aa[(1) - 1 + 4 * ((ag)-1)] * ad[(ag - 1) + (d + 1) * ((ae) + (c + 3) * (af))] + aa[(2) - 1 + 4 * ((ag)-1)] * ad[(ag) + (d + 1) * ((ae) + (c + 3) * (af))] + aa[(3) - 1 + 4 * ((ag)-1)] * ad[(ag + 1) + (d + 1) * ((ae) + (c + 3) * (af))] + aa[(4) - 1 + 4 * ((ag)-1)] * ad[(ag + 2) + (d + 1) * ((ae) + (c + 3) * (af))];
    ap = al + am + an;
    ai = g[(ag) + (d + 1) * ((ae)-1 + ((af)-1) * (c + 1))];
    av = h[(ai)-1];
    aw = 2. * i[(ai)-1];
    ba = av + aw;
    au = ao / (1. / aw + .5 / i[(g[(ag) + (d + 1) * ((ae + 1) - 1 + ((af + 1) - 1) * (c + 1))]) - 1]);
    ak = aj + 4 * ((ag + e) & 1);

    ax = j[(ak)-1];
    ay = 1.0 - ax;
    bb = ba * k[(ai)-1] * (k[(ai)-1] * m[(ak)-1] + n[(ak)-1]);
    bc = aw * l[(ai)-1] * (l[(ai)-1] * m[(ak)-1] + n[(ak)-1]);
    aq = s[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    s[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = aq * ax + (bb * ap - bc * (am + an)) * ay;
    o[(ag)-1 + d * ((ae) + ((af)-1) * (c + 3))] = o[(ag)-1 + d * ((ae) + ((af)-1) * (c + 3))] + aw * al + av * ap - aq - s[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    ar = u[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    u[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = ar * ax + (bb * ap - bc * (al + an)) * ay;
    q[(ag)-1 + d * (((ae)-1) + (af)*c)] = q[(ag)-1 + d * (((ae)-1) + (af)*c)] + aw * am + av * ap - ar - u[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    as = v[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    v[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = as * ax + (bb * ap - bc * (al + am)) * ay;
    r[(ag) + (d + 1) * ((ae)-1 + ((af)-1) * c)] = r[(ag) + (d + 1) * ((ae)-1 + ((af)-1) * c)] + aw * an + av * ap - as - v[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    at = t[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
    t[(ag)-1 + d * ((ae)-1 + c * ((af)-1))] = at * ax + bc / aw * au * ay;
    p[(ag)-1 + d * ((ae) + 1 + ((af) + 1) * (c + 3))] = p[(ag)-1 + d * ((ae) + 1 + ((af) + 1) * (c + 3))] + au - at - t[(ag)-1 + d * ((ae)-1 + c * ((af)-1))];
  }

  return;
}

__kernel void T(int a, int b, int c, int d, int e, __global int* f, __global int* g, __global float* h, __global float* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v)

{
  int w, x, y, z, aa, ab, ac;
  float ad, ae, af, ag, ah, ai, aj, ak;

  int al = f[12];
  int am = f[8];
  y = get_group_id(0) * get_local_size(0) + get_local_id(0) + al;
  w = get_group_id(1) * get_local_size(1) + get_local_id(1) + am;

  if (y > f[15] || w > f[9]) {
    return;
  }

  for (x = f[2]; x <= f[3]; x++) {
    z = 2 * ((x + b) & 1) + 1;
    ab = ((w + a) & 1) + z;
    aa = g[(y) + (e + 1) * ((w)-1 + ((x)-1) * (d + 1))];
    ah = h[(aa)-1];
    af = (m[(1) - 1 + 4 * ((w)-1)] * v[(y) + (e + 1) * ((w - 1) + (d + 3) * (x))] + m[(2) - 1 + 4 * ((w)-1)] * v[(y) + (e + 1) * ((w) + (d + 3) * (x))] + m[(3) - 1 + 4 * ((w)-1)] * v[(y) + (e + 1) * ((w + 1) + (d + 3) * (x))] + m[(4) - 1 + 4 * ((w)-1)] * v[(y) + (e + 1) * ((w + 2) + (d + 3) * (x))] + o[(1) - 1 + 4 * ((y)-1)] * t[(y - 2) + (e + 1) * ((w) + 1 + (d + 3) * (x))] + o[(2) - 1 + 4 * ((y)-1)] * t[(y - 1) + (e + 1) * ((w) + 1 + (d + 3) * (x))] +
          o[(3) - 1 + 4 * ((y)-1)] * t[(y) + (e + 1) * ((w) + 1 + (d + 3) * (x))] + o[(4) - 1 + 4 * ((y)-1)] * t[(y + 1) + (e + 1) * ((w) + 1 + (d + 3) * (x))]) /
         (.5 / ah + .5 / h[(g[(y - 1) + (e + 1) * ((w + 1) - 1 + ((x)-1) * (d + 1))]) - 1]);
    ag = (n[(1) - 1 + 4 * ((x)-1)] * v[(y) + (e + 1) * ((w) + (d + 3) * (x - 1))] + n[(2) - 1 + 4 * ((x)-1)] * v[(y) + (e + 1) * ((w) + (d + 3) * (x))] + n[(3) - 1 + 4 * ((x)-1)] * v[(y) + (e + 1) * ((w) + (d + 3) * (x + 1))] + n[(4) - 1 + 4 * ((x)-1)] * v[(y) + (e + 1) * ((w) + (d + 3) * (x + 2))] + o[(1) - 1 + 4 * ((y)-1)] * u[(y - 2) + (e + 1) * ((w) + (d + 3) * ((x) + 1))] + o[(2) - 1 + 4 * ((y)-1)] * u[(y - 1) + (e + 1) * ((w) + (d + 3) * ((x) + 1))] +
          o[(3) - 1 + 4 * ((y)-1)] * u[(y) + (e + 1) * ((w) + (d + 3) * ((x) + 1))] + o[(4) - 1 + 4 * ((y)-1)] * u[(y + 1) + (e + 1) * ((w) + (d + 3) * ((x) + 1))]) /
         (.5 / ah + .5 / h[(g[(y - 1) + (e + 1) * ((w)-1 + ((x + 1) - 1) * (d + 1))]) - 1]);
    ac = ab + 4 * ((y + c) & 1);

    ai = i[(ac)-1];
    aj = 1.0 - ai;
    ak = j[(aa)-1] * (j[(aa)-1] * k[(ac)-1] + l[(ac)-1]);
    ad = r[(y)-1 + e * ((w)-1 + d * ((x)-1))];
    r[(y)-1 + e * ((w)-1 + d * ((x)-1))] = ad * ai + ak * af * aj;
    p[(y) + (e + 1) * ((w) + 1 + ((x)-1) * (d + 3))] = p[(y) + (e + 1) * ((w) + 1 + ((x)-1) * (d + 3))] + af - ad - r[(y)-1 + e * ((w)-1 + d * ((x)-1))];
    ae = s[(y)-1 + e * ((w)-1 + d * ((x)-1))];
    s[(y)-1 + e * ((w)-1 + d * ((x)-1))] = ae * ai + ak * ag * aj;
    q[(y) + (e + 1) * ((w)-1 + ((x) + 1) * d)] = q[(y) + (e + 1) * ((w)-1 + ((x) + 1) * d)] + ag - ae - s[(y)-1 + e * ((w)-1 + d * ((x)-1))];
  }

  return;
}

__kernel void U(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, __global int* k, __global int* l, float m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab, __global float* ac, __global float* ad, __global float* ae, __global float* af,
                __global float* ag, __global float* ah, __global float* ai, __global float* aj, __global float* ak, __global float* al)

{
  int am, an, ao, ap, aq, ar, as, at, au, av;
  float aw, ax, ay, az, ba, bb, bc, bd, be, bf, bg, bh, bi, bj, bk, bl, bm, bn, bo, bp;
  int bq;

  bq = (j - i + 1) * c + j;

  int br = k[12];
  int bs = k[0];
  ao = get_group_id(0) * get_local_size(0) + get_local_id(0) + br;
  an = get_group_id(1) * get_local_size(1) + get_local_id(1) + bs;

  if (an > k[5] || ao > k[17]) {
    return;
  }

  as = 2 * ((an + b) & 1) + 1;
  aq = 0;
  for (ap = i; ap <= j; ap++) {
    ar = 0;
    for (am = k[6 + 4 * ap]; am <= k[7 + 4 * ap]; am++) {
      ar = ar + 1;
      aq = aq + 1;
      bg = n[(ar)-1 + (ap)*d];
      at = ((am + a) & 1) + as;
      bh = 1. / (1. + o[(ao)-1 + h * ((an)-1 + ((ap)-i) * g)] * bg);
      bi = bh * 2.0 - 1.0;
      au = l[(ao) + (h + 1) * ((am)-1 + ((an)-1) * (f + 1))];
      bj = p[(au)-1];
      bk = 2. * q[(au)-1];
      bl = bj + bk;
      av = at + 4 * ((ao + e) & 1);

      bm = r[(av)-1];
      bn = 1.0 - bm;
      bo = bl * s[(au)-1] * (s[(au)-1] * u[(av)-1] + v[(av)-1]);
      bp = bk * t[(au)-1] * (t[(au)-1] * u[(av)-1] + v[(av)-1]);
      aw = z[(ao)-1 + h * ((am) + ((an)-1) * (f + 3))] - af[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
      ax = aa[(ao)-1 + h * (((am)-1) + (an)*f)] - ag[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
      ay = ab[(ao) + (h + 1) * ((am)-1 + ((an)-1) * f)] - ag[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
      if (an > k[1] && an < k[4]) {
        ba = x[(1) - 1 + 4 * ((an)-1)] * ak[(ao) + (h + 1) * ((am) + (f + 3) * ((an - 2) + 1))] + x[(2) - 1 + 4 * ((an)-1)] * ak[(ao) + (h + 1) * ((am) + (f + 3) * ((an - 1) + 1))] + x[(3) - 1 + 4 * ((an)-1)] * ak[(ao) + (h + 1) * ((am) + (f + 3) * ((an) + 1))] + x[(4) - 1 + 4 * ((an)-1)] * ak[(ao) + (h + 1) * ((am) + (f + 3) * ((an + 1) + 1))];
        if (ao < k[16]) {
          bb = y[(1) - 1 + 4 * ((ao)-1)] * al[(ao - 1) + (h + 1) * ((am) + (f + 3) * (an))] + y[(2) - 1 + 4 * ((ao)-1)] * al[(ao) + (h + 1) * ((am) + (f + 3) * (an))] + y[(3) - 1 + 4 * ((ao)-1)] * al[(ao + 1) + (h + 1) * ((am) + (f + 3) * (an))] + y[(4) - 1 + 4 * ((ao)-1)] * al[(ao + 2) + (h + 1) * ((am) + (f + 3) * (an))];
        } else {
          bb = 0.0;
        }
        bc = ba + bb;
        bd = ac[(ao)-1 + h * ((am)-1 + f * ((an)-1))];
        ac[(ao)-1 + h * ((am)-1 + f * ((an)-1))] = bd * bm + (bo - bp) * bc * bn;
        aw = aw + bj * bc - bd - ac[(ao)-1 + h * ((am)-1 + f * ((an)-1))];
        be = ad[(ao)-1 + h * ((am)-1 + f * ((an)-1))];
        ad[(ao)-1 + h * ((am)-1 + f * ((an)-1))] = be * bm + (bo * bc - bp * bb) * bn;
        ax = ax + bk * ba + bj * bc - be - ad[(ao)-1 + h * ((am)-1 + f * ((an)-1))];
        bf = ae[(ao)-1 + h * ((am)-1 + f * ((an)-1))];
        ae[(ao)-1 + h * ((am)-1 + f * ((an)-1))] = bf * bm + (bo * bc - bp * ba) * bn;
        ay = ay + bk * bb + bj * bc - bf - ae[(ao)-1 + h * ((am)-1 + f * ((an)-1))];
      }
      az = w[(2) - 1 + 4 * ((am)-1)] / m * (aj[(ao) + (h + 1) * ((am - 1) + 1 + (f + 3) * (an))] - aj[(ao) + (h + 1) * ((am) + 1 + (f + 3) * (an))]);
      bd = ah[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
      ah[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))] = bd * bm + bo * az * bn;
      af[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))] = bi * af[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))] + bh * (bl * az - bd - ah[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))]);
      z[(ao)-1 + h * ((am) + ((an)-1) * (f + 3))] = aw + af[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
      be = ai[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
      ai[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))] = be * bm + (bo - bp) * az * bn;
      ag[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))] = bi * ag[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))] + bh * (bj * az - be - ai[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))]);
      aa[(ao)-1 + h * (((am)-1) + (an)*f)] = ax + ag[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
      ab[(ao) + (h + 1) * ((am)-1 + ((an)-1) * f)] = ay + ag[(ao)-1 + h * ((aq)-1 + bq * ((an)-1))];
    }
  }

  return;
}

__kernel void V(int a, int b, int c, int d, int e, int f, int g, int h, __global int* i, __global int* j, float k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab, __global float* ac, __global float* ad, __global float* ae,
                __global float* af, __global float* ag, __global float* ah, __global float* ai, __global float* aj)

{
  int ak, al, am, an, ao, ap, aq, ar, as, at;
  float au, av, aw, ax, ay, az, ba, bb, bc, bd, be, bf, bg, bh, bi, bj, bk, bl, bm, bn;

  int bo = i[6];
  int bp = i[12];
  am = get_group_id(0) * get_local_size(0) + get_local_id(0) + bp;
  ak = get_group_id(1) * get_local_size(1) + get_local_id(1) + bo;

  if (ak > i[11] || am > i[17]) {
    return;
  }

  ao = 0;
  for (an = g; an <= h; an++) {
    ap = 0;

    for (al = i[4 * an]; al <= i[1 + 4 * an]; al++) {
      ap = ap + 1;
      ao = ao + 1;
      be = l[(ap)-1 + (an)*f];
      aq = 2 * ((al + b) & 1) + 1;

      ar = ((ak + a) & 1) + aq;
      bf = 1. / (1. + m[(am)-1 + e * ((ak)-1 + ((an)-g) * d)] * be);
      bg = bf * 2.0 - 1.;
      as = j[(am) + (e + 1) * ((ak)-1 + ((al)-1) * (d + 1))];
      bh = n[(as)-1];
      bi = 2. * o[(as)-1];
      bj = bh + bi;
      at = ar + 4 * ((am + c) & 1);

      bk = p[(at)-1];
      bl = 1.0 - bk;
      bm = bj * q[(as)-1] * (q[(as)-1] * s[(at)-1] + t[(at)-1]);
      bn = bi * r[(as)-1] * (r[(as)-1] * s[(at)-1] + t[(at)-1]);
      au = x[(am)-1 + e * ((ak) + ((al)-1) * (d + 3))] - ad[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
      av = y[(am)-1 + e * (((ak)-1) + (al)*d)] - ae[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
      aw = z[(am) + (e + 1) * ((ak)-1 + ((al)-1) * d)] - ad[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
      if (am < i[16]) {
        az = w[(1) - 1 + 4 * ((am)-1)] * aj[(am - 1) + (e + 1) * ((ak) + (d + 3) * (al))] + w[(2) - 1 + 4 * ((am)-1)] * aj[(am) + (e + 1) * ((ak) + (d + 3) * (al))] + w[(3) - 1 + 4 * ((am)-1)] * aj[(am + 1) + (e + 1) * ((ak) + (d + 3) * (al))] + w[(4) - 1 + 4 * ((am)-1)] * aj[(am + 2) + (e + 1) * ((ak) + (d + 3) * (al))];
        if (ak > i[7] && ak < i[10]) {
          ax = u[(1) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak - 2) + 1 + (d + 3) * (al))] + u[(2) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak - 1) + 1 + (d + 3) * (al))] + u[(3) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak) + 1 + (d + 3) * (al))] + u[(4) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak + 1) + 1 + (d + 3) * (al))];
        } else {
          ax = 0.0;
        }
        ba = ax + az;
        bb = aa[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
        aa[(am)-1 + e * ((ak)-1 + d * ((al)-1))] = bb * bk + (bm * ba - bn * az) * bl;
        au = au + bi * ax + bh * ba - bb - aa[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
        bc = ab[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
        ab[(am)-1 + e * ((ak)-1 + d * ((al)-1))] = bc * bk + (bm - bn) * ba * bl;
        av = av + bh * ba - bc - ab[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
        bd = ac[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
        ac[(am)-1 + e * ((ak)-1 + d * ((al)-1))] = bd * bk + (bm * ba - bn * ax) * bl;
        aw = aw + bi * az + bh * ba - bd - ac[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
      } else {
        if (ak > i[7] && ak < i[10]) {
          ax = u[(1) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak - 2) + 1 + (d + 3) * (al))] + u[(2) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak - 1) + 1 + (d + 3) * (al))] + u[(3) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak) + 1 + (d + 3) * (al))] + u[(4) - 1 + 4 * ((ak)-1)] * ah[(am) + (e + 1) * ((ak + 1) + 1 + (d + 3) * (al))];
          bb = aa[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
          aa[(am)-1 + e * ((ak)-1 + d * ((al)-1))] = bb * bk + bm * ax * bl;
          au = au + bj * ax - bb - aa[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
          bc = ab[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
          ab[(am)-1 + e * ((ak)-1 + d * ((al)-1))] = bc * bk + (bm - bn) * ax * bl;
          av = av + bh * ax - bc - ab[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
          bd = ac[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
          ac[(am)-1 + e * ((ak)-1 + d * ((al)-1))] = bd * bk + (bm - bn) * ax * bl;
          aw = aw + bh * ax - bd - ac[(am)-1 + e * ((ak)-1 + d * ((al)-1))];
        }
      }
      ay = v[(2) - 1 + 4 * ((al)-1)] / k * (ai[(am) + (e + 1) * ((ak) + (d + 3) * ((al - 1) + 1))] - ai[(am) + (e + 1) * ((ak) + (d + 3) * ((al) + 1))]);
      bb = af[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
      af[(am)-1 + e * ((ak)-1 + d * ((ao)-1))] = bb * bk + (bm - bn) * ay * bl;
      ad[(am)-1 + e * ((ak)-1 + d * ((ao)-1))] = bg * ad[(am)-1 + e * ((ak)-1 + d * ((ao)-1))] + bf * (bh * ay - bb - af[(am)-1 + e * ((ak)-1 + d * ((ao)-1))]);
      x[(am)-1 + e * ((ak) + ((al)-1) * (d + 3))] = au + ad[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
      z[(am) + (e + 1) * ((ak)-1 + ((al)-1) * d)] = aw + ad[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
      bc = ag[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
      ag[(am)-1 + e * ((ak)-1 + d * ((ao)-1))] = bc * bk + bm * ay * bl;
      ae[(am)-1 + e * ((ak)-1 + d * ((ao)-1))] = bg * ae[(am)-1 + e * ((ak)-1 + d * ((ao)-1))] + bf * (bj * ay - bc - ag[(am)-1 + e * ((ak)-1 + d * ((ao)-1))]);
      y[(am)-1 + e * (((ak)-1) + (al)*d)] = av + ae[(am)-1 + e * ((ak)-1 + d * ((ao)-1))];
    }
  }

  return;
}

__kernel void W(int a, int b, int c, int d, int e, int f, int g, __global int* h, __global int* i, float j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab, __global float* ac, __global float* ad,
                __global float* ae, __global float* af, __global float* ag, __global float* ah, __global float* ai)

{
  int aj, ak, al, am, an, ao, ap, aq, ar;
  float as, at, au, av, aw, ax, ay, az, ba, bb, bc, bd, be, bf, bg, bh, bi, bj, bk;

  int bl = h[16];
  int bm = h[6];

  al = get_group_id(0) * get_local_size(0) + get_local_id(0) + bl;
  aj = get_group_id(1) * get_local_size(1) + get_local_id(1) + bm;

  if (al > h[17] || aj > h[11]) {
    return;
  }

  for (ak = h[0]; ak <= h[5]; ak++) {
    ao = 2 * ((ak + b) & 1) + 1;
    ap = ((aj + a) & 1) + ao;
    an = 0;
    an = an + 1 + al - bl;
    bc = 1. / (1. + k[(aj)-1 + f * ((ak)-1)] * l[(an)-1 + (1) * d]);
    bd = bc * 2. - 1.;
    aq = i[(al) + (g + 1) * ((aj)-1 + ((ak)-1) * (f + 1))];
    be = m[(aq)-1];
    bf = 2. * n[(aq)-1];
    bg = be + bf;
    ar = ap + 4 * ((al + e) & 1);

    bh = o[(ar)-1];
    bi = 1.0 - bh;
    bj = bg * p[(aq)-1] * (p[(aq)-1] * r[(ar)-1] + s[(ar)-1]);
    bk = bf * q[(aq)-1] * (q[(aq)-1] * r[(ar)-1] + s[(ar)-1]);
    as = w[(al)-1 + g * ((aj) + ((ak)-1) * (f + 3))] - ac[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
    at = x[(al)-1 + g * (((aj)-1) + (ak)*f)] - ac[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
    au = y[(al) + (g + 1) * ((aj)-1 + ((ak)-1) * f)] - ad[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
    if (aj > h[7] && aj < h[10] && ak > h[1] && ak < h[4]) {
      av = t[(1) - 1 + 4 * ((aj)-1)] * ag[(al) + (g + 1) * ((aj - 2) + 1 + (f + 3) * (ak))] + t[(2) - 1 + 4 * ((aj)-1)] * ag[(al) + (g + 1) * ((aj - 1) + 1 + (f + 3) * (ak))] + t[(3) - 1 + 4 * ((aj)-1)] * ag[(al) + (g + 1) * ((aj) + 1 + (f + 3) * (ak))] + t[(4) - 1 + 4 * ((aj)-1)] * ag[(al) + (g + 1) * ((aj + 1) + 1 + (f + 3) * (ak))];
      aw = u[(1) - 1 + 4 * ((ak)-1)] * ah[(al) + (g + 1) * ((aj) + (f + 3) * ((ak - 2) + 1))] + u[(2) - 1 + 4 * ((ak)-1)] * ah[(al) + (g + 1) * ((aj) + (f + 3) * ((ak - 1) + 1))] + u[(3) - 1 + 4 * ((ak)-1)] * ah[(al) + (g + 1) * ((aj) + (f + 3) * ((ak) + 1))] + u[(4) - 1 + 4 * ((ak)-1)] * ah[(al) + (g + 1) * ((aj) + (f + 3) * ((ak + 1) + 1))];
      ay = av + aw;
      az = z[(al)-1 + g * ((aj)-1 + f * ((ak)-1))];
      z[(al)-1 + g * ((aj)-1 + f * ((ak)-1))] = az * bh + (bj * ay - bk * aw) * bi;
      as = as + bf * av + be * ay - az - z[(al)-1 + g * ((aj)-1 + f * ((ak)-1))];
      ba = aa[(al)-1 + g * ((aj)-1 + f * ((ak)-1))];
      aa[(al)-1 + g * ((aj)-1 + f * ((ak)-1))] = ba * bh + (bj * ay - bk * av) * bi;
      at = at + bf * aw + be * ay - ba - aa[(al)-1 + g * ((aj)-1 + f * ((ak)-1))];
      bb = ab[(al)-1 + g * ((aj)-1 + f * ((ak)-1))];
      ab[(al)-1 + g * ((aj)-1 + f * ((ak)-1))] = bb * bh + (bj - bk) * ay * bi;
      au = au + be * ay - bb - ab[(al)-1 + g * ((aj)-1 + f * ((ak)-1))];
    }
    ax = v[(2) - 1 + 4 * ((al)-1)] / j * (ai[(al) + (g + 1) * ((aj) + (f + 3) * (ak))] - ai[(al + 1) + (g + 1) * ((aj) + (f + 3) * (ak))]);
    az = ae[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
    ae[(an)-1 + c * ((aj)-1 + f * ((ak)-1))] = az * bh + (bj - bk) * ax * bi;
    ac[(an)-1 + c * ((aj)-1 + f * ((ak)-1))] = bd * ac[(an)-1 + c * ((aj)-1 + f * ((ak)-1))] + bc * (be * ax - az - ae[(an)-1 + c * ((aj)-1 + f * ((ak)-1))]);
    w[(al)-1 + g * ((aj) + ((ak)-1) * (f + 3))] = as + ac[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
    x[(al)-1 + g * (((aj)-1) + (ak)*f)] = at + ac[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
    bb = af[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
    af[(an)-1 + c * ((aj)-1 + f * ((ak)-1))] = bb * bh + bj * ax * bi;
    ad[(an)-1 + c * ((aj)-1 + f * ((ak)-1))] = bd * ad[(an)-1 + c * ((aj)-1 + f * ((ak)-1))] + bc * (bg * ax - bb - af[(an)-1 + c * ((aj)-1 + f * ((ak)-1))]);
    y[(al) + (g + 1) * ((aj)-1 + ((ak)-1) * f)] = au + ad[(an)-1 + c * ((aj)-1 + f * ((ak)-1))];
  }

  return;
}

__kernel void X(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, __global int* k, __global int* l, float m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab)

{
  int ac, ad, ae, af, ag, ah, ai, aj, ak, al;
  float am, an, ao, ap, aq, ar, as, at, au, av;
  int aw;

  aw = (j - i + 1) * c + 1 - i;

  int ax = k[12];
  int ay = k[0];
  ae = get_group_id(0) * get_local_size(0) + get_local_id(0) + ax;
  ad = get_group_id(1) * get_local_size(1) + get_local_id(1) + ay;

  if (ad > k[5] || ae > k[17]) {
    return;
  }

  ai = 2 * ((ad + b) & 1) + 1;
  ag = 0;
  for (af = i; af <= j; af++) {
    ah = 0;
    for (ac = k[6 + 4 * af]; ac <= k[7 + 4 * af]; ac++) {
      ah = ah + 1;
      ag = ag + 1;
      ap = n[(ah)-1 + (af)*d];
      aj = ((ac + a) & 1) + ai;
      aq = 1. / (1. + o[(ae)-1 + g * ((ad)-1 + ((af)-i) * f)] * ap);
      ar = aq * 2.0 - 1.;
      ak = l[(ae) + (g + 1) * ((ac)-1 + ((ad)-1) * (e + 1))];
      as = 2. / (1. / p[(ak)-1] + 1. / p[(l[(ae) + (g + 1) * ((ac + 1) - 1 + ((ad + 1) - 1) * (e + 1))]) - 1]);
      al = aj + 4 * ((ae + h) & 1);

      au = q[(al)-1];
      av = 1.0 - au;
      at = r[(ak)-1] * (r[(ak)-1] * s[(al)-1] + t[(al)-1]);
      am = w[(ae)-1 + g * ((ac) + 1 + ((ad) + 1) * (e + 3))] - y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))];
      if (ad > k[1] && ad < k[4]) {
        an = (v[(1) - 1 + 4 * ((ad)-1)] * aa[(ae) + (g + 1) * ((ac) + 1 + (e + 3) * (ad - 1))] + v[(2) - 1 + 4 * ((ad)-1)] * aa[(ae) + (g + 1) * ((ac) + 1 + (e + 3) * (ad))] + v[(3) - 1 + 4 * ((ad)-1)] * aa[(ae) + (g + 1) * ((ac) + 1 + (e + 3) * (ad + 1))] + v[(4) - 1 + 4 * ((ad)-1)] * aa[(ae) + (g + 1) * ((ac) + 1 + (e + 3) * (ad + 2))]) * as;
        ao = x[(ae)-1 + g * ((ac)-1 + e * ((ad)-1))];
        x[(ae)-1 + g * ((ac)-1 + e * ((ad)-1))] = ao * au + at * an * av;
        am = am + an - ao - x[(ae)-1 + g * ((ac)-1 + e * ((ad)-1))];
      }
      an = as * u[(2) - 1 + 4 * ((ac)-1)] / m * (ab[(ae) + (g + 1) * ((ac) + (e + 3) * ((ad) + 1))] - ab[(ae) + (g + 1) * ((ac + 1) + (e + 3) * ((ad) + 1))]);
      ao = z[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))];
      z[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))] = ao * au + at * an * av;
      y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))] = ar * y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))] + aq * (an - ao - z[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))]);
      w[(ae)-1 + g * ((ac) + 1 + ((ad) + 1) * (e + 3))] = am + y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))];
    }
  }

  return;
}

__kernel void Y(int a, int b, int c, int d, int e, int f, int g, int h, __global int* i, __global int* j, float k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z)

{
  int aa, ab, ac, ad, ae, af, ag, ah, ai, aj;
  float ak, al, am, an, ao, ap, aq, ar, as, at;

  int au = i[12];
  int av = i[6];
  ac = get_group_id(0) * get_local_size(0) + get_local_id(0) + au;
  aa = get_group_id(1) * get_local_size(1) + get_local_id(1) + av;

  if (aa > i[11] || ac > i[17]) {
    return;
  }

  ae = 0;
  for (ad = g; ad <= h; ad++) {
    af = 0;
    for (ab = i[4 * ad]; ab <= i[1 + 4 * ad]; ab++) {
      af = af + 1;
      ae = ae + 1;
      an = l[(af)-1 + (ad)*c];
      ag = 2 * ((ab + b) & 1) + 1;
      ah = ((aa + a) & 1) + ag;
      ao = 1. / (1. + m[(ac)-1 + f * ((aa)-1 + ((ad)-g) * e)] * an);
      ap = ao * 2. - 1.;
      ai = j[(ac) + (f + 1) * ((aa)-1 + ((ab)-1) * (e + 1))];
      aq = 2. / (1. / n[(ai)-1] + 1. / n[(j[(ac) + (f + 1) * ((aa + 1) - 1 + ((ab + 1) - 1) * (e + 1))]) - 1]);
      aj = ah + 4 * ((ac + d) & 1);

      as = o[(aj)-1];
      at = 1.0 - as;
      ar = p[(ai)-1] * (p[(ai)-1] * q[(aj)-1] + r[(aj)-1]);
      ak = u[(ac)-1 + f * ((aa) + 1 + ((ab) + 1) * (e + 3))] - w[(ac)-1 + f * ((aa)-1 + e * ((ae)-1))];
      if (aa > i[7] && aa < i[10]) {
        al = (s[(1) - 1 + 4 * ((aa)-1)] * z[(ac) + (f + 1) * ((aa - 1) + (e + 3) * ((ab) + 1))] + s[(2) - 1 + 4 * ((aa)-1)] * z[(ac) + (f + 1) * ((aa) + (e + 3) * ((ab) + 1))] + s[(3) - 1 + 4 * ((aa)-1)] * z[(ac) + (f + 1) * ((aa + 1) + (e + 3) * ((ab) + 1))] + s[(4) - 1 + 4 * ((aa)-1)] * z[(ac) + (f + 1) * ((aa + 2) + (e + 3) * ((ab) + 1))]) * aq;
        am = v[(ac)-1 + f * ((aa)-1 + e * ((ab)-1))];
        v[(ac)-1 + f * ((aa)-1 + e * ((ab)-1))] = am * as + ar * al * at;
        ak = ak + al - am - v[(ac)-1 + f * ((aa)-1 + e * ((ab)-1))];
      }
      al = aq * t[(2) - 1 + 4 * ((ab)-1)] / k * (y[(ac) + (f + 1) * ((aa) + 1 + (e + 3) * (ab))] - y[(ac) + (f + 1) * ((aa) + 1 + (e + 3) * (ab + 1))]);
      am = x[(ac)-1 + f * ((aa)-1 + e * ((ae)-1))];
      x[(ac)-1 + f * ((aa)-1 + e * ((ae)-1))] = am * as + ar * al * at;
      w[(ac)-1 + f * ((aa)-1 + e * ((ae)-1))] = ap * w[(ac)-1 + f * ((aa)-1 + e * ((ae)-1))] + ao * (al - am - x[(ac)-1 + f * ((aa)-1 + e * ((ae)-1))]);
      u[(ac)-1 + f * ((aa) + 1 + ((ab) + 1) * (e + 3))] = ak + w[(ac)-1 + f * ((aa)-1 + e * ((ae)-1))];
    }
  }

  return;
}

__kernel void Z(int a, int b, int c, int d, int e, __global int* f, __global int* g, __global float* h, __global float* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r)

{
  int s, t, u, v, w, x, y, z;
  float aa, ab, ac, ad, ae, af;

  int ag = f[16];
  int ah = f[8];
  u = get_group_id(0) * get_local_size(0) + get_local_id(0) + ag;
  s = get_group_id(1) * get_local_size(1) + get_local_id(1) + ah;

  if (u > f[17] || s > f[9]) {
    return;
  }

  for (t = f[2]; t <= f[3]; t++) {
    w = 2 * ((t + b) & 1) + 1;
    x = ((s + a) & 1) + w;
    y = g[(u) + (d + 1) * ((s)-1 + ((t)-1) * (c + 1))];
    ac = 2. / (1. / h[(y)-1] + 1. / h[(g[(u) + (d + 1) * ((s + 1) - 1 + ((t + 1) - 1) * (c + 1))]) - 1]);
    z = x + 4 * ((u + e) & 1);

    ae = i[(z)-1];
    af = 1.0 - ae;
    ad = j[(y)-1] * (j[(y)-1] * k[(z)-1] + l[(z)-1]);
    aa = (m[(1) - 1 + 4 * ((s)-1)] * r[(u) + (d + 1) * ((s - 1) + (c + 3) * ((t) + 1))] + m[(2) - 1 + 4 * ((s)-1)] * r[(u) + (d + 1) * ((s) + (c + 3) * ((t) + 1))] + m[(3) - 1 + 4 * ((s)-1)] * r[(u) + (d + 1) * ((s + 1) + (c + 3) * ((t) + 1))] + m[(4) - 1 + 4 * ((s)-1)] * r[(u) + (d + 1) * ((s + 2) + (c + 3) * ((t) + 1))] + n[(1) - 1 + 4 * ((t)-1)] * q[(u) + (d + 1) * ((s) + 1 + (c + 3) * (t - 1))] + n[(2) - 1 + 4 * ((t)-1)] * q[(u) + (d + 1) * ((s) + 1 + (c + 3) * (t))] +
          n[(3) - 1 + 4 * ((t)-1)] * q[(u) + (d + 1) * ((s) + 1 + (c + 3) * (t + 1))] + n[(4) - 1 + 4 * ((t)-1)] * q[(u) + (d + 1) * ((s) + 1 + (c + 3) * (t + 2))]) *
         ac;
    ab = p[(u)-1 + d * ((s)-1 + c * ((t)-1))];
    p[(u)-1 + d * ((s)-1 + c * ((t)-1))] = ab * ae + ad * aa * af;
    o[(u)-1 + d * ((s) + 1 + ((t) + 1) * (c + 3))] = o[(u)-1 + d * ((s) + 1 + ((t) + 1) * (c + 3))] + aa - ab - p[(u)-1 + d * ((s)-1 + c * ((t)-1))];
  }

  return;
}

__kernel void AA(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, __global int* k, __global int* l, float m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z, __global float* aa, __global float* ab)

{
  int ac, ad, ae, af, ag, ah, ai, aj, ak, al;
  float am, an, ao, ap, aq, ar, as, at, au, av;
  int aw;

  aw = (j - i + 1) * c + 1 - i;

  int ax = k[12];
  int ay = k[0];
  ae = get_group_id(0) * get_local_size(0) + get_local_id(0) + ax;
  ad = get_group_id(1) * get_local_size(1) + get_local_id(1) + ay;

  if (ad > k[5] || ae > k[17]) {
    return;
  }

  ai = 2 * ((ad + b) & 1) + 1;
  ag = 0;
  for (af = i; af <= j; af++) {
    ah = 0;
    for (ac = k[6 + 4 * af]; ac <= k[7 + 4 * af]; ac++) {
      ah = ah + 1;
      ag = ag + 1;
      ap = n[(ah)-1 + (af)*d];
      aj = ((ac + a) & 1) + ai;
      aq = 1. / (1. + o[(ae)-1 + g * ((ad)-1 + ((af)-i) * f)] * ap);
      ar = aq * 2. - 1.;
      ak = l[(ae) + (g + 1) * ((ac)-1 + ((ad)-1) * (e + 1))];
      as = 2. / (1. / p[(ak)-1] + 1. / p[(l[(ae - 1) + (g + 1) * ((ac + 1) - 1 + ((ad)-1) * (e + 1))]) - 1]);
      al = aj + 4 * ((ae + h) & 1);

      au = q[(al)-1];
      av = 1.0 - au;
      at = r[(ak)-1] * (r[(ak)-1] * s[(al)-1] + t[(al)-1]);
      am = w[(ae) + (g + 1) * ((ac) + 1 + ((ad)-1) * (e + 3))] - y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))];
      if (ae < k[16]) {
        an = (v[(1) - 1 + 4 * ((ae)-1)] * aa[(ae - 2) + (g + 1) * ((ac) + 1 + (e + 3) * (ad))] + v[(2) - 1 + 4 * ((ae)-1)] * aa[(ae - 1) + (g + 1) * ((ac) + 1 + (e + 3) * (ad))] + v[(3) - 1 + 4 * ((ae)-1)] * aa[(ae) + (g + 1) * ((ac) + 1 + (e + 3) * (ad))] + v[(4) - 1 + 4 * ((ae)-1)] * aa[(ae + 1) + (g + 1) * ((ac) + 1 + (e + 3) * (ad))]) * as;
        ao = x[(ae)-1 + g * ((ac)-1 + e * ((ad)-1))];
        x[(ae)-1 + g * ((ac)-1 + e * ((ad)-1))] = ao * au + at * an * av;
        am = am + an - ao - x[(ae)-1 + g * ((ac)-1 + e * ((ad)-1))];
      }
      an = as * u[(2) - 1 + 4 * ((ac)-1)] / m * (ab[(ae) + (g + 1) * ((ac) + (e + 3) * (ad))] - ab[(ae) + (g + 1) * ((ac + 1) + (e + 3) * (ad))]);
      ao = z[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))];
      z[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))] = ao * au + at * an * av;
      y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))] = ar * y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))] + aq * (an - ao - z[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))]);
      w[(ae) + (g + 1) * ((ac) + 1 + ((ad)-1) * (e + 3))] = am + y[(ae)-1 + g * ((ag)-1 + aw * ((ad)-1))];
    }
  }

  return;
}

__kernel void AB(int a, int b, int c, int d, int e, int f, int g, __global int* h, __global int* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t)

{
  int u, v, w, x, y, z, aa, ab;
  float ac, ad, ae, af, ag, ah, ai, aj;

  int ak = h[8];
  int al = h[12];
  w = get_group_id(0) * get_local_size(0) + get_local_id(0) + al;
  u = get_group_id(1) * get_local_size(1) + get_local_id(1) + ak;

  if (u > h[9] || w > h[15]) {
    return;
  }

  for (x = f; x <= g; x++) {
    for (v = h[4 * x]; v <= h[1 + 4 * x]; v++) {
      y = 2 * ((v + b) & 1) + 1;
      z = ((u + a) & 1) + y;
      aa = i[(w) + (d + 1) * ((u)-1 + ((v)-1) * (c + 1))];
      ag = 2. / (1. / j[(aa)-1] + 1. / j[(i[(w - 1) + (d + 1) * ((u + 1) - 1 + ((v)-1) * (c + 1))]) - 1]);
      ab = z + 4 * ((w + e) & 1);

      ai = k[(ab)-1];
      aj = 1.0 - ai;
      ah = l[(aa)-1] * (l[(aa)-1] * m[(ab)-1] + n[(ab)-1]);
      ad = o[(1) - 1 + 4 * ((u)-1)] * r[(w) + (d + 1) * ((u - 1) + (c + 3) * (v))] + o[(2) - 1 + 4 * ((u)-1)] * r[(w) + (d + 1) * ((u) + (c + 3) * (v))] + o[(3) - 1 + 4 * ((u)-1)] * r[(w) + (d + 1) * ((u + 1) + (c + 3) * (v))] + o[(4) - 1 + 4 * ((u)-1)] * r[(w) + (d + 1) * ((u + 2) + (c + 3) * (v))];
      ac = p[(1) - 1 + 4 * ((w)-1)] * q[(w - 2) + (d + 1) * ((u) + 1 + (c + 3) * (v))] + p[(2) - 1 + 4 * ((w)-1)] * q[(w - 1) + (d + 1) * ((u) + 1 + (c + 3) * (v))] + p[(3) - 1 + 4 * ((w)-1)] * q[(w) + (d + 1) * ((u) + 1 + (c + 3) * (v))] + p[(4) - 1 + 4 * ((w)-1)] * q[(w + 1) + (d + 1) * ((u) + 1 + (c + 3) * (v))];
      ae = (ad + ac) * ag;
      af = t[(w)-1 + d * ((u)-1 + c * ((v)-1))];
      t[(w)-1 + d * ((u)-1 + c * ((v)-1))] = af * ai + ah * ae * aj;
      s[(w) + (d + 1) * ((u) + 1 + ((v)-1) * (c + 3))] = s[(w) + (d + 1) * ((u) + 1 + ((v)-1) * (c + 3))] + ae - af - t[(w)-1 + d * ((u)-1 + c * ((v)-1))];
    }
  }

  return;
}

__kernel void AC(int a, int b, int c, int d, int e, int f, __global int* g, __global int* h, float i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x)

{
  int y, z, aa, ab, ac, ad, ae, af, ag;
  float ah, ai, aj, ak, al, am, an, ao, ap;

  int aq = g[16];
  int ar = g[6];
  aa = get_group_id(0) * get_local_size(0) + get_local_id(0) + aq;
  y = get_group_id(1) * get_local_size(1) + get_local_id(1) + ar;

  if (aa > g[17] || y > g[11]) {
    return;
  }

  for (z = g[0]; z <= g[5]; z++) {
    ad = 2 * ((z + b) & 1) + 1;
    ae = ((y + a) & 1) + ad;
    ac = 0;
    ac = ac + 1 + aa - aq;
    ak = 1. / (1. + k[(y)-1 + d * ((z)-1)] * j[(ac)-1 + (1) * c]);
    al = ak * 2. - 1.;
    af = h[(aa) + (e + 1) * ((y)-1 + ((z)-1) * (d + 1))];
    am = 2. / (1. / l[(af)-1] + 1. / l[(h[(aa - 1) + (e + 1) * ((y + 1) - 1 + ((z)-1) * (d + 1))]) - 1]);
    ag = ae + 4 * ((aa + f) & 1);

    ao = m[(ag)-1];
    ap = 1.0 - ao;
    an = n[(af)-1] * (n[(af)-1] * o[(ag)-1] + p[(ag)-1]);
    ah = s[(aa) + (e + 1) * ((y) + 1 + ((z)-1) * (d + 3))] - u[(ac)-1 + c * ((y)-1 + d * ((z)-1))];
    if (y > g[7] && y < g[10]) {
      ai = (q[(1) - 1 + 4 * ((y)-1)] * x[(aa) + (e + 1) * ((y - 1) + (d + 3) * (z))] + q[(2) - 1 + 4 * ((y)-1)] * x[(aa) + (e + 1) * ((y) + (d + 3) * (z))] + q[(3) - 1 + 4 * ((y)-1)] * x[(aa) + (e + 1) * ((y + 1) + (d + 3) * (z))] + q[(4) - 1 + 4 * ((y)-1)] * x[(aa) + (e + 1) * ((y + 2) + (d + 3) * (z))]) * am;
      aj = t[(aa)-1 + e * ((y)-1 + d * ((z)-1))];
      t[(aa)-1 + e * ((y)-1 + d * ((z)-1))] = aj * ao + an * ai * ap;
      ah = ah + ai - aj - t[(aa)-1 + e * ((y)-1 + d * ((z)-1))];
    }
    ai = am * r[(2) - 1 + 4 * ((aa)-1)] / i * (w[(aa - 1) + (e + 1) * ((y) + 1 + (d + 3) * (z))] - w[(aa) + (e + 1) * ((y) + 1 + (d + 3) * (z))]);
    aj = v[(ac)-1 + c * ((y)-1 + d * ((z)-1))];
    v[(ac)-1 + c * ((y)-1 + d * ((z)-1))] = aj * ao + an * ai * ap;
    u[(ac)-1 + c * ((y)-1 + d * ((z)-1))] = al * u[(ac)-1 + c * ((y)-1 + d * ((z)-1))] + ak * (ai - aj - v[(ac)-1 + c * ((y)-1 + d * ((z)-1))]);
    s[(aa) + (e + 1) * ((y) + 1 + ((z)-1) * (d + 3))] = ah + u[(ac)-1 + c * ((y)-1 + d * ((z)-1))];
  }

  return;
}

__kernel void AD(int a, int b, int c, int d, int e, int f, int g, __global int* h, __global int* i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t)

{
  int u, v, w, x, y, z, aa, ab;
  float ac, ad, ae, af, ag, ah;

  int ai = h[12];
  int aj = h[2];
  w = get_group_id(0) * get_local_size(0) + get_local_id(0) + ai;
  v = get_group_id(1) * get_local_size(1) + get_local_id(1) + aj;

  if (v > h[3] || w > h[15]) {
    return;
  }

  y = 2 * ((v + b) & 1) + 1;
  for (x = f; x <= g; x++) {
    for (u = h[6 + 4 * x]; u <= h[7 + 4 * x]; u++) {
      z = ((u + a) & 1) + y;
      aa = i[(w) + (d + 1) * ((u)-1 + ((v)-1) * (c + 1))];
      ab = z + 4 * ((w + e) & 1);

      ag = k[(ab)-1];
      ah = 1.0 - ag;
      af = l[(aa)-1] * (l[(aa)-1] * m[(ab)-1] + n[(ab)-1]);
      ac = (o[(1) - 1 + 4 * ((v)-1)] * t[(w) + (d + 1) * ((u) + (c + 3) * (v - 1))] + o[(2) - 1 + 4 * ((v)-1)] * t[(w) + (d + 1) * ((u) + (c + 3) * (v))] + o[(3) - 1 + 4 * ((v)-1)] * t[(w) + (d + 1) * ((u) + (c + 3) * (v + 1))] + o[(4) - 1 + 4 * ((v)-1)] * t[(w) + (d + 1) * ((u) + (c + 3) * (v + 2))] + p[(1) - 1 + 4 * ((w)-1)] * s[(w - 2) + (d + 1) * ((u) + (c + 3) * ((v) + 1))] + p[(2) - 1 + 4 * ((w)-1)] * s[(w - 1) + (d + 1) * ((u) + (c + 3) * ((v) + 1))] +
            p[(3) - 1 + 4 * ((w)-1)] * s[(w) + (d + 1) * ((u) + (c + 3) * ((v) + 1))] + p[(4) - 1 + 4 * ((w)-1)] * s[(w + 1) + (d + 1) * ((u) + (c + 3) * ((v) + 1))]) /
           (.5 / j[(aa)-1] + .5 / j[(i[(w - 1) + (d + 1) * ((u)-1 + ((v + 1) - 1) * (c + 1))]) - 1]);
      ad = r[(w)-1 + d * ((u)-1 + c * ((v)-1))];
      r[(w)-1 + d * ((u)-1 + c * ((v)-1))] = ad * ag + af * ac * ah;
      q[(w) + (d + 1) * ((u)-1 + ((v) + 1) * c)] = q[(w) + (d + 1) * ((u)-1 + ((v) + 1) * c)] + ac - ad - r[(w)-1 + d * ((u)-1 + c * ((v)-1))];
    }
  }

  return;
}

__kernel void AE(int a, int b, int c, int d, int e, int f, int g, int h, __global int* i, __global int* j, float k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x, __global float* y, __global float* z)

{
  int aa, ab, ac, ad, ae, af, ag, ah, ai, aj;
  float ak, al, am, an, ao, ap, aq, ar, as, at;

  int au = i[12];
  int av = i[6];
  ac = get_group_id(0) * get_local_size(0) + get_local_id(0) + au;
  aa = get_group_id(1) * get_local_size(1) + get_local_id(1) + av;

  if (aa > i[11] || ac > i[17]) {
    return;
  }

  ae = 0;
  for (ad = g; ad <= h; ad++) {
    af = 0;
    for (ab = i[4 * ad]; ab <= i[1 + 4 * ad]; ab++) {
      af = af + 1;
      ae = ae + 1;
      an = l[(af)-1 + (ad)*c];
      ag = 2 * ((ab + b) & 1) + 1;
      ah = ((aa + a) & 1) + ag;
      ao = 1. / (1. + m[(ac)-1 + e * ((aa)-1 + ((ad)-g) * d)] * an);
      ap = ao * 2. - 1.;
      ai = j[(ac) + (e + 1) * ((aa)-1 + ((ab)-1) * (d + 1))];
      aq = 2. / (1. / n[(ai)-1] + 1. / n[(j[(ac - 1) + (e + 1) * ((aa)-1 + ((ab + 1) - 1) * (d + 1))]) - 1]);
      aj = ah + 4 * ((ac + f) & 1);

      as = o[(aj)-1];
      at = 1.0 - as;
      ar = p[(ai)-1] * (p[(ai)-1] * q[(aj)-1] + r[(aj)-1]);
      ak = u[(ac) + (e + 1) * ((aa)-1 + ((ab) + 1) * d)] - w[(ac)-1 + e * ((aa)-1 + d * ((ae)-1))];
      if (ac < i[16]) {
        al = (t[(1) - 1 + 4 * ((ac)-1)] * y[(ac - 2) + (e + 1) * ((aa) + (d + 3) * ((ab) + 1))] + t[(2) - 1 + 4 * ((ac)-1)] * y[(ac - 1) + (e + 1) * ((aa) + (d + 3) * ((ab) + 1))] + t[(3) - 1 + 4 * ((ac)-1)] * y[(ac) + (e + 1) * ((aa) + (d + 3) * ((ab) + 1))] + t[(4) - 1 + 4 * ((ac)-1)] * y[(ac + 1) + (e + 1) * ((aa) + (d + 3) * ((ab) + 1))]) * aq;
        am = v[(ac)-1 + e * ((aa)-1 + d * ((ab)-1))];
        v[(ac)-1 + e * ((aa)-1 + d * ((ab)-1))] = am * as + ar * al * at;
        ak = ak + al - am - v[(ac)-1 + e * ((aa)-1 + d * ((ab)-1))];
      }
      al = aq * s[(2) - 1 + 4 * ((ab)-1)] / k * (z[(ac) + (e + 1) * ((aa) + (d + 3) * (ab))] - z[(ac) + (e + 1) * ((aa) + (d + 3) * (ab + 1))]);
      am = x[(ac)-1 + e * ((aa)-1 + d * ((ae)-1))];
      x[(ac)-1 + e * ((aa)-1 + d * ((ae)-1))] = am * as + ar * al * at;
      w[(ac)-1 + e * ((aa)-1 + d * ((ae)-1))] = ap * w[(ac)-1 + e * ((aa)-1 + d * ((ae)-1))] + ao * (al - am - x[(ac)-1 + e * ((aa)-1 + d * ((ae)-1))]);
      u[(ac) + (e + 1) * ((aa)-1 + ((ab) + 1) * d)] = ak + w[(ac)-1 + e * ((aa)-1 + d * ((ae)-1))];
    }
  }

  return;
}

__kernel void AF(int a, int b, int c, int d, int e, int f, __global int* g, __global int* h, float i, __global float* j, __global float* k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p, __global float* q, __global float* r, __global float* s, __global float* t, __global float* u, __global float* v, __global float* w, __global float* x)

{
  int y, z, aa, ab, ac, ad, ae, af, ag;
  float ah, ai, aj, ak, al, am, an, ao, ap;

  int aq = g[16];
  aa = get_group_id(0) * get_local_size(0) + get_local_id(0) + aq;
  y = get_group_id(1) * get_local_size(1) + get_local_id(1) + g[6];

  if (aa > g[17] || y > g[11]) {
    return;
  }

  for (z = g[0]; z <= g[5]; z++) {
    ad = 2 * ((z + b) & 1) + 1;
    ae = ((y + a) & 1) + ad;
    ac = 0;
    ac = ac + 1 + aa - aq;
    ak = 1. / (1. + k[(y)-1 + d * ((z)-1)] * j[(ac)-1 + (1) * c]);
    al = ak * 2. - 1.;
    af = h[(aa) + (e + 1) * ((y)-1 + ((z)-1) * (d + 1))];
    am = 2. / (1. / l[(af)-1] + 1. / l[(h[(aa - 1) + (e + 1) * ((y)-1 + ((z + 1) - 1) * (d + 1))]) - 1]);
    ag = ae + 4 * ((aa + f) & 1);

    ao = m[(ag)-1];
    ap = 1.0 - ao;
    an = n[(af)-1] * (n[(af)-1] * o[(ag)-1] + p[(ag)-1]);
    ah = s[(aa) + (e + 1) * ((y)-1 + ((z) + 1) * d)] - u[(ac)-1 + c * ((y)-1 + d * ((z)-1))];
    if (z > g[1] && z < g[4]) {
      ai = (q[(1) - 1 + 4 * ((z)-1)] * x[(aa) + (e + 1) * ((y) + (d + 3) * (z - 1))] + q[(2) - 1 + 4 * ((z)-1)] * x[(aa) + (e + 1) * ((y) + (d + 3) * (z))] + q[(3) - 1 + 4 * ((z)-1)] * x[(aa) + (e + 1) * ((y) + (d + 3) * (z + 1))] + q[(4) - 1 + 4 * ((z)-1)] * x[(aa) + (e + 1) * ((y) + (d + 3) * (z + 2))]) * am;
      aj = t[(aa)-1 + e * ((y)-1 + d * ((z)-1))];
      t[(aa)-1 + e * ((y)-1 + d * ((z)-1))] = aj * ao + an * ai * ap;
      ah = ah + ai - aj - t[(aa)-1 + e * ((y)-1 + d * ((z)-1))];
    }
    ai = am * r[(2) - 1 + 4 * ((aa)-1)] / i * (w[(aa - 1) + (e + 1) * ((y) + (d + 3) * ((z) + 1))] - w[(aa) + (e + 1) * ((y) + (d + 3) * ((z) + 1))]);
    aj = v[(ac)-1 + c * ((y)-1 + d * ((z)-1))];
    v[(ac)-1 + c * ((y)-1 + d * ((z)-1))] = aj * ao + an * ai * ap;
    u[(ac)-1 + c * ((y)-1 + d * ((z)-1))] = al * u[(ac)-1 + c * ((y)-1 + d * ((z)-1))] + ak * (ai - aj - v[(ac)-1 + c * ((y)-1 + d * ((z)-1))]);
    s[(aa) + (e + 1) * ((y)-1 + ((z) + 1) * d)] = ah + u[(ac)-1 + c * ((y)-1 + d * ((z)-1))];
  }

  return;
}

__kernel void AG(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))] = b[(h) + (f + 2) * ((1) + 1 + (i) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))] = c[(h) + (f + 2) * ((1) + ((i) + 1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))] = c[(h) + (f + 2) * ((2) + ((i) + 1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))] = d[(h) + (f + 2) * ((1) + (i) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (e))] = d[(h) + (f + 2) * ((2) + (i) * (g + 3))];
}

__kernel void AH(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))] = b[(h) + (f + 1) * ((1) + 1 + (g + 3) * (i))];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))] = c[(h) + (f + 1) * ((1) + (g + 3) * ((i) + 1))];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))] = c[(h) + (f + 1) * ((2) + (g + 3) * ((i) + 1))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))] = d[(h) + (f + 1) * ((1) + (g + 3) * (i))];
  a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (e))] = d[(h) + (f + 1) * ((2) + (g + 3) * (i))];
}

__kernel void AI(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > e)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (e))] = b[(i) + (f + 2) * ((h) + 1 + (j) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (e))] = b[(i) + (f + 2) * ((g) + 1 + (j) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (e))] = c[(i) + (f + 2) * ((g) + ((j) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (e))] = d[(i) + (f + 2) * ((g) + (j) * (g + 3))];
}

__kernel void AJ(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > e)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (e))] = b[(i) + (f + 1) * ((h) + 1 + (g + 3) * (j))];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (e))] = b[(i) + (f + 1) * ((g) + 1 + (g + 3) * (j))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (e))] = c[(i) + (f + 1) * ((g) + (g + 3) * ((j) + 1))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (e))] = d[(i) + (f + 1) * ((g) + (g + 3) * (j))];
}

__kernel void AK(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))] = b[(h) + (f + 2) * ((i) + 1 + (1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))] = b[(h) + (f + 2) * ((i) + 1 + (2) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))] = c[(h) + (f + 2) * ((i) + ((1) + 1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))] = d[(h) + (f + 2) * ((i) + (1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (g))] = d[(h) + (f + 2) * ((i) + (2) * (g + 3))];
}

__kernel void AL(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))] = b[(h) + (f + 1) * ((i) + 1 + (g + 3) * (1))];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))] = b[(h) + (f + 1) * ((i) + 1 + (g + 3) * (2))];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))] = c[(h) + (f + 1) * ((i) + (g + 3) * ((1) + 1))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))] = d[(h) + (f + 1) * ((i) + (g + 3) * (1))];
  a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (g))] = d[(h) + (f + 1) * ((i) + (g + 3) * (2))];
}

__kernel void AM(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > g)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (g))] = b[(i) + (f + 2) * ((j) + 1 + (e) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (g))] = c[(i) + (f + 2) * ((j) + ((h) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (g))] = c[(i) + (f + 2) * ((j) + ((e) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (g))] = d[(i) + (f + 2) * ((j) + (e) * (g + 3))];
}

__kernel void AN(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > g)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (g))] = b[(i) + (f + 1) * ((j) + 1 + (g + 3) * (e))];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (g))] = c[(i) + (f + 1) * ((j) + (g + 3) * ((h) + 1))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (g))] = c[(i) + (f + 1) * ((j) + (g + 3) * ((e) + 1))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (g))] = d[(i) + (f + 1) * ((j) + (g + 3) * (e))];
}

__kernel void AO(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > e)
    return;
  b[(j) + (f + 2) * ((h) + 1 + (k) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (e))];
  c[(j) + (f + 2) * ((h) + ((k) + 1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (e))];
  c[(j) + (f + 2) * ((i) + ((k) + 1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (e))];
  d[(j) + (f + 2) * ((h) + (k) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (e))];
  d[(j) + (f + 2) * ((i) + (k) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (5 - 1) * (e))];
}

__kernel void AP(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > e)
    return;
  b[(j) + (f + 1) * ((h) + 1 + (g + 3) * (k))] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (e))];
  c[(j) + (f + 1) * ((h) + (g + 3) * ((k) + 1))] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (e))];
  c[(j) + (f + 1) * ((i) + (g + 3) * ((k) + 1))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (e))];
  d[(j) + (f + 1) * ((h) + (g + 3) * (k))] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (e))];
  d[(j) + (f + 1) * ((i) + (g + 3) * (k))] = a[(j - 1) + (f) * ((k - 1) + (5 - 1) * (e))];
}

__kernel void AQ(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  b[(h) + (f + 2) * ((-1) + 1 + (i) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))];
  b[(h) + (f + 2) * ((0) + 1 + (i) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))];
  c[(h) + (f + 2) * ((0) + ((i) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))];
  d[(h) + (f + 2) * ((0) + (i) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))];
}

__kernel void AR(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  b[(h) + (f + 1) * ((-1) + 1 + (g + 3) * (i))] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))];
  b[(h) + (f + 1) * ((0) + 1 + (g + 3) * (i))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))];
  c[(h) + (f + 1) * ((0) + (g + 3) * ((i) + 1))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))];
  d[(h) + (f + 1) * ((0) + (g + 3) * (i))] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))];
}

__kernel void AS(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > g)
    return;
  b[(j) + (f + 2) * ((k) + 1 + (h) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (g))];
  b[(j) + (f + 2) * ((k) + 1 + (i) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (g))];
  c[(j) + (f + 2) * ((k) + ((h) + 1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (g))];
  d[(j) + (f + 2) * ((k) + (h) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (g))];
  d[(j) + (f + 2) * ((k) + (i) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (5 - 1) * (g))];
}

__kernel void AT(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > g)
    return;
  b[(j) + (f + 1) * ((k) + 1 + (g + 3) * (h))] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (g))];
  b[(j) + (f + 1) * ((k) + 1 + (g + 3) * (i))] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (g))];
  c[(j) + (f + 1) * ((k) + (g + 3) * ((h) + 1))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (g))];
  d[(j) + (f + 1) * ((k) + (g + 3) * (h))] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (g))];
  d[(j) + (f + 1) * ((k) + (g + 3) * (i))] = a[(j - 1) + (f) * ((k - 1) + (5 - 1) * (g))];
}

__kernel void AU(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  b[(h) + (f + 2) * ((i) + 1 + (0) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))];
  c[(h) + (f + 2) * ((i) + ((-1) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))];
  c[(h) + (f + 2) * ((i) + ((0) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))];
  d[(h) + (f + 2) * ((i) + (0) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))];
}

__kernel void AV(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  b[(h) + (f + 1) * ((i) + 1 + (g + 3) * (0))] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))];
  c[(h) + (f + 1) * ((i) + (g + 3) * ((-1) + 1))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))];
  c[(h) + (f + 1) * ((i) + (g + 3) * ((0) + 1))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))];
  d[(h) + (f + 1) * ((i) + (g + 3) * (0))] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))];
}

__kernel void AW(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = h + 2;
  for (int j = 0; j <= h; j++) {
    a[j] = d[(1) + (f + 1) * ((3) + (e + 3) * (j))];
    a[j + i - 1] = b[(1) + (f + 1) * ((2) + 1 + (e + 3) * (j))];
  }
  i = 2 * (h + 1);
  a[i] = d[(1) + (f + 1) * ((1) + (e + 3) * (g))];
  a[i + 1] = d[(1) + (f + 1) * ((2) + (e + 3) * (g))];
  a[i + 2] = d[(1) + (f + 1) * ((1) + (e + 3) * (h))];
  a[i + 3] = d[(1) + (f + 1) * ((2) + (e + 3) * (h))];
}

__kernel void AX(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = h + 2;
  for (int j = 0; j <= h; j++) {
    a[j] = d[(1) + (f + 1) * ((j) + (e + 3) * (3))];
    a[j + i - 1] = c[(1) + (f + 1) * ((j) + (e + 3) * ((2) + 1))];
  }
  i = 2 * (h + 1);
  a[i] = b[(1) + (f + 1) * ((g) + 1 + (e + 3) * (1))];
  a[i + 1] = b[(1) + (f + 1) * ((g) + 1 + (e + 3) * (2))];
  a[i + 2] = c[(1) + (f + 1) * ((g) + (e + 3) * ((1) + 1))];
  a[i + 3] = c[(1) + (f + 1) * ((h) + (e + 3) * ((1) + 1))];
}

__kernel void AY(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  for (int j = 0; j <= i; j++) {
    a[j] = d[(1) + (g + 1) * ((e) + (f + 3) * (j))];
  }
  int k = (i + 1);
  a[k] = b[(1) + (g + 1) * ((e) + 1 + (f + 3) * (h))];
  a[k + 1] = b[(1) + (g + 1) * ((f) + 1 + (f + 3) * (h))];
  a[k + 2] = b[(1) + (g + 1) * ((e) + 1 + (f + 3) * (i))];
  a[k + 3] = b[(1) + (g + 1) * ((f) + 1 + (f + 3) * (i))];
  a[k + 4] = c[(1) + (g + 1) * ((f) + (f + 3) * ((h) + 1))];
  a[k + 5] = d[(1) + (g + 1) * ((f) + (f + 3) * (h))];
  a[k + 6] = d[(1) + (g + 1) * ((f) + (f + 3) * (i))];
}

__kernel void AZ(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i, int j) {
  for (int k = 0; k <= j; k++) {
    a[k] = d[(1) + (h + 1) * ((k) + (g + 3) * (e))];
  }
  int l = (j + 1);
  a[l] = b[(1) + (h + 1) * ((-1) + 1 + (g + 3) * (f))];
  a[l + 1] = b[(1) + (h + 1) * ((0) + 1 + (g + 3) * (f))];
  a[l + 2] = b[(1) + (h + 1) * ((i) + 1 + (g + 3) * (f))];
  a[l + 3] = c[(1) + (h + 1) * ((0) + (g + 3) * ((e) + 1))];
  a[l + 4] = c[(1) + (h + 1) * ((i) + (g + 3) * ((e) + 1))];
  a[l + 5] = c[(1) + (h + 1) * ((j) + (g + 3) * ((e) + 1))];
  a[l + 6] = c[(1) + (h + 1) * ((0) + (g + 3) * ((f) + 1))];
  a[l + 7] = c[(1) + (h + 1) * ((i) + (g + 3) * ((f) + 1))];
  a[l + 8] = c[(1) + (h + 1) * ((j) + (g + 3) * ((f) + 1))];
  a[l + 9] = d[(1) + (h + 1) * ((0) + (g + 3) * (f))];
  a[l + 10] = d[(1) + (h + 1) * ((i) + (g + 3) * (f))];
  a[l + 11] = d[(1) + (h + 1) * ((j) + (g + 3) * (f))];
}

__kernel void BA(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = (h + 1);
  b[(1) + (f + 1) * ((-1) + 1 + (e + 3) * (g))] = a[i];
  b[(1) + (f + 1) * ((0) + 1 + (e + 3) * (g))] = a[i + 1];
  b[(1) + (f + 1) * ((-1) + 1 + (e + 3) * (h))] = a[i + 2];
  b[(1) + (f + 1) * ((0) + 1 + (e + 3) * (h))] = a[i + 3];
  c[(1) + (f + 1) * ((0) + (e + 3) * ((g) + 1))] = a[i + 4];
  d[(1) + (f + 1) * ((0) + (e + 3) * (g))] = a[i + 5];
  d[(1) + (f + 1) * ((0) + (e + 3) * (h))] = a[i + 6];
}

__kernel void BB(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = h + 1;
  b[(1) + (f + 1) * ((-1) + 1 + (e + 3) * (0))] = a[i];
  b[(1) + (f + 1) * ((0) + 1 + (e + 3) * (0))] = a[i + 1];
  b[(1) + (f + 1) * ((g) + 1 + (e + 3) * (0))] = a[i + 2];
  c[(1) + (f + 1) * ((0) + (e + 3) * ((-1) + 1))] = a[i + 3];
  c[(1) + (f + 1) * ((g) + (e + 3) * ((-1) + 1))] = a[i + 4];
  c[(1) + (f + 1) * ((h) + (e + 3) * ((-1) + 1))] = a[i + 5];
  c[(1) + (f + 1) * ((0) + (e + 3) * ((0) + 1))] = a[i + 6];
  c[(1) + (f + 1) * ((g) + (e + 3) * ((0) + 1))] = a[i + 7];
  c[(1) + (f + 1) * ((h) + (e + 3) * ((0) + 1))] = a[i + 8];
  d[(1) + (f + 1) * ((0) + (e + 3) * (0))] = a[i + 9];
  d[(1) + (f + 1) * ((g) + (e + 3) * (0))] = a[i + 10];
  d[(1) + (f + 1) * ((h) + (e + 3) * (0))] = a[i + 11];
}

__kernel void BC(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i, int j) {
  int k = 2 * (j + 1);
  d[(1) + (f + 1) * ((g) + (e + 3) * (i))] = a[k];
  d[(1) + (f + 1) * ((h) + (e + 3) * (i))] = a[k + 1];
  d[(1) + (f + 1) * ((g) + (e + 3) * (j))] = a[k + 2];
  d[(1) + (f + 1) * ((h) + (e + 3) * (j))] = a[k + 3];
}

__kernel void BD(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i, int j) {
  int k = 2 * (h + 1);
  b[(1) + (f + 1) * ((g) + 1 + (e + 3) * (i))] = a[k];
  b[(1) + (f + 1) * ((g) + 1 + (e + 3) * (j))] = a[k + 1];
  c[(1) + (f + 1) * ((g) + (e + 3) * ((i) + 1))] = a[k + 2];
  c[(1) + (f + 1) * ((h) + (e + 3) * ((i) + 1))] = a[k + 3];
}

__kernel void BE(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, __global float* k, __global float* l, __global float* m, __global float* n) {
  int o = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int p = get_group_id(1) * get_local_size(1) + get_local_id(1);

  if (o > d || p >= e)
    return;

  int q = p + 1;
  int r = o;

  int s = -2 + 3 * q;
  int t = (r == 0 ? 0 : ((r - 1) * 3 + 1 < a ? (r - 1) * 3 + 1 : a));

  float u = m[(1) + (g + 1) * ((-1 + q - 1) + 1 + (f + 3) * (r))];
  float v = m[(1) + (g + 1) * ((0 + q - 1) + 1 + (f + 3) * (r))];
  float w = m[(1) + (g + 1) * ((1 + q - 1) + 1 + (f + 3) * (r))];
  float x = m[(1) + (g + 1) * ((2 + q - 1) + 1 + (f + 3) * (r))];
  l[(c) + (i + 2) * ((s) + 1 + (t) * (h + 3))] = u * k[1 - 1 + q * 8] + v * k[2 - 1 + q * 8] + w * k[3 - 1 + q * 8] + x * k[4 - 1 + q * 8];
  u = v;
  v = w;
  w = x;
  x = m[(1) + (g + 1) * ((q + 2) + 1 + (f + 3) * (r))];
  l[(c) + (i + 2) * ((s + 1) + 1 + (t) * (h + 3))] = v;
  l[(c) + (i + 2) * ((s + 2) + 1 + (t) * (h + 3))] = u * k[5 - 1 + q * 8] + v * k[6 - 1 + q * 8] + w * k[7 - 1 + q * 8] + x * k[8 - 1 + q * 8];

  if (q == e && j > -1) {
    s = s + 3;
    int y = b + 2;
    l[(c) + (i + 2) * ((s) + 1 + (t) * (h + 3))] = u * k[1 - 1 + f * 8] + v * k[2 - 1 + f * 8] + w * k[3 - 1 + f * 8] + x * k[4 - 1 + f * 8];
    l[(c) + (i + 2) * ((s + 1) + 1 + (t) * (h + 3))] = w;
    l[(c) + (i + 2) * ((s + 2) + 1 + (t) * (h + 3))] = v * k[5 - 1 + f * 8] + w * k[6 - 1 + f * 8] + n[r + y - 1] * k[8 - 1 + f * 8] + x * k[7 - 1 + f * 8];
  }
}

__kernel void BF(int a, int b, int c, int d, int e, int f, int g, int h, __global float* i, __global float* j) {
  int k = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int l = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;

  if (k > g || l > c)
    return;

  int m = k;
  int n = l;

  int o = 2 + 3 * (n - 1);

  float p = j[(b) + (h + 2) * ((m) + 1 + (((n == 1) ? 0 : ((1 + (n - 2) * 3 < a) ? 1 + (n - 2) * 3 : a))) * (g + 3))];
  float q = j[(b) + (h + 2) * ((m) + 1 + (((1 + (n - 1) * 3 < a) ? (1 + (n - 1) * 3) : a)) * (g + 3))];
  float r = j[(b) + (h + 2) * ((m) + 1 + (((4 + (n - 1) * 3 < a) ? (4 + (n - 1) * 3) : a)) * (g + 3))];
  float s = j[(b) + (h + 2) * ((m) + 1 + (((7 + (n - 1) * 3 < a) ? (7 + (n - 1) * 3) : a)) * (g + 3))];
  j[(b) + (h + 2) * ((m) + 1 + (o) * (g + 3))] = p * i[1 - 1 + n * 8] + q * i[2 - 1 + n * 8] + r * i[3 - 1 + n * 8] + s * i[4 - 1 + n * 8];
  j[(b) + (h + 2) * ((m) + 1 + (o + 1) * (g + 3))] = p * i[5 - 1 + n * 8] + q * i[6 - 1 + n * 8] + r * i[7 - 1 + n * 8] + s * i[8 - 1 + n * 8];
}

__kernel void BG(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, __global float* l, __global float* m, __global float* n) {
  int o = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int p = get_group_id(1) * get_local_size(1) + get_local_id(1);

  int q = o;
  int r = p + 1;
  if (q > d || r > e)
    return;

  int s = -2 + 3 * r;
  int t = (q == 0 ? 0 : ((q - 1) * 3 + 1 < a ? (q - 1) * 3 + 1 : a));

  float u = n[(1) + (h + 1) * ((q) + (f + 3) * ((-1 + r - 1) + 1))];
  float v = n[(1) + (h + 1) * ((q) + (f + 3) * ((0 + r - 1) + 1))];
  float w = n[(1) + (h + 1) * ((q) + (f + 3) * ((1 + r - 1) + 1))];
  float x = n[(1) + (h + 1) * ((q) + (f + 3) * ((2 + r - 1) + 1))];

  m[(c) + (k + 2) * ((t) + ((s) + 1) * (i + 3))] = u * l[1 - 1 + r * 8] + v * l[2 - 1 + r * 8] + w * l[3 - 1 + r * 8] + x * l[4 - 1 + r * 8];
  u = v;
  v = w;
  w = x;
  x = n[(1) + (h + 1) * ((q) + (f + 3) * ((2 + r) + 1))];
  m[(c) + (k + 2) * ((t) + ((s + 1) + 1) * (i + 3))] = v;
  m[(c) + (k + 2) * ((t) + ((s + 2) + 1) * (i + 3))] = u * l[5 - 1 + r * 8] + v * l[6 - 1 + r * 8] + w * l[7 - 1 + r * 8] + x * l[8 - 1 + r * 8];
}

__kernel void BH(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, __global float* l, __global float* m, __global float* n, __global float* o) {
  int p = get_group_id(0) * get_local_size(0) + get_local_id(0);
  if (p > d)
    return;
  int q = p;

  int r = -2 + 3 * e;
  int s = (q == 0 ? 0 : ((q - 1) * 3 + 1 < a ? (q - 1) * 3 + 1 : a));

  float t = n[(1) + (h + 1) * ((q) + (f + 3) * ((e - 1) + 1))];
  float u = n[(1) + (h + 1) * ((q) + (f + 3) * ((e + 0) + 1))];
  float v = n[(1) + (h + 1) * ((q) + (f + 3) * ((e + 1) + 1))];
  float w = n[(1) + (h + 1) * ((q) + (f + 3) * ((e + 2) + 1))];

  r = r + 3;
  int x = b + 2;
  m[(c) + (k + 2) * ((s) + ((r) + 1) * (i + 3))] = t * l[1 - 1 + g * 8] + u * l[2 - 1 + g * 8] + v * l[3 - 1 + g * 8] + w * l[4 - 1 + g * 8];
  m[(c) + (k + 2) * ((s) + ((r + 1) + 1) * (i + 3))] = v;
  m[(c) + (k + 2) * ((s) + ((r + 2) + 1) * (i + 3))] = u * l[5 - 1 + g * 8] + v * l[6 - 1 + g * 8] + o[q + x - 1] * l[8 - 1 + g * 8] + w * l[7 - 1 + g * 8];
}

__kernel void BI(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, __global float* k, __global float* l) {
  int m = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int n = get_group_id(1) * get_local_size(1) + get_local_id(1);

  int o = m + 1;
  int p = n + 1;
  if (o > i || p > c)
    return;

  int q = 2 + 3 * (p - 1);

  float r = l[(b) + (j + 2) * (((p == 1 ? 0 : (1 + (p - 2) * 3 < a ? 1 + (p - 2) * 3 : a))) + ((o) + 1) * (h + 3))];
  float s = l[(b) + (j + 2) * (((1 + (p - 1) * 3 < a ? 1 + (p - 1) * 3 : a)) + ((o) + 1) * (h + 3))];
  float t = l[(b) + (j + 2) * (((4 + (p - 1) * 3 < a ? 4 + (p - 1) * 3 : a)) + ((o) + 1) * (h + 3))];
  float u = l[(b) + (j + 2) * (((7 + (p - 1) * 3 < a ? 7 + (p - 1) * 3 : a)) + ((o) + 1) * (h + 3))];

  l[(b) + (j + 2) * ((q) + ((o) + 1) * (h + 3))] = r * k[1 - 1 + p * 8] + s * k[2 - 1 + p * 8] + t * k[3 - 1 + p * 8] + u * k[4 - 1 + p * 8];
  l[(b) + (j + 2) * ((q + 1) + ((o) + 1) * (h + 3))] = r * k[5 - 1 + p * 8] + s * k[6 - 1 + p * 8] + t * k[7 - 1 + p * 8] + u * k[8 - 1 + p * 8];
}

__kernel void BJ(int a, int b, int c, int d, int e, int f, __global float* g, __global float* h, __global float* i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int k = j + 1;

  if (k > b)
    return;

  int l = 2 + 3 * (k - 1);

  float m = i[0 + (k - 1)];
  float n = i[1 + (k - 1)];
  float o = i[2 + (k - 1)];
  float p = i[3 + (k - 1)];
  h[l - 1] = n;
  h[l] = m * g[1 - 1 + k * 8] + n * g[2 - 1 + k * 8] + o * g[3 - 1 + k * 8] + p * g[4 - 1 + k * 8];
  h[l + 1] = m * g[5 - 1 + k * 8] + n * g[6 - 1 + k * 8] + o * g[7 - 1 + k * 8] + p * g[8 - 1 + k * 8];

  if (k == b) {
    h[0] = (i[0] + i[1] * 2.0) / 3.0;
    l = l + 3;
    h[l - 1] = o;
    h[l] = (o * 2 + p) / 3.0;
  }
}

__kernel void BK(int a, int b, int c, int d, int e, int f, __global float* g, __global float* h, __global float* i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int k = j + 1;

  if (k > b)
    return;

  int l = 2 + 3 * (k - 1);

  float m = i[0 + (k - 1)];
  float n = i[1 + (k - 1)];
  float o = i[2 + (k - 1)];
  float p = i[3 + (k - 1)];
  h[l - 1] = n;
  h[l] = m * g[1 - 1 + k * 8] + n * g[2 - 1 + k * 8] + o * g[3 - 1 + k * 8] + p * g[4 - 1 + k * 8];
  h[l + 1] = m * g[5 - 1 + k * 8] + n * g[6 - 1 + k * 8] + o * g[7 - 1 + k * 8] + p * g[8 - 1 + k * 8];

  if (k == b) {
    h[0] = (i[0] + i[1] * 2.0) / 3.0;
    l = l + 3;
    h[l - 1] = o;
    h[l] = (o * 2 + p) / 3.0;
  }
}

__kernel void BL(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, __global float* l, __global float* m, __global float* n, __global float* o, __global float* p) {
  int q = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int r = get_group_id(1) * get_local_size(1) + get_local_id(1);

  int s = q;
  int t = r + 1;
  if (s > d || t > f)
    return;

  int u = 1 + 3 * (t - 1);
  int v = ((s == 0) ? 0 : (((s - 1) * 3 + 1 < b) ? (s - 1) * 3 + 1 : b));

  float w = ((t == 1) ? m[s] : p[(1) + (g + 1) * ((s) + (e + 3) * (t - 2))]);
  float x = p[(1) + (g + 1) * ((s) + (e + 3) * (0 + t - 1))];
  float y = p[(1) + (g + 1) * ((s) + (e + 3) * (1 + t - 1))];
  float z = p[(1) + (g + 1) * ((s) + (e + 3) * (2 + t - 1))];

  if (r == 0) {
    o[(a) + (j + 2) * ((v) + (0) * (h + 3))] = w * l[5 - 1 + 0 * 8] + x * l[6 - 1 + 0 * 8] + y * l[7 - 1 + 0 * 8] + z * l[8 - 1 + 0 * 8];
  }

  w = x;
  x = y;
  y = z;
  z = p[(1) + (g + 1) * ((s) + (e + 3) * (3 + t - 1))];
  o[(a) + (j + 2) * ((v) + (u) * (h + 3))] = x;
  o[(a) + (j + 2) * ((v) + (u + 1) * (h + 3))] = w * l[1 - 1 + t * 8] + x * l[2 - 1 + t * 8] + y * l[3 - 1 + t * 8] + z * l[4 - 1 + t * 8];
  o[(a) + (j + 2) * ((v) + (u + 2) * (h + 3))] = w * l[5 - 1 + t * 8] + x * l[6 - 1 + t * 8] + y * l[7 - 1 + t * 8] + z * l[8 - 1 + t * 8];

  if (k > -1 && t == f) {
    u = u + 3;
    o[(a) + (j + 2) * ((v) + (u) * (h + 3))] = y;
    o[(a) + (j + 2) * ((v) + (u + 1) * (h + 3))] = x * l[1 - 1 + c * 8] + y * l[2 - 1 + c * 8] + n[s] * l[4 - 1 + c * 8] + z * l[3 - 1 + c * 8];
  }
}

__kernel void BM(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j, int k, __global float* l, __global float* m, __global float* n, __global float* o) {
  int p = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int q = get_group_id(1) * get_local_size(1) + get_local_id(1);
  int r = p;
  int s = q + 1;

  if (r > c || s > e)
    return;

  int t = 2 + 3 * (s - 1);
  float u = ((s == 1) ? m[r] : o[(d) + (k + 2) * ((((s == 2) ? 0 : (((1 + (s - 3) * 3) < a) ? (1 + (s - 3) * 3) : a))) + (r) * (i + 3))]);
  float v = o[(d) + (k + 2) * ((((s == 1) ? 0 : ((1 + (s - 2) * 3 < a) ? 1 + (s - 2) * 3 : a))) + (r) * (i + 3))];
  float w = o[(d) + (k + 2) * ((((1 + (s - 1) * 3 < a) ? 1 + (s - 1) * 3 : a)) + (r) * (i + 3))];
  float x = o[(d) + (k + 2) * ((((4 + (s - 1) * 3 < a) ? 4 + (s - 1) * 3 : a)) + (r) * (i + 3))];

  if (q == 0) {
    o[(d) + (k + 2) * ((0) + (r) * (i + 3))] = u * l[5 - 1 + 0 * 8] + v * l[6 - 1 + 0 * 8] + w * l[7 - 1 + 0 * 8] + x * l[8 - 1 + 0 * 8];
  }

  u = v;
  v = w;
  w = x;
  x = o[(d) + (k + 2) * ((((7 + (s - 1) * 3 < a) ? 7 + (s - 1) * 3 : a)) + (r) * (i + 3))];
  x = o[(d) + (k + 2) * (((t + 5 < a ? t + 5 : a)) + (r) * (i + 3))];
  o[(d) + (k + 2) * ((t) + (r) * (i + 3))] = u * l[1 - 1 + s * 8] + v * l[2 - 1 + s * 8] + w * l[3 - 1 + s * 8] + x * l[4 - 1 + s * 8];
  o[(d) + (k + 2) * ((t + 1) + (r) * (i + 3))] = u * l[5 - 1 + s * 8] + v * l[6 - 1 + s * 8] + w * l[7 - 1 + s * 8] + x * l[8 - 1 + s * 8];

  if (s == e) {
    t += 3;
    o[(d) + (k + 2) * ((2 + 3 * e) + (r) * (i + 3))] = v * l[1 - 1 + b * 8] + w * l[2 - 1 + b * 8] + n[r] * l[4 - 1 + b * 8] + x * l[3 - 1 + b * 8];
  }
}

__kernel void BN(__global float* a, __global float* b, int c, int d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1);
  int k = i + 1;
  int l = j + 1;
  if (k > d || l > c)
    return;
  int m = k * 3 - 2;
  b[(0) + (e + 1) * ((l) + 1 + (c + 3) * (k))] = a[(h) + (h + 2) * ((l * 3 - 1) + 1 + (m) * (f + 3))];
}

__kernel void BO(__global float* a, __global float* b, int c, int d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1);
  int k = i + 1;
  int l = j + 1;
  if (k > d || l > c)
    return;
  int m = k * 3 - 1;
  b[(0) + (e + 1) * ((l) + (c + 3) * ((k) + 1))] = a[(h) + (h + 2) * ((l * 3 - 2) + ((m) + 1) * (f + 3))];
}

__kernel void BP(__global float* a, __global float* b, int c, int d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1);
  int k = i + 1;
  int l = j + 1;
  if (k > d || l > c)
    return;
  int m = k * 3 - 2;
  b[(0) + (e + 1) * ((l) + (c + 3) * (k))] = a[(h) + (h + 2) * ((l * 3 - 2) + (m) * (f + 3))];
}

__kernel void BQ(__global float* a, __global float* b, __global int* c, __global float* d, __global float* e, int f, float g, int h, int i, int j, int k, int l, int m) {
  int n = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int o = n + c[0];
  if (o > c[5])
    return;
  a[(0) + (m + 2) * ((f) + 1 + (o) * (k + 3))] = a[(1) + (m + 2) * ((f) + 1 + (o) * (k + 3))] + g * (b[(1) + (m + 2) * ((f + 1) + (o) * (k + 3))] - b[(1) + (m + 2) * ((f) + (o) * (k + 3))]);
}

__kernel void BR(__global float* a, __global float* b, __global int* c, __global float* d, __global float* e, int f, float g, int h, int i, int j, int k, int l, int m) {
  int n = get_group_id(0) * get_local_size(0) + get_local_id(0) + c[0];
  int o = get_group_id(1) * get_local_size(1) + get_local_id(1) + c[6];

  if (n > c[5] || o > f)
    return;
  a[(0) + (m + 2) * ((o) + 1 + (n) * (k + 3))] = a[(1) + (m + 2) * ((o) + 1 + (n) * (k + 3))] + g * (d[((o)-1) * 4 + (1) - 1] * b[(1) + (m + 2) * ((o - 1) + (n) * (k + 3))] + d[((o)-1) * 4 + (2) - 1] * b[(1) + (m + 2) * ((o) + (n) * (k + 3))] + d[((o)-1) * 4 + (3) - 1] * b[(1) + (m + 2) * ((o + 1) + (n) * (k + 3))] + d[((o)-1) * 4 + (4) - 1] * b[(1) + (m + 2) * ((o + 2) + (n) * (k + 3))]);
}

__kernel void BS(__global float* a, __global float* b, __global int* c, __global float* d, __global float* e, int f, float g, int h, int i, int j, int k, int l, int m) {
  int n = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int o = n + c[6];
  if (o > c[11])
    return;

  a[(0) + (m + 2) * ((o) + ((f) + 1) * (k + 3))] = a[(1) + (m + 2) * ((o) + ((f) + 1) * (k + 3))] + g * (b[(1) + (m + 2) * ((o) + (f + 1) * (k + 3))] - b[(1) + (m + 2) * ((o) + (f) * (k + 3))]);
}

__kernel void BT(__global float* a, __global float* b, __global int* c, __global float* d, __global float* e, int f, float g, int h, int i, int j, int k, int l, int m) {
  int n = get_group_id(0) * get_local_size(0) + get_local_id(0) + c[0];
  int o = get_group_id(1) * get_local_size(1) + get_local_id(1) + c[6];

  if (n > f || o > c[11])
    return;

  a[(0) + (m + 2) * ((o) + ((n) + 1) * (k + 3))] = a[(1) + (m + 2) * ((o) + ((n) + 1) * (k + 3))] + g * (d[((n)-1) * 4 + (1) - 1] * b[(1) + (m + 2) * ((o) + (n - 1) * (k + 3))] + d[((n)-1) * 4 + (2) - 1] * b[(1) + (m + 2) * ((o) + (n) * (k + 3))] + d[((n)-1) * 4 + (3) - 1] * b[(1) + (m + 2) * ((o) + (n + 1) * (k + 3))] + d[((n)-1) * 4 + (4) - 1] * b[(1) + (m + 2) * ((o) + (n + 2) * (k + 3))]);
}
__kernel void BU(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  if (h > f)
    return;
  a[h - 1] = c[(0) + (g + 2) * ((1) + 1 + (h) * (e + 3))];
  b[h - 1] = d[(0) + (g + 2) * ((1) + ((h) + 1) * (e + 3))];
}

__kernel void BV(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  if (h > e)
    return;
  a[h - 1] = c[(0) + (g + 2) * ((h) + 1 + (1) * (e + 3))];
  b[h - 1] = d[(0) + (g + 2) * ((h) + ((1) + 1) * (e + 3))];
}

__kernel void BW(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  if (i > f)
    return;
  c[(0) + (g + 2) * ((h) + 1 + (i) * (e + 3))] = a[i - 1];
  d[(0) + (g + 2) * ((h) + ((i) + 1) * (e + 3))] = b[i - 1];
}

__kernel void BX(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  if (i > e)
    return;

  c[(0) + (g + 2) * ((i) + 1 + (h) * (e + 3))] = a[i - 1];
  d[(0) + (g + 2) * ((i) + ((h) + 1) * (e + 3))] = b[i - 1];
}

__kernel void BY(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, __global float* f, __global float* g, __global float* h, __global float* i, __global float* j, __global float* k, __global float* l, int m, __global int* n, int o, int p, int q, __global float* r, int s, int t, __global float* u, int v, __global float* w, int x, __global float* y, int z, __global float* aa, int ab, int ac, int ad, int ae, int af, int ag, int ah, int ai, int aj,
                 int ak) {
  int al, am, an;
  float ao;

  int ap = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  if (ap > m)
    return;

  ao = aa[ap - 1];

  al = n[1 - 1 + o * (ap - 1) + o * p * (1 - 1)];
  am = n[2 - 1 + o * (ap - 1) + o * p * (1 - 1)];
  an = n[3 - 1 + o * (ap - 1) + o * p * (1 - 1)];
  if (an > ab) {
    an = an - ah;
    g[(an)-1 + ak * ((al) + ((am)-1) * (ai + 3))] = g[(an)-1 + ak * ((al) + ((am)-1) * (ai + 3))] + r[ap - 1 + s * (1 - 1)] * ao;
    h[(an)-1 + ak * (((al)-1) + (am)*ai)] = h[(an)-1 + ak * (((al)-1) + (am)*ai)] + r[ap - 1 + s * (2 - 1)] * ao;
    l[(an) + (ak + 1) * ((al)-1 + ((am)-1) * ai)] = l[(an) + (ak + 1) * ((al)-1 + ((am)-1) * ai)] + r[ap - 1 + s * (3 - 1)] * ao;
  } else {
    a[(an)-1 + ah * ((al) + ((am)-1) * (af + 3))] = a[(an)-1 + ah * ((al) + ((am)-1) * (af + 3))] + r[ap - 1 + s * (1 - 1)] * ao;
    d[(an)-1 + ah * (((al)-1) + (am)*af)] = d[(an)-1 + ah * (((al)-1) + (am)*af)] + r[ap - 1 + s * (2 - 1)] * ao;
    f[(an)-1 + ah * ((al)-1 + ((am)-1) * af)] = f[(an)-1 + ah * ((al)-1 + ((am)-1) * af)] + r[ap - 1 + s * (3 - 1)] * ao;
  }

  al = n[1 - 1 + o * (ap - 1) + o * p * (2 - 1)];
  am = n[2 - 1 + o * (ap - 1) + o * p * (2 - 1)];
  an = n[3 - 1 + o * (ap - 1) + o * p * (2 - 1)];
  if (an > ac) {
    an = an - ah;
    i[(an)-1 + ak * ((al) + 1 + ((am) + 1) * (ai + 3))] = i[(an)-1 + ak * ((al) + 1 + ((am) + 1) * (ai + 3))] + r[ap - 1 + s * (4 - 1)] * ao;
  } else {
    b[(an)-1 + ah * ((al) + 1 + ((am) + 1) * (af + 3))] = b[(an)-1 + ah * ((al) + 1 + ((am) + 1) * (af + 3))] + r[ap - 1 + s * (4 - 1)] * ao;
  }

  al = n[1 - 1 + o * (ap - 1) + o * p * (3 - 1)];
  am = n[2 - 1 + o * (ap - 1) + o * p * (3 - 1)];
  an = n[3 - 1 + o * (ap - 1) + o * p * (3 - 1)];
  if (an > ad) {
    an = an - ah;
    j[(an) + (ak + 1) * ((al) + 1 + ((am)-1) * (ai + 3))] = j[(an) + (ak + 1) * ((al) + 1 + ((am)-1) * (ai + 3))] + r[ap - 1 + s * (5 - 1)] * ao;
  } else {
    c[(an)-1 + (ah + 1) * ((al) + 1 + ((am)-1) * (af + 3))] = c[(an)-1 + (ah + 1) * ((al) + 1 + ((am)-1) * (af + 3))] + r[ap - 1 + s * (5 - 1)] * ao;
  }

  al = n[1 - 1 + o * (ap - 1) + o * p * (4 - 1)];
  am = n[2 - 1 + o * (ap - 1) + o * p * (4 - 1)];
  an = n[3 - 1 + o * (ap - 1) + o * p * (4 - 1)];
  if (an > ae) {
    an = an - ah;
    k[(an) + (ak + 1) * ((al)-1 + ((am) + 1) * ai)] = k[(an) + (ak + 1) * ((al)-1 + ((am) + 1) * ai)] + r[ap - 1 + s * (6 - 1)] * ao;
  } else {
    e[(an)-1 + (ah + 1) * ((al)-1 + ((am) + 1) * af)] = e[(an)-1 + (ah + 1) * ((al)-1 + ((am) + 1) * af)] + r[ap - 1 + s * (6 - 1)] * ao;
  }
}

__kernel void BZ(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))] = b[(h)-1 + f * ((1) + ((i)-1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))] = b[(h)-1 + f * ((2) + ((i)-1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))] = c[(h)-1 + f * ((1) + 1 + ((i) + 1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))] = d[(h)-1 + (f + 1) * ((1) + 1 + ((i)-1) * (g + 3))];
}

__kernel void CA(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))] = b[(h)-1 + f * ((1) + ((i)-1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))] = b[(h)-1 + f * ((2) + ((i)-1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))] = c[(h)-1 + f * ((1) + 1 + ((i) + 1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))] = d[(h) + (f + 1) * ((1) + 1 + ((i)-1) * (g + 3))];
}

__kernel void CB(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > e)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (e))] = b[(i)-1 + f * ((g) + ((j)-1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (e))] = c[(i)-1 + f * ((h) + 1 + ((j) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (e))] = c[(i)-1 + f * ((g) + 1 + ((j) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (e))] = d[(i)-1 + (f + 1) * ((h) + 1 + ((j)-1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (5 - 1) * (e))] = d[(i)-1 + (f + 1) * ((g) + 1 + ((j)-1) * (g + 3))];
}

__kernel void CC(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > e)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (e))] = b[(i)-1 + f * ((g) + ((j)-1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (e))] = c[(i)-1 + f * ((h) + 1 + ((j) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (e))] = c[(i)-1 + f * ((g) + 1 + ((j) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (e))] = d[(i) + (f + 1) * ((h) + 1 + ((j)-1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (5 - 1) * (e))] = d[(i) + (f + 1) * ((g) + 1 + ((j)-1) * (g + 3))];
}

__kernel void CD(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))] = b[(h)-1 + f * (((i)-1) + (1) * g)];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))] = b[(h)-1 + f * (((i)-1) + (2) * g)];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))] = c[(h)-1 + f * ((i) + 1 + ((1) + 1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))] = d[(h)-1 + (f + 1) * ((i)-1 + ((1) + 1) * g)];
}

__kernel void CE(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))] = b[(h)-1 + f * (((i)-1) + (1) * g)];
  a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))] = b[(h)-1 + f * (((i)-1) + (2) * g)];
  a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))] = c[(h)-1 + f * ((i) + 1 + ((1) + 1) * (g + 3))];
  a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))] = d[(h) + (f + 1) * ((i)-1 + ((1) + 1) * g)];
}

__kernel void CF(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > g)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (g))] = b[(i)-1 + f * (((j)-1) + (e)*g)];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (g))] = c[(i)-1 + f * ((j) + 1 + ((h) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (g))] = c[(i)-1 + f * ((j) + 1 + ((e) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (g))] = d[(i)-1 + (f + 1) * ((j)-1 + ((h) + 1) * g)];
  a[(i - 1) + (f) * ((j - 1) + (5 - 1) * (g))] = d[(i)-1 + (f + 1) * ((j)-1 + ((e) + 1) * g)];
}

__kernel void CG(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (i > f || j > g)
    return;
  a[(i - 1) + (f) * ((j - 1) + (1 - 1) * (g))] = b[(i)-1 + f * (((j)-1) + (e)*g)];
  a[(i - 1) + (f) * ((j - 1) + (2 - 1) * (g))] = c[(i)-1 + f * ((j) + 1 + ((h) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (3 - 1) * (g))] = c[(i)-1 + f * ((j) + 1 + ((e) + 1) * (g + 3))];
  a[(i - 1) + (f) * ((j - 1) + (4 - 1) * (g))] = d[(i) + (f + 1) * ((j)-1 + ((h) + 1) * g)];
  a[(i - 1) + (f) * ((j - 1) + (5 - 1) * (g))] = d[(i) + (f + 1) * ((j)-1 + ((e) + 1) * g)];
}

__kernel void CH(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > e)
    return;
  b[(j)-1 + f * ((h) + ((k)-1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (e))];
  b[(j)-1 + f * ((i) + ((k)-1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (e))];
  c[(j)-1 + f * ((h) + 1 + ((k) + 1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (e))];
  d[(j)-1 + (f + 1) * ((h) + 1 + ((k)-1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (e))];
}

__kernel void CI(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > e)
    return;
  b[(j)-1 + f * ((h) + ((k)-1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (e))];
  b[(j)-1 + f * ((i) + ((k)-1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (e))];
  c[(j)-1 + f * ((h) + 1 + ((k) + 1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (e))];
  d[(j) + (f + 1) * ((h) + 1 + ((k)-1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (e))];
}

__kernel void CJ(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  b[(h)-1 + f * ((0) + ((i)-1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))];
  c[(h)-1 + f * ((-1) + 1 + ((i) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))];
  c[(h)-1 + f * ((0) + 1 + ((i) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))];
  d[(h)-1 + (f + 1) * ((-1) + 1 + ((i)-1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))];
  d[(h)-1 + (f + 1) * ((0) + 1 + ((i)-1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (e))];
}
__kernel void CK(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > e)
    return;
  b[(h)-1 + f * ((0) + ((i)-1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (e))];
  c[(h)-1 + f * ((-1) + 1 + ((i) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (e))];
  c[(h)-1 + f * ((0) + 1 + ((i) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (e))];
  d[(h) + (f + 1) * ((-1) + 1 + ((i)-1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (e))];
  d[(h) + (f + 1) * ((0) + 1 + ((i)-1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (e))];
}

__kernel void CL(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > g)
    return;
  b[(j)-1 + f * (((k)-1) + (h)*g)] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (g))];
  b[(j)-1 + f * (((k)-1) + (i)*g)] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (g))];
  c[(j)-1 + f * ((k) + 1 + ((h) + 1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (g))];
  d[(j)-1 + (f + 1) * ((k)-1 + ((h) + 1) * g)] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (g))];
}

__kernel void CM(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g, int h, int i) {
  int j = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int k = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (j > f || k > g)
    return;
  b[(j)-1 + f * (((k)-1) + (h)*g)] = a[(j - 1) + (f) * ((k - 1) + (1 - 1) * (g))];
  b[(j)-1 + f * (((k)-1) + (i)*g)] = a[(j - 1) + (f) * ((k - 1) + (2 - 1) * (g))];
  c[(j)-1 + f * ((k) + 1 + ((h) + 1) * (g + 3))] = a[(j - 1) + (f) * ((k - 1) + (3 - 1) * (g))];
  d[(j) + (f + 1) * ((k)-1 + ((h) + 1) * g)] = a[(j - 1) + (f) * ((k - 1) + (4 - 1) * (g))];
}

__kernel void CN(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  b[(h)-1 + f * (((i)-1) + (0) * g)] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))];
  c[(h)-1 + f * ((i) + 1 + ((-1) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))];
  c[(h)-1 + f * ((i) + 1 + ((0) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))];
  d[(h)-1 + (f + 1) * ((i)-1 + ((-1) + 1) * g)] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))];
  d[(h)-1 + (f + 1) * ((i)-1 + ((0) + 1) * g)] = a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (g))];
}

__kernel void CO(__global float* a, __global float* b, __global float* c, __global float* d, int e, int f, int g) {
  int h = get_group_id(0) * get_local_size(0) + get_local_id(0) + 1;
  int i = get_group_id(1) * get_local_size(1) + get_local_id(1) + 1;
  if (h > f || i > g)
    return;
  b[(h)-1 + f * (((i)-1) + (0) * g)] = a[(h - 1) + (f) * ((i - 1) + (1 - 1) * (g))];
  c[(h)-1 + f * ((i) + 1 + ((-1) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (2 - 1) * (g))];
  c[(h)-1 + f * ((i) + 1 + ((0) + 1) * (g + 3))] = a[(h - 1) + (f) * ((i - 1) + (3 - 1) * (g))];
  d[(h) + (f + 1) * ((i)-1 + ((-1) + 1) * g)] = a[(h - 1) + (f) * ((i - 1) + (4 - 1) * (g))];
  d[(h) + (f + 1) * ((i)-1 + ((0) + 1) * g)] = a[(h - 1) + (f) * ((i - 1) + (5 - 1) * (g))];
}

__kernel void CP(int a, int b, int c, int d, int e, int f, int g, int h, __global float* i, __global float* j) {
  int k = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int l = get_group_id(1) * get_local_size(1) + get_local_id(1);
  int m = k + 1;
  int n = l + 1;
  if (m > d || n > a)
    return;

  int o = -2 + 3 * m;
  int p = -1 + 3 * n;
  j[(0) + (e + 1) * ((n) + 1 + ((m)-1) * (c + 3))] = i[(h)-1 + (h + 1) * ((p) + 1 + ((o)-1) * (f + 3))];
  j[(1) + (e + 1) * ((n) + 1 + ((m)-1) * (c + 3))] = i[(b)-1 + (h + 1) * ((p) + 1 + ((o)-1) * (f + 3))];
}

__kernel void CQ(int a, int b, int c, int d, int e, int f, int g, int h, __global float* i, __global float* j) {
  int k = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int l = get_group_id(1) * get_local_size(1) + get_local_id(1);
  int m = k + 1;
  int n = l + 1;
  if (m > a || n > c)
    return;
  int o = -1 + 3 * m;
  int p = -2 + 3 * n;
  j[(0) + (e + 1) * ((n)-1 + ((m) + 1) * c)] = i[(h)-1 + (h + 1) * ((p)-1 + ((o) + 1) * f)];
  j[(1) + (e + 1) * ((n)-1 + ((m) + 1) * c)] = i[(b)-1 + (h + 1) * ((p)-1 + ((o) + 1) * f)];
}

__kernel void CR(int a, int b, int c, int d, int e, int f, __global float* g, __global float* h) {
  int i = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int j = get_group_id(1) * get_local_size(1) + get_local_id(1);
  int k = i + 1;
  int l = j + 1;
  if (k > b || l > a)
    return;
  int m = -2 + 3 * k;
  int n = -2 + 3 * l;
  h[(0) + (c + 1) * ((l)-1 + ((k)-1) * a)] = g[(f)-1 + f * ((n)-1 + ((m)-1) * d)];
}

__kernel void CS(__global float* a, __global float* b, __global float* c, __global float* d, __global float* e, __global float* f, int g, int h, int i, int j, int k, int l, int m, int n, int o, int p, int q, int r, int s) {
  int t, u, v, w, x, y;

  x = m;
  if (h < 0)
    x = k;
  y = n;
  if (j < 0)
    y = l;

  u = -2;
  for (w = 1; w <= n; w++) {
    u = u + 3;
    t = -1;
    for (v = 1; v <= x; v++) {
      t = t + 3;
      d[(0) + (o + 1) * ((v) + 1 + ((w)-1) * (m + 3))] = a[(r)-1 + (r + 1) * ((t) + 1 + ((u)-1) * (p + 3))];
      d[(1) + (o + 1) * ((v) + 1 + ((w)-1) * (m + 3))] = a[(s)-1 + (r + 1) * ((t) + 1 + ((u)-1) * (p + 3))];
    }
  }

  u = -1;
  for (w = 1; w <= y; w++) {
    u = u + 3;
    t = -2;
    for (v = 1; v <= m; v++) {
      t = t + 3;
      e[(0) + (o + 1) * ((v)-1 + ((w) + 1) * m)] = b[(r)-1 + (r + 1) * ((t)-1 + ((u) + 1) * p)];
      e[(1) + (o + 1) * ((v)-1 + ((w) + 1) * m)] = b[(s)-1 + (r + 1) * ((t)-1 + ((u) + 1) * p)];
    }
  }

  u = -2;
  for (w = 1; w <= n; w++) {
    u = u + 3;
    t = -2;
    for (v = 1; v <= m; v++) {
      t = t + 3;
      f[(0) + (o + 1) * ((v)-1 + ((w)-1) * m)] = c[(r)-1 + r * ((t)-1 + ((u)-1) * p)];
    }
  }
}

__kernel void CT(int a, int b, int c, __global float* d, __global float* e, __global float* f) {
  int g = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int h = get_group_id(1) * get_local_size(1) + get_local_id(1) - 1;

  if (g > b + 2 - 1 || h > a + 3 - 2)
    return;

  for (int i = 0; i < c + 3; i++) {
    d[(g) + (b + 2) * ((h) + 1 + (i) * (a + 3))] += (g + h + i);
    e[(g) + (b + 2) * ((h + 1) + ((i - 1) + 1) * (a + 3))] += (g + h + i);
    f[(g) + (b + 2) * ((h + 1) + (i) * (a + 3))] += (g + h + i);
  }
}

__kernel void CU(int a, int b, int c, __global float* d, __global float* e, __global float* f) {
  int g = get_group_id(0) * get_local_size(0) + get_local_id(0);
  int h = get_group_id(1) * get_local_size(1) + get_local_id(1) - 1;

  if (g > b + 1 - 1 || h > a + 3 - 2)
    return;

  for (int i = 0; i < c + 3; i++) {
    d[(g) + (b + 1) * ((h) + 1 + (a + 3) * (i))] += (g + h + i);
    e[(g) + (b + 1) * ((h + 1) + (a + 3) * ((i - 1) + 1))] += (g + h + i);
    f[(g) + (b + 1) * ((h + 1) + (a + 3) * (i))] += (g + h + i);
  }
}