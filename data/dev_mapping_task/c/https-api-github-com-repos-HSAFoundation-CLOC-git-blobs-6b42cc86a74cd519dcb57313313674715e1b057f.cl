typedef unsigned char uchar; typedef unsigned short ushort; typedef unsigned int uint; typedef unsigned long ulong; typedef long unsigned int size_t; typedef long int ptrdiff_t; typedef long int intptr_t; typedef unsigned long int uintptr_t; typedef __attribute__((ext_vector_type(2))) char char2; typedef __attribute__((ext_vector_type(3))) char char3; typedef __attribute__((ext_vector_type(4))) char char4; typedef __attribute__((ext_vector_type(8))) char char8; typedef __attribute__((ext_vector_type(16))) char char16; typedef __attribute__((ext_vector_type(2))) uchar uchar2; typedef __attribute__((ext_vector_type(3))) uchar uchar3; typedef __attribute__((ext_vector_type(4))) uchar uchar4; typedef __attribute__((ext_vector_type(8))) uchar uchar8; typedef __attribute__((ext_vector_type(16))) uchar uchar16; typedef __attribute__((ext_vector_type(2))) short short2; typedef __attribute__((ext_vector_type(3))) short short3; typedef __attribute__((ext_vector_type(4))) short short4; typedef __attribute__((ext_vector_type(8))) short short8; typedef __attribute__((ext_vector_type(16))) short short16; typedef __attribute__((ext_vector_type(2))) ushort ushort2; typedef __attribute__((ext_vector_type(3))) ushort ushort3; typedef __attribute__((ext_vector_type(4))) ushort ushort4; typedef __attribute__((ext_vector_type(8))) ushort ushort8; typedef __attribute__((ext_vector_type(16))) ushort ushort16; typedef __attribute__((ext_vector_type(2))) int int2; typedef __attribute__((ext_vector_type(3))) int int3; typedef __attribute__((ext_vector_type(4))) int int4; typedef __attribute__((ext_vector_type(8))) int int8; typedef __attribute__((ext_vector_type(16))) int int16; typedef __attribute__((ext_vector_type(2))) uint uint2; typedef __attribute__((ext_vector_type(3))) uint uint3; typedef __attribute__((ext_vector_type(4))) uint uint4; typedef __attribute__((ext_vector_type(8))) uint uint8; typedef __attribute__((ext_vector_type(16))) uint uint16; typedef __attribute__((ext_vector_type(2))) long long2; typedef __attribute__((ext_vector_type(3))) long long3; typedef __attribute__((ext_vector_type(4))) long long4; typedef __attribute__((ext_vector_type(8))) long long8; typedef __attribute__((ext_vector_type(16))) long long16; typedef __attribute__((ext_vector_type(2))) ulong ulong2; typedef __attribute__((ext_vector_type(3))) ulong ulong3; typedef __attribute__((ext_vector_type(4))) ulong ulong4; typedef __attribute__((ext_vector_type(8))) ulong ulong8; typedef __attribute__((ext_vector_type(16))) ulong ulong16; typedef __attribute__((ext_vector_type(2))) float float2; typedef __attribute__((ext_vector_type(3))) float float3; typedef __attribute__((ext_vector_type(4))) float float4; typedef __attribute__((ext_vector_type(8))) float float8; typedef __attribute__((ext_vector_type(16))) float float16; typedef __attribute__((ext_vector_type(2))) double double2; typedef __attribute__((ext_vector_type(3))) double double3; typedef __attribute__((ext_vector_type(4))) double double4; typedef __attribute__((ext_vector_type(8))) double double8; typedef __attribute__((ext_vector_type(16))) double double16; __attribute__((overloadable)) char A(char a); __attribute__((overloadable)) char2 B(char2 a); __attribute__((overloadable)) char3 C(char3 a); __attribute__((overloadable)) char4 D(char4 a); __attribute__((overloadable)) char8 E(char8 a); __attribute__((overloadable)) char16 F(char16 a); __attribute__((overloadable)) uchar G(char a); __attribute__((overloadable)) uchar2 H(char2 a); __attribute__((overloadable)) uchar3 I(char3 a); __attribute__((overloadable)) uchar4 J(char4 a); __attribute__((overloadable)) uchar8 K(char8 a); __attribute__((overloadable)) uchar16 L(char16 a); __attribute__((overloadable)) int M(char a); __attribute__((overloadable)) int2 N(char2 a); __attribute__((overloadable)) int3 O(char3 a); __attribute__((overloadable)) int4 P(char4 a); __attribute__((overloadable)) int8 Q(char8 a); __attribute__((overloadable)) int16 R(char16 a); __attribute__((overloadable)) uint S(char a); __attribute__((overloadable)) uint2 T(char2 a); __attribute__((overloadable)) uint3 U(char3 a); __attribute__((overloadable)) uint4 V(char4 a); __attribute__((overloadable)) uint8 W(char8 a); __attribute__((overloadable)) uint16 X(char16 a); __attribute__((overloadable)) short Y(char a); __attribute__((overloadable)) short2 Z(char2 a); __attribute__((overloadable)) short3 AA(char3 a); __attribute__((overloadable)) short4 AB(char4 a); __attribute__((overloadable)) short8 AC(char8 a); __attribute__((overloadable)) short16 AD(char16 a); __attribute__((overloadable)) ushort AE(char a); __attribute__((overloadable)) ushort2 AF(char2 a); __attribute__((overloadable)) ushort3 AG(char3 a); __attribute__((overloadable)) ushort4 AH(char4 a); __attribute__((overloadable)) ushort8 AI(char8 a); __attribute__((overloadable)) ushort16 AJ(char16 a); __attribute__((overloadable)) long AK(char a); __attribute__((overloadable)) long2 AL(char2 a); __attribute__((overloadable)) long3 AM(char3 a); __attribute__((overloadable)) long4 AN(char4 a); __attribute__((overloadable)) long8 AO(char8 a); __attribute__((overloadable)) long16 AP(char16 a); __attribute__((overloadable)) ulong AQ(char a); __attribute__((overloadable)) ulong2 AR(char2 a); __attribute__((overloadable)) ulong3 AS(char3 a); __attribute__((overloadable)) ulong4 AT(char4 a); __attribute__((overloadable)) ulong8 AU(char8 a); __attribute__((overloadable)) ulong16 AV(char16 a); __attribute__((overloadable)) float AW(char a); __attribute__((overloadable)) float2 AX(char2 a); __attribute__((overloadable)) float3 AY(char3 a); __attribute__((overloadable)) float4 AZ(char4 a); __attribute__((overloadable)) float8 BA(char8 a); __attribute__((overloadable)) float16 BB(char16 a); __attribute__((overloadable)) double BC(char a); __attribute__((overloadable)) double2 BD(char2 a); __attribute__((overloadable)) double3 BE(char3 a); __attribute__((overloadable)) double4 BF(char4 a); __attribute__((overloadable)) double8 BG(char8 a); __attribute__((overloadable)) double16 BH(char16 a); __attribute__((overloadable)) char A(uchar a); __attribute__((overloadable)) char2 B(uchar2 a); __attribute__((overloadable)) char3 C(uchar3 a); __attribute__((overloadable)) char4 D(uchar4 a); __attribute__((overloadable)) char8 E(uchar8 a); __attribute__((overloadable)) char16 F(uchar16 a); __attribute__((overloadable)) uchar G(uchar a); __attribute__((overloadable)) uchar2 H(uchar2 a); __attribute__((overloadable)) uchar3 I(uchar3 a); __attribute__((overloadable)) uchar4 J(uchar4 a); __attribute__((overloadable)) uchar8 K(uchar8 a); __attribute__((overloadable)) uchar16 L(uchar16 a); __attribute__((overloadable)) int M(uchar a); __attribute__((overloadable)) int2 N(uchar2 a); __attribute__((overloadable)) int3 O(uchar3 a); __attribute__((overloadable)) int4 P(uchar4 a); __attribute__((overloadable)) int8 Q(uchar8 a); __attribute__((overloadable)) int16 R(uchar16 a); __attribute__((overloadable)) uint S(uchar a); __attribute__((overloadable)) uint2 T(uchar2 a); __attribute__((overloadable)) uint3 U(uchar3 a); __attribute__((overloadable)) uint4 V(uchar4 a); __attribute__((overloadable)) uint8 W(uchar8 a); __attribute__((overloadable)) uint16 X(uchar16 a); __attribute__((overloadable)) short Y(uchar a); __attribute__((overloadable)) short2 Z(uchar2 a); __attribute__((overloadable)) short3 AA(uchar3 a); __attribute__((overloadable)) short4 AB(uchar4 a); __attribute__((overloadable)) short8 AC(uchar8 a); __attribute__((overloadable)) short16 AD(uchar16 a); __attribute__((overloadable)) ushort AE(uchar a); __attribute__((overloadable)) ushort2 AF(uchar2 a); __attribute__((overloadable)) ushort3 AG(uchar3 a); __attribute__((overloadable)) ushort4 AH(uchar4 a); __attribute__((overloadable)) ushort8 AI(uchar8 a); __attribute__((overloadable)) ushort16 AJ(uchar16 a); __attribute__((overloadable)) long AK(uchar a); __attribute__((overloadable)) long2 AL(uchar2 a); __attribute__((overloadable)) long3 AM(uchar3 a); __attribute__((overloadable)) long4 AN(uchar4 a); __attribute__((overloadable)) long8 AO(uchar8 a); __attribute__((overloadable)) long16 AP(uchar16 a); __attribute__((overloadable)) ulong AQ(uchar a); __attribute__((overloadable)) ulong2 AR(uchar2 a); __attribute__((overloadable)) ulong3 AS(uchar3 a); __attribute__((overloadable)) ulong4 AT(uchar4 a); __attribute__((overloadable)) ulong8 AU(uchar8 a); __attribute__((overloadable)) ulong16 AV(uchar16 a); __attribute__((overloadable)) float AW(uchar a); __attribute__((overloadable)) float2 AX(uchar2 a); __attribute__((overloadable)) float3 AY(uchar3 a); __attribute__((overloadable)) float4 AZ(uchar4 a); __attribute__((overloadable)) float8 BA(uchar8 a); __attribute__((overloadable)) float16 BB(uchar16 a); __attribute__((overloadable)) double BC(uchar a); __attribute__((overloadable)) double2 BD(uchar2 a); __attribute__((overloadable)) double3 BE(uchar3 a); __attribute__((overloadable)) double4 BF(uchar4 a); __attribute__((overloadable)) double8 BG(uchar8 a); __attribute__((overloadable)) double16 BH(uchar16 a); __attribute__((overloadable)) char A(int a); __attribute__((overloadable)) char2 B(int2 a); __attribute__((overloadable)) char3 C(int3 a); __attribute__((overloadable)) char4 D(int4 a); __attribute__((overloadable)) char8 E(int8 a); __attribute__((overloadable)) char16 F(int16 a); __attribute__((overloadable)) uchar G(int a); __attribute__((overloadable)) uchar2 H(int2 a); __attribute__((overloadable)) uchar3 I(int3 a); __attribute__((overloadable)) uchar4 J(int4 a); __attribute__((overloadable)) uchar8 K(int8 a); __attribute__((overloadable)) uchar16 L(int16 a); __attribute__((overloadable)) int M(int a); __attribute__((overloadable)) int2 N(int2 a); __attribute__((overloadable)) int3 O(int3 a); __attribute__((overloadable)) int4 P(int4 a); __attribute__((overloadable)) int8 Q(int8 a); __attribute__((overloadable)) int16 R(int16 a); __attribute__((overloadable)) uint S(int a); __attribute__((overloadable)) uint2 T(int2 a); __attribute__((overloadable)) uint3 U(int3 a); __attribute__((overloadable)) uint4 V(int4 a); __attribute__((overloadable)) uint8 W(int8 a); __attribute__((overloadable)) uint16 X(int16 a); __attribute__((overloadable)) short Y(int a); __attribute__((overloadable)) short2 Z(int2 a); __attribute__((overloadable)) short3 AA(int3 a); __attribute__((overloadable)) short4 AB(int4 a); __attribute__((overloadable)) short8 AC(int8 a); __attribute__((overloadable)) short16 AD(int16 a); __attribute__((overloadable)) ushort AE(int a); __attribute__((overloadable)) ushort2 AF(int2 a); __attribute__((overloadable)) ushort3 AG(int3 a); __attribute__((overloadable)) ushort4 AH(int4 a); __attribute__((overloadable)) ushort8 AI(int8 a); __attribute__((overloadable)) ushort16 AJ(int16 a); __attribute__((overloadable)) long AK(int a); __attribute__((overloadable)) long2 AL(int2 a); __attribute__((overloadable)) long3 AM(int3 a); __attribute__((overloadable)) long4 AN(int4 a); __attribute__((overloadable)) long8 AO(int8 a); __attribute__((overloadable)) long16 AP(int16 a); __attribute__((overloadable)) ulong AQ(int a); __attribute__((overloadable)) ulong2 AR(int2 a); __attribute__((overloadable)) ulong3 AS(int3 a); __attribute__((overloadable)) ulong4 AT(int4 a); __attribute__((overloadable)) ulong8 AU(int8 a); __attribute__((overloadable)) ulong16 AV(int16 a); __attribute__((overloadable)) float AW(int a); __attribute__((overloadable)) float2 AX(int2 a); __attribute__((overloadable)) float3 AY(int3 a); __attribute__((overloadable)) float4 AZ(int4 a); __attribute__((overloadable)) float8 BA(int8 a); __attribute__((overloadable)) float16 BB(int16 a); __attribute__((overloadable)) double BC(int a); __attribute__((overloadable)) double2 BD(int2 a); __attribute__((overloadable)) double3 BE(int3 a); __attribute__((overloadable)) double4 BF(int4 a); __attribute__((overloadable)) double8 BG(int8 a); __attribute__((overloadable)) double16 BH(int16 a); __attribute__((overloadable)) char A(uint a); __attribute__((overloadable)) char2 B(uint2 a); __attribute__((overloadable)) char3 C(uint3 a); __attribute__((overloadable)) char4 D(uint4 a); __attribute__((overloadable)) char8 E(uint8 a); __attribute__((overloadable)) char16 F(uint16 a); __attribute__((overloadable)) uchar G(uint a); __attribute__((overloadable)) uchar2 H(uint2 a); __attribute__((overloadable)) uchar3 I(uint3 a); __attribute__((overloadable)) uchar4 J(uint4 a); __attribute__((overloadable)) uchar8 K(uint8 a); __attribute__((overloadable)) uchar16 L(uint16 a); __attribute__((overloadable)) int M(uint a); __attribute__((overloadable)) int2 N(uint2 a); __attribute__((overloadable)) int3 O(uint3 a); __attribute__((overloadable)) int4 P(uint4 a); __attribute__((overloadable)) int8 Q(uint8 a); __attribute__((overloadable)) int16 R(uint16 a); __attribute__((overloadable)) uint S(uint a); __attribute__((overloadable)) uint2 T(uint2 a); __attribute__((overloadable)) uint3 U(uint3 a); __attribute__((overloadable)) uint4 V(uint4 a); __attribute__((overloadable)) uint8 W(uint8 a); __attribute__((overloadable)) uint16 X(uint16 a); __attribute__((overloadable)) short Y(uint a); __attribute__((overloadable)) short2 Z(uint2 a); __attribute__((overloadable)) short3 AA(uint3 a); __attribute__((overloadable)) short4 AB(uint4 a); __attribute__((overloadable)) short8 AC(uint8 a); __attribute__((overloadable)) short16 AD(uint16 a); __attribute__((overloadable)) ushort AE(uint a); __attribute__((overloadable)) ushort2 AF(uint2 a); __attribute__((overloadable)) ushort3 AG(uint3 a); __attribute__((overloadable)) ushort4 AH(uint4 a); __attribute__((overloadable)) ushort8 AI(uint8 a); __attribute__((overloadable)) ushort16 AJ(uint16 a); __attribute__((overloadable)) long AK(uint a); __attribute__((overloadable)) long2 AL(uint2 a); __attribute__((overloadable)) long3 AM(uint3 a); __attribute__((overloadable)) long4 AN(uint4 a); __attribute__((overloadable)) long8 AO(uint8 a); __attribute__((overloadable)) long16 AP(uint16 a); __attribute__((overloadable)) ulong AQ(uint a); __attribute__((overloadable)) ulong2 AR(uint2 a); __attribute__((overloadable)) ulong3 AS(uint3 a); __attribute__((overloadable)) ulong4 AT(uint4 a); __attribute__((overloadable)) ulong8 AU(uint8 a); __attribute__((overloadable)) ulong16 AV(uint16 a); __attribute__((overloadable)) float AW(uint a); __attribute__((overloadable)) float2 AX(uint2 a); __attribute__((overloadable)) float3 AY(uint3 a); __attribute__((overloadable)) float4 AZ(uint4 a); __attribute__((overloadable)) float8 BA(uint8 a); __attribute__((overloadable)) float16 BB(uint16 a); __attribute__((overloadable)) double BC(uint a); __attribute__((overloadable)) double2 BD(uint2 a); __attribute__((overloadable)) double3 BE(uint3 a); __attribute__((overloadable)) double4 BF(uint4 a); __attribute__((overloadable)) double8 BG(uint8 a); __attribute__((overloadable)) double16 BH(uint16 a); __attribute__((overloadable)) char A(short a); __attribute__((overloadable)) char2 B(short2 a); __attribute__((overloadable)) char3 C(short3 a); __attribute__((overloadable)) char4 D(short4 a); __attribute__((overloadable)) char8 E(short8 a); __attribute__((overloadable)) char16 F(short16 a); __attribute__((overloadable)) uchar G(short a); __attribute__((overloadable)) uchar2 H(short2 a); __attribute__((overloadable)) uchar3 I(short3 a); __attribute__((overloadable)) uchar4 J(short4 a); __attribute__((overloadable)) uchar8 K(short8 a); __attribute__((overloadable)) uchar16 L(short16 a); __attribute__((overloadable)) int M(short a); __attribute__((overloadable)) int2 N(short2 a); __attribute__((overloadable)) int3 O(short3 a); __attribute__((overloadable)) int4 P(short4 a); __attribute__((overloadable)) int8 Q(short8 a); __attribute__((overloadable)) int16 R(short16 a); __attribute__((overloadable)) uint S(short a); __attribute__((overloadable)) uint2 T(short2 a); __attribute__((overloadable)) uint3 U(short3 a); __attribute__((overloadable)) uint4 V(short4 a); __attribute__((overloadable)) uint8 W(short8 a); __attribute__((overloadable)) uint16 X(short16 a); __attribute__((overloadable)) short Y(short a); __attribute__((overloadable)) short2 Z(short2 a); __attribute__((overloadable)) short3 AA(short3 a); __attribute__((overloadable)) short4 AB(short4 a); __attribute__((overloadable)) short8 AC(short8 a); __attribute__((overloadable)) short16 AD(short16 a); __attribute__((overloadable)) ushort AE(short a); __attribute__((overloadable)) ushort2 AF(short2 a); __attribute__((overloadable)) ushort3 AG(short3 a); __attribute__((overloadable)) ushort4 AH(short4 a); __attribute__((overloadable)) ushort8 AI(short8 a); __attribute__((overloadable)) ushort16 AJ(short16 a); __attribute__((overloadable)) long AK(short a); __attribute__((overloadable)) long2 AL(short2 a); __attribute__((overloadable)) long3 AM(short3 a); __attribute__((overloadable)) long4 AN(short4 a); __attribute__((overloadable)) long8 AO(short8 a); __attribute__((overloadable)) long16 AP(short16 a); __attribute__((overloadable)) ulong AQ(short a); __attribute__((overloadable)) ulong2 AR(short2 a); __attribute__((overloadable)) ulong3 AS(short3 a); __attribute__((overloadable)) ulong4 AT(short4 a); __attribute__((overloadable)) ulong8 AU(short8 a); __attribute__((overloadable)) ulong16 AV(short16 a); __attribute__((overloadable)) float AW(short a); __attribute__((overloadable)) float2 AX(short2 a); __attribute__((overloadable)) float3 AY(short3 a); __attribute__((overloadable)) float4 AZ(short4 a); __attribute__((overloadable)) float8 BA(short8 a); __attribute__((overloadable)) float16 BB(short16 a); __attribute__((overloadable)) double BC(short a); __attribute__((overloadable)) double2 BD(short2 a); __attribute__((overloadable)) double3 BE(short3 a); __attribute__((overloadable)) double4 BF(short4 a); __attribute__((overloadable)) double8 BG(short8 a); __attribute__((overloadable)) double16 BH(short16 a); __attribute__((overloadable)) char A(ushort a); __attribute__((overloadable)) char2 B(ushort2 a); __attribute__((overloadable)) char3 C(ushort3 a); __attribute__((overloadable)) char4 D(ushort4 a); __attribute__((overloadable)) char8 E(ushort8 a); __attribute__((overloadable)) char16 F(ushort16 a); __attribute__((overloadable)) uchar G(ushort a); __attribute__((overloadable)) uchar2 H(ushort2 a); __attribute__((overloadable)) uchar3 I(ushort3 a); __attribute__((overloadable)) uchar4 J(ushort4 a); __attribute__((overloadable)) uchar8 K(ushort8 a); __attribute__((overloadable)) uchar16 L(ushort16 a); __attribute__((overloadable)) int M(ushort a); __attribute__((overloadable)) int2 N(ushort2 a); __attribute__((overloadable)) int3 O(ushort3 a); __attribute__((overloadable)) int4 P(ushort4 a); __attribute__((overloadable)) int8 Q(ushort8 a); __attribute__((overloadable)) int16 R(ushort16 a); __attribute__((overloadable)) uint S(ushort a); __attribute__((overloadable)) uint2 T(ushort2 a); __attribute__((overloadable)) uint3 U(ushort3 a); __attribute__((overloadable)) uint4 V(ushort4 a); __attribute__((overloadable)) uint8 W(ushort8 a); __attribute__((overloadable)) uint16 X(ushort16 a); __attribute__((overloadable)) short Y(ushort a); __attribute__((overloadable)) short2 Z(ushort2 a); __attribute__((overloadable)) short3 AA(ushort3 a); __attribute__((overloadable)) short4 AB(ushort4 a); __attribute__((overloadable)) short8 AC(ushort8 a); __attribute__((overloadable)) short16 AD(ushort16 a); __attribute__((overloadable)) ushort AE(ushort a); __attribute__((overloadable)) ushort2 AF(ushort2 a); __attribute__((overloadable)) ushort3 AG(ushort3 a); __attribute__((overloadable)) ushort4 AH(ushort4 a); __attribute__((overloadable)) ushort8 AI(ushort8 a); __attribute__((overloadable)) ushort16 AJ(ushort16 a); __attribute__((overloadable)) long AK(ushort a); __attribute__((overloadable)) long2 AL(ushort2 a); __attribute__((overloadable)) long3 AM(ushort3 a); __attribute__((overloadable)) long4 AN(ushort4 a); __attribute__((overloadable)) long8 AO(ushort8 a); __attribute__((overloadable)) long16 AP(ushort16 a); __attribute__((overloadable)) ulong AQ(ushort a); __attribute__((overloadable)) ulong2 AR(ushort2 a); __attribute__((overloadable)) ulong3 AS(ushort3 a); __attribute__((overloadable)) ulong4 AT(ushort4 a); __attribute__((overloadable)) ulong8 AU(ushort8 a); __attribute__((overloadable)) ulong16 AV(ushort16 a); __attribute__((overloadable)) float AW(ushort a); __attribute__((overloadable)) float2 AX(ushort2 a); __attribute__((overloadable)) float3 AY(ushort3 a); __attribute__((overloadable)) float4 AZ(ushort4 a); __attribute__((overloadable)) float8 BA(ushort8 a); __attribute__((overloadable)) float16 BB(ushort16 a); __attribute__((overloadable)) double BC(ushort a); __attribute__((overloadable)) double2 BD(ushort2 a); __attribute__((overloadable)) double3 BE(ushort3 a); __attribute__((overloadable)) double4 BF(ushort4 a); __attribute__((overloadable)) double8 BG(ushort8 a); __attribute__((overloadable)) double16 BH(ushort16 a); __attribute__((overloadable)) char A(long a); __attribute__((overloadable)) char2 B(long2 a); __attribute__((overloadable)) char3 C(long3 a); __attribute__((overloadable)) char4 D(long4 a); __attribute__((overloadable)) char8 E(long8 a); __attribute__((overloadable)) char16 F(long16 a); __attribute__((overloadable)) uchar G(long a); __attribute__((overloadable)) uchar2 H(long2 a); __attribute__((overloadable)) uchar3 I(long3 a); __attribute__((overloadable)) uchar4 J(long4 a); __attribute__((overloadable)) uchar8 K(long8 a); __attribute__((overloadable)) uchar16 L(long16 a); __attribute__((overloadable)) int M(long a); __attribute__((overloadable)) int2 N(long2 a); __attribute__((overloadable)) int3 O(long3 a); __attribute__((overloadable)) int4 P(long4 a); __attribute__((overloadable)) int8 Q(long8 a); __attribute__((overloadable)) int16 R(long16 a); __attribute__((overloadable)) uint S(long a); __attribute__((overloadable)) uint2 T(long2 a); __attribute__((overloadable)) uint3 U(long3 a); __attribute__((overloadable)) uint4 V(long4 a); __attribute__((overloadable)) uint8 W(long8 a); __attribute__((overloadable)) uint16 X(long16 a); __attribute__((overloadable)) short Y(long a); __attribute__((overloadable)) short2 Z(long2 a); __attribute__((overloadable)) short3 AA(long3 a); __attribute__((overloadable)) short4 AB(long4 a); __attribute__((overloadable)) short8 AC(long8 a); __attribute__((overloadable)) short16 AD(long16 a); __attribute__((overloadable)) ushort AE(long a); __attribute__((overloadable)) ushort2 AF(long2 a); __attribute__((overloadable)) ushort3 AG(long3 a); __attribute__((overloadable)) ushort4 AH(long4 a); __attribute__((overloadable)) ushort8 AI(long8 a); __attribute__((overloadable)) ushort16 AJ(long16 a); __attribute__((overloadable)) long AK(long a); __attribute__((overloadable)) long2 AL(long2 a); __attribute__((overloadable)) long3 AM(long3 a); __attribute__((overloadable)) long4 AN(long4 a); __attribute__((overloadable)) long8 AO(long8 a); __attribute__((overloadable)) long16 AP(long16 a); __attribute__((overloadable)) ulong AQ(long a); __attribute__((overloadable)) ulong2 AR(long2 a); __attribute__((overloadable)) ulong3 AS(long3 a); __attribute__((overloadable)) ulong4 AT(long4 a); __attribute__((overloadable)) ulong8 AU(long8 a); __attribute__((overloadable)) ulong16 AV(long16 a); __attribute__((overloadable)) float AW(long a); __attribute__((overloadable)) float2 AX(long2 a); __attribute__((overloadable)) float3 AY(long3 a); __attribute__((overloadable)) float4 AZ(long4 a); __attribute__((overloadable)) float8 BA(long8 a); __attribute__((overloadable)) float16 BB(long16 a); __attribute__((overloadable)) double BC(long a); __attribute__((overloadable)) double2 BD(long2 a); __attribute__((overloadable)) double3 BE(long3 a); __attribute__((overloadable)) double4 BF(long4 a); __attribute__((overloadable)) double8 BG(long8 a); __attribute__((overloadable)) double16 BH(long16 a); __attribute__((overloadable)) char A(ulong a); __attribute__((overloadable)) char2 B(ulong2 a); __attribute__((overloadable)) char3 C(ulong3 a); __attribute__((overloadable)) char4 D(ulong4 a); __attribute__((overloadable)) char8 E(ulong8 a); __attribute__((overloadable)) char16 F(ulong16 a); __attribute__((overloadable)) uchar G(ulong a); __attribute__((overloadable)) uchar2 H(ulong2 a); __attribute__((overloadable)) uchar3 I(ulong3 a); __attribute__((overloadable)) uchar4 J(ulong4 a); __attribute__((overloadable)) uchar8 K(ulong8 a); __attribute__((overloadable)) uchar16 L(ulong16 a); __attribute__((overloadable)) int M(ulong a); __attribute__((overloadable)) int2 N(ulong2 a); __attribute__((overloadable)) int3 O(ulong3 a); __attribute__((overloadable)) int4 P(ulong4 a); __attribute__((overloadable)) int8 Q(ulong8 a); __attribute__((overloadable)) int16 R(ulong16 a); __attribute__((overloadable)) uint S(ulong a); __attribute__((overloadable)) uint2 T(ulong2 a); __attribute__((overloadable)) uint3 U(ulong3 a); __attribute__((overloadable)) uint4 V(ulong4 a); __attribute__((overloadable)) uint8 W(ulong8 a); __attribute__((overloadable)) uint16 X(ulong16 a); __attribute__((overloadable)) short Y(ulong a); __attribute__((overloadable)) short2 Z(ulong2 a); __attribute__((overloadable)) short3 AA(ulong3 a); __attribute__((overloadable)) short4 AB(ulong4 a); __attribute__((overloadable)) short8 AC(ulong8 a); __attribute__((overloadable)) short16 AD(ulong16 a); __attribute__((overloadable)) ushort AE(ulong a); __attribute__((overloadable)) ushort2 AF(ulong2 a); __attribute__((overloadable)) ushort3 AG(ulong3 a); __attribute__((overloadable)) ushort4 AH(ulong4 a); __attribute__((overloadable)) ushort8 AI(ulong8 a); __attribute__((overloadable)) ushort16 AJ(ulong16 a); __attribute__((overloadable)) long AK(ulong a); __attribute__((overloadable)) long2 AL(ulong2 a); __attribute__((overloadable)) long3 AM(ulong3 a); __attribute__((overloadable)) long4 AN(ulong4 a); __attribute__((overloadable)) long8 AO(ulong8 a); __attribute__((overloadable)) long16 AP(ulong16 a); __attribute__((overloadable)) ulong AQ(ulong a); __attribute__((overloadable)) ulong2 AR(ulong2 a); __attribute__((overloadable)) ulong3 AS(ulong3 a); __attribute__((overloadable)) ulong4 AT(ulong4 a); __attribute__((overloadable)) ulong8 AU(ulong8 a); __attribute__((overloadable)) ulong16 AV(ulong16 a); __attribute__((overloadable)) float AW(ulong a); __attribute__((overloadable)) float2 AX(ulong2 a); __attribute__((overloadable)) float3 AY(ulong3 a); __attribute__((overloadable)) float4 AZ(ulong4 a); __attribute__((overloadable)) float8 BA(ulong8 a); __attribute__((overloadable)) float16 BB(ulong16 a); __attribute__((overloadable)) double BC(ulong a); __attribute__((overloadable)) double2 BD(ulong2 a); __attribute__((overloadable)) double3 BE(ulong3 a); __attribute__((overloadable)) double4 BF(ulong4 a); __attribute__((overloadable)) double8 BG(ulong8 a); __attribute__((overloadable)) double16 BH(ulong16 a); __attribute__((overloadable)) char A(float a); __attribute__((overloadable)) char2 B(float2 a); __attribute__((overloadable)) char3 C(float3 a); __attribute__((overloadable)) char4 D(float4 a); __attribute__((overloadable)) char8 E(float8 a); __attribute__((overloadable)) char16 F(float16 a); __attribute__((overloadable)) uchar G(float a); __attribute__((overloadable)) uchar2 H(float2 a); __attribute__((overloadable)) uchar3 I(float3 a); __attribute__((overloadable)) uchar4 J(float4 a); __attribute__((overloadable)) uchar8 K(float8 a); __attribute__((overloadable)) uchar16 L(float16 a); __attribute__((overloadable)) int M(float a); __attribute__((overloadable)) int2 N(float2 a); __attribute__((overloadable)) int3 O(float3 a); __attribute__((overloadable)) int4 P(float4 a); __attribute__((overloadable)) int8 Q(float8 a); __attribute__((overloadable)) int16 R(float16 a); __attribute__((overloadable)) uint S(float a); __attribute__((overloadable)) uint2 T(float2 a); __attribute__((overloadable)) uint3 U(float3 a); __attribute__((overloadable)) uint4 V(float4 a); __attribute__((overloadable)) uint8 W(float8 a); __attribute__((overloadable)) uint16 X(float16 a); __attribute__((overloadable)) short Y(float a); __attribute__((overloadable)) short2 Z(float2 a); __attribute__((overloadable)) short3 AA(float3 a); __attribute__((overloadable)) short4 AB(float4 a); __attribute__((overloadable)) short8 AC(float8 a); __attribute__((overloadable)) short16 AD(float16 a); __attribute__((overloadable)) ushort AE(float a); __attribute__((overloadable)) ushort2 AF(float2 a); __attribute__((overloadable)) ushort3 AG(float3 a); __attribute__((overloadable)) ushort4 AH(float4 a); __attribute__((overloadable)) ushort8 AI(float8 a); __attribute__((overloadable)) ushort16 AJ(float16 a); __attribute__((overloadable)) long AK(float a); __attribute__((overloadable)) long2 AL(float2 a); __attribute__((overloadable)) long3 AM(float3 a); __attribute__((overloadable)) long4 AN(float4 a); __attribute__((overloadable)) long8 AO(float8 a); __attribute__((overloadable)) long16 AP(float16 a); __attribute__((overloadable)) ulong AQ(float a); __attribute__((overloadable)) ulong2 AR(float2 a); __attribute__((overloadable)) ulong3 AS(float3 a); __attribute__((overloadable)) ulong4 AT(float4 a); __attribute__((overloadable)) ulong8 AU(float8 a); __attribute__((overloadable)) ulong16 AV(float16 a); __attribute__((overloadable)) float AW(float a); __attribute__((overloadable)) float2 AX(float2 a); __attribute__((overloadable)) float3 AY(float3 a); __attribute__((overloadable)) float4 AZ(float4 a); __attribute__((overloadable)) float8 BA(float8 a); __attribute__((overloadable)) float16 BB(float16 a); __attribute__((overloadable)) double BC(float a); __attribute__((overloadable)) double2 BD(float2 a); __attribute__((overloadable)) double3 BE(float3 a); __attribute__((overloadable)) double4 BF(float4 a); __attribute__((overloadable)) double8 BG(float8 a); __attribute__((overloadable)) double16 BH(float16 a); __attribute__((overloadable)) char A(double a); __attribute__((overloadable)) char2 B(double2 a); __attribute__((overloadable)) char3 C(double3 a); __attribute__((overloadable)) char4 D(double4 a); __attribute__((overloadable)) char8 E(double8 a); __attribute__((overloadable)) char16 F(double16 a); __attribute__((overloadable)) uchar G(double a); __attribute__((overloadable)) uchar2 H(double2 a); __attribute__((overloadable)) uchar3 I(double3 a); __attribute__((overloadable)) uchar4 J(double4 a); __attribute__((overloadable)) uchar8 K(double8 a); __attribute__((overloadable)) uchar16 L(double16 a); __attribute__((overloadable)) int M(double a); __attribute__((overloadable)) int2 N(double2 a); __attribute__((overloadable)) int3 O(double3 a); __attribute__((overloadable)) int4 P(double4 a); __attribute__((overloadable)) int8 Q(double8 a); __attribute__((overloadable)) int16 R(double16 a); __attribute__((overloadable)) uint S(double a); __attribute__((overloadable)) uint2 T(double2 a); __attribute__((overloadable)) uint3 U(double3 a); __attribute__((overloadable)) uint4 V(double4 a); __attribute__((overloadable)) uint8 W(double8 a); __attribute__((overloadable)) uint16 X(double16 a); __attribute__((overloadable)) short Y(double a); __attribute__((overloadable)) short2 Z(double2 a); __attribute__((overloadable)) short3 AA(double3 a); __attribute__((overloadable)) short4 AB(double4 a); __attribute__((overloadable)) short8 AC(double8 a); __attribute__((overloadable)) short16 AD(double16 a); __attribute__((overloadable)) ushort AE(double a); __attribute__((overloadable)) ushort2 AF(double2 a); __attribute__((overloadable)) ushort3 AG(double3 a); __attribute__((overloadable)) ushort4 AH(double4 a); __attribute__((overloadable)) ushort8 AI(double8 a); __attribute__((overloadable)) ushort16 AJ(double16 a); __attribute__((overloadable)) long AK(double a); __attribute__((overloadable)) long2 AL(double2 a); __attribute__((overloadable)) long3 AM(double3 a); __attribute__((overloadable)) long4 AN(double4 a); __attribute__((overloadable)) long8 AO(double8 a); __attribute__((overloadable)) long16 AP(double16 a); __attribute__((overloadable)) ulong AQ(double a); __attribute__((overloadable)) ulong2 AR(double2 a); __attribute__((overloadable)) ulong3 AS(double3 a); __attribute__((overloadable)) ulong4 AT(double4 a); __attribute__((overloadable)) ulong8 AU(double8 a); __attribute__((overloadable)) ulong16 AV(double16 a); __attribute__((overloadable)) float AW(double a); __attribute__((overloadable)) float2 AX(double2 a); __attribute__((overloadable)) float3 AY(double3 a); __attribute__((overloadable)) float4 AZ(double4 a); __attribute__((overloadable)) float8 BA(double8 a); __attribute__((overloadable)) float16 BB(double16 a); __attribute__((overloadable)) double BC(double a); __attribute__((overloadable)) double2 BD(double2 a); __attribute__((overloadable)) double3 BE(double3 a); __attribute__((overloadable)) double4 BF(double4 a); __attribute__((overloadable)) double8 BG(double8 a); __attribute__((overloadable)) double16 BH(double16 a); __attribute__((overloadable)) char BI(char a); __attribute__((overloadable)) char2 BJ(char2 a); __attribute__((overloadable)) char3 BK(char3 a); __attribute__((overloadable)) char4 BL(char4 a); __attribute__((overloadable)) char8 BM(char8 a); __attribute__((overloadable)) char16 BN(char16 a); __attribute__((overloadable)) uchar BO(char a); __attribute__((overloadable)) uchar2 BP(char2 a); __attribute__((overloadable)) uchar3 BQ(char3 a); __attribute__((overloadable)) uchar4 BR(char4 a); __attribute__((overloadable)) uchar8 BS(char8 a); __attribute__((overloadable)) uchar16 BT(char16 a); __attribute__((overloadable)) int BU(char a); __attribute__((overloadable)) int2 BV(char2 a); __attribute__((overloadable)) int3 BW(char3 a); __attribute__((overloadable)) int4 BX(char4 a); __attribute__((overloadable)) int8 BY(char8 a); __attribute__((overloadable)) int16 BZ(char16 a); __attribute__((overloadable)) uint CA(char a); __attribute__((overloadable)) uint2 CB(char2 a); __attribute__((overloadable)) uint3 CC(char3 a); __attribute__((overloadable)) uint4 CD(char4 a); __attribute__((overloadable)) uint8 CE(char8 a); __attribute__((overloadable)) uint16 CF(char16 a); __attribute__((overloadable)) short CG(char a); __attribute__((overloadable)) short2 CH(char2 a); __attribute__((overloadable)) short3 CI(char3 a); __attribute__((overloadable)) short4 CJ(char4 a); __attribute__((overloadable)) short8 CK(char8 a); __attribute__((overloadable)) short16 CL(char16 a); __attribute__((overloadable)) ushort CM(char a); __attribute__((overloadable)) ushort2 CN(char2 a); __attribute__((overloadable)) ushort3 CO(char3 a); __attribute__((overloadable)) ushort4 CP(char4 a); __attribute__((overloadable)) ushort8 CQ(char8 a); __attribute__((overloadable)) ushort16 CR(char16 a); __attribute__((overloadable)) long CS(char a); __attribute__((overloadable)) long2 CT(char2 a); __attribute__((overloadable)) long3 CU(char3 a); __attribute__((overloadable)) long4 CV(char4 a); __attribute__((overloadable)) long8 CW(char8 a); __attribute__((overloadable)) long16 CX(char16 a); __attribute__((overloadable)) ulong CY(char a); __attribute__((overloadable)) ulong2 CZ(char2 a); __attribute__((overloadable)) ulong3 DA(char3 a); __attribute__((overloadable)) ulong4 DB(char4 a); __attribute__((overloadable)) ulong8 DC(char8 a); __attribute__((overloadable)) ulong16 DD(char16 a); __attribute__((overloadable)) float DE(char a); __attribute__((overloadable)) float2 DF(char2 a); __attribute__((overloadable)) float3 DG(char3 a); __attribute__((overloadable)) float4 DH(char4 a); __attribute__((overloadable)) float8 DI(char8 a); __attribute__((overloadable)) float16 DJ(char16 a); __attribute__((overloadable)) double DK(char a); __attribute__((overloadable)) double2 DL(char2 a); __attribute__((overloadable)) double3 DM(char3 a); __attribute__((overloadable)) double4 DN(char4 a); __attribute__((overloadable)) double8 DO(char8 a); __attribute__((overloadable)) double16 DP(char16 a); __attribute__((overloadable)) char BI(uchar a); __attribute__((overloadable)) char2 BJ(uchar2 a); __attribute__((overloadable)) char3 BK(uchar3 a); __attribute__((overloadable)) char4 BL(uchar4 a); __attribute__((overloadable)) char8 BM(uchar8 a); __attribute__((overloadable)) char16 BN(uchar16 a); __attribute__((overloadable)) uchar BO(uchar a); __attribute__((overloadable)) uchar2 BP(uchar2 a); __attribute__((overloadable)) uchar3 BQ(uchar3 a); __attribute__((overloadable)) uchar4 BR(uchar4 a); __attribute__((overloadable)) uchar8 BS(uchar8 a); __attribute__((overloadable)) uchar16 BT(uchar16 a); __attribute__((overloadable)) int BU(uchar a); __attribute__((overloadable)) int2 BV(uchar2 a); __attribute__((overloadable)) int3 BW(uchar3 a); __attribute__((overloadable)) int4 BX(uchar4 a); __attribute__((overloadable)) int8 BY(uchar8 a); __attribute__((overloadable)) int16 BZ(uchar16 a); __attribute__((overloadable)) uint CA(uchar a); __attribute__((overloadable)) uint2 CB(uchar2 a); __attribute__((overloadable)) uint3 CC(uchar3 a); __attribute__((overloadable)) uint4 CD(uchar4 a); __attribute__((overloadable)) uint8 CE(uchar8 a); __attribute__((overloadable)) uint16 CF(uchar16 a); __attribute__((overloadable)) short CG(uchar a); __attribute__((overloadable)) short2 CH(uchar2 a); __attribute__((overloadable)) short3 CI(uchar3 a); __attribute__((overloadable)) short4 CJ(uchar4 a); __attribute__((overloadable)) short8 CK(uchar8 a); __attribute__((overloadable)) short16 CL(uchar16 a); __attribute__((overloadable)) ushort CM(uchar a); __attribute__((overloadable)) ushort2 CN(uchar2 a); __attribute__((overloadable)) ushort3 CO(uchar3 a); __attribute__((overloadable)) ushort4 CP(uchar4 a); __attribute__((overloadable)) ushort8 CQ(uchar8 a); __attribute__((overloadable)) ushort16 CR(uchar16 a); __attribute__((overloadable)) long CS(uchar a); __attribute__((overloadable)) long2 CT(uchar2 a); __attribute__((overloadable)) long3 CU(uchar3 a); __attribute__((overloadable)) long4 CV(uchar4 a); __attribute__((overloadable)) long8 CW(uchar8 a); __attribute__((overloadable)) long16 CX(uchar16 a); __attribute__((overloadable)) ulong CY(uchar a); __attribute__((overloadable)) ulong2 CZ(uchar2 a); __attribute__((overloadable)) ulong3 DA(uchar3 a); __attribute__((overloadable)) ulong4 DB(uchar4 a); __attribute__((overloadable)) ulong8 DC(uchar8 a); __attribute__((overloadable)) ulong16 DD(uchar16 a); __attribute__((overloadable)) float DE(uchar a); __attribute__((overloadable)) float2 DF(uchar2 a); __attribute__((overloadable)) float3 DG(uchar3 a); __attribute__((overloadable)) float4 DH(uchar4 a); __attribute__((overloadable)) float8 DI(uchar8 a); __attribute__((overloadable)) float16 DJ(uchar16 a); __attribute__((overloadable)) double DK(uchar a); __attribute__((overloadable)) double2 DL(uchar2 a); __attribute__((overloadable)) double3 DM(uchar3 a); __attribute__((overloadable)) double4 DN(uchar4 a); __attribute__((overloadable)) double8 DO(uchar8 a); __attribute__((overloadable)) double16 DP(uchar16 a); __attribute__((overloadable)) char BI(int a); __attribute__((overloadable)) char2 BJ(int2 a); __attribute__((overloadable)) char3 BK(int3 a); __attribute__((overloadable)) char4 BL(int4 a); __attribute__((overloadable)) char8 BM(int8 a); __attribute__((overloadable)) char16 BN(int16 a); __attribute__((overloadable)) uchar BO(int a); __attribute__((overloadable)) uchar2 BP(int2 a); __attribute__((overloadable)) uchar3 BQ(int3 a); __attribute__((overloadable)) uchar4 BR(int4 a); __attribute__((overloadable)) uchar8 BS(int8 a); __attribute__((overloadable)) uchar16 BT(int16 a); __attribute__((overloadable)) int BU(int a); __attribute__((overloadable)) int2 BV(int2 a); __attribute__((overloadable)) int3 BW(int3 a); __attribute__((overloadable)) int4 BX(int4 a); __attribute__((overloadable)) int8 BY(int8 a); __attribute__((overloadable)) int16 BZ(int16 a); __attribute__((overloadable)) uint CA(int a); __attribute__((overloadable)) uint2 CB(int2 a); __attribute__((overloadable)) uint3 CC(int3 a); __attribute__((overloadable)) uint4 CD(int4 a); __attribute__((overloadable)) uint8 CE(int8 a); __attribute__((overloadable)) uint16 CF(int16 a); __attribute__((overloadable)) short CG(int a); __attribute__((overloadable)) short2 CH(int2 a); __attribute__((overloadable)) short3 CI(int3 a); __attribute__((overloadable)) short4 CJ(int4 a); __attribute__((overloadable)) short8 CK(int8 a); __attribute__((overloadable)) short16 CL(int16 a); __attribute__((overloadable)) ushort CM(int a); __attribute__((overloadable)) ushort2 CN(int2 a); __attribute__((overloadable)) ushort3 CO(int3 a); __attribute__((overloadable)) ushort4 CP(int4 a); __attribute__((overloadable)) ushort8 CQ(int8 a); __attribute__((overloadable)) ushort16 CR(int16 a); __attribute__((overloadable)) long CS(int a); __attribute__((overloadable)) long2 CT(int2 a); __attribute__((overloadable)) long3 CU(int3 a); __attribute__((overloadable)) long4 CV(int4 a); __attribute__((overloadable)) long8 CW(int8 a); __attribute__((overloadable)) long16 CX(int16 a); __attribute__((overloadable)) ulong CY(int a); __attribute__((overloadable)) ulong2 CZ(int2 a); __attribute__((overloadable)) ulong3 DA(int3 a); __attribute__((overloadable)) ulong4 DB(int4 a); __attribute__((overloadable)) ulong8 DC(int8 a); __attribute__((overloadable)) ulong16 DD(int16 a); __attribute__((overloadable)) float DE(int a); __attribute__((overloadable)) float2 DF(int2 a); __attribute__((overloadable)) float3 DG(int3 a); __attribute__((overloadable)) float4 DH(int4 a); __attribute__((overloadable)) float8 DI(int8 a); __attribute__((overloadable)) float16 DJ(int16 a); __attribute__((overloadable)) double DK(int a); __attribute__((overloadable)) double2 DL(int2 a); __attribute__((overloadable)) double3 DM(int3 a); __attribute__((overloadable)) double4 DN(int4 a); __attribute__((overloadable)) double8 DO(int8 a); __attribute__((overloadable)) double16 DP(int16 a); __attribute__((overloadable)) char BI(uint a); __attribute__((overloadable)) char2 BJ(uint2 a); __attribute__((overloadable)) char3 BK(uint3 a); __attribute__((overloadable)) char4 BL(uint4 a); __attribute__((overloadable)) char8 BM(uint8 a); __attribute__((overloadable)) char16 BN(uint16 a); __attribute__((overloadable)) uchar BO(uint a); __attribute__((overloadable)) uchar2 BP(uint2 a); __attribute__((overloadable)) uchar3 BQ(uint3 a); __attribute__((overloadable)) uchar4 BR(uint4 a); __attribute__((overloadable)) uchar8 BS(uint8 a); __attribute__((overloadable)) uchar16 BT(uint16 a); __attribute__((overloadable)) int BU(uint a); __attribute__((overloadable)) int2 BV(uint2 a); __attribute__((overloadable)) int3 BW(uint3 a); __attribute__((overloadable)) int4 BX(uint4 a); __attribute__((overloadable)) int8 BY(uint8 a); __attribute__((overloadable)) int16 BZ(uint16 a); __attribute__((overloadable)) uint CA(uint a); __attribute__((overloadable)) uint2 CB(uint2 a); __attribute__((overloadable)) uint3 CC(uint3 a); __attribute__((overloadable)) uint4 CD(uint4 a); __attribute__((overloadable)) uint8 CE(uint8 a); __attribute__((overloadable)) uint16 CF(uint16 a); __attribute__((overloadable)) short CG(uint a); __attribute__((overloadable)) short2 CH(uint2 a); __attribute__((overloadable)) short3 CI(uint3 a); __attribute__((overloadable)) short4 CJ(uint4 a); __attribute__((overloadable)) short8 CK(uint8 a); __attribute__((overloadable)) short16 CL(uint16 a); __attribute__((overloadable)) ushort CM(uint a); __attribute__((overloadable)) ushort2 CN(uint2 a); __attribute__((overloadable)) ushort3 CO(uint3 a); __attribute__((overloadable)) ushort4 CP(uint4 a); __attribute__((overloadable)) ushort8 CQ(uint8 a); __attribute__((overloadable)) ushort16 CR(uint16 a); __attribute__((overloadable)) long CS(uint a); __attribute__((overloadable)) long2 CT(uint2 a); __attribute__((overloadable)) long3 CU(uint3 a); __attribute__((overloadable)) long4 CV(uint4 a); __attribute__((overloadable)) long8 CW(uint8 a); __attribute__((overloadable)) long16 CX(uint16 a); __attribute__((overloadable)) ulong CY(uint a); __attribute__((overloadable)) ulong2 CZ(uint2 a); __attribute__((overloadable)) ulong3 DA(uint3 a); __attribute__((overloadable)) ulong4 DB(uint4 a); __attribute__((overloadable)) ulong8 DC(uint8 a); __attribute__((overloadable)) ulong16 DD(uint16 a); __attribute__((overloadable)) float DE(uint a); __attribute__((overloadable)) float2 DF(uint2 a); __attribute__((overloadable)) float3 DG(uint3 a); __attribute__((overloadable)) float4 DH(uint4 a); __attribute__((overloadable)) float8 DI(uint8 a); __attribute__((overloadable)) float16 DJ(uint16 a); __attribute__((overloadable)) double DK(uint a); __attribute__((overloadable)) double2 DL(uint2 a); __attribute__((overloadable)) double3 DM(uint3 a); __attribute__((overloadable)) double4 DN(uint4 a); __attribute__((overloadable)) double8 DO(uint8 a); __attribute__((overloadable)) double16 DP(uint16 a); __attribute__((overloadable)) char BI(short a); __attribute__((overloadable)) char2 BJ(short2 a); __attribute__((overloadable)) char3 BK(short3 a); __attribute__((overloadable)) char4 BL(short4 a); __attribute__((overloadable)) char8 BM(short8 a); __attribute__((overloadable)) char16 BN(short16 a); __attribute__((overloadable)) uchar BO(short a); __attribute__((overloadable)) uchar2 BP(short2 a); __attribute__((overloadable)) uchar3 BQ(short3 a); __attribute__((overloadable)) uchar4 BR(short4 a); __attribute__((overloadable)) uchar8 BS(short8 a); __attribute__((overloadable)) uchar16 BT(short16 a); __attribute__((overloadable)) int BU(short a); __attribute__((overloadable)) int2 BV(short2 a); __attribute__((overloadable)) int3 BW(short3 a); __attribute__((overloadable)) int4 BX(short4 a); __attribute__((overloadable)) int8 BY(short8 a); __attribute__((overloadable)) int16 BZ(short16 a); __attribute__((overloadable)) uint CA(short a); __attribute__((overloadable)) uint2 CB(short2 a); __attribute__((overloadable)) uint3 CC(short3 a); __attribute__((overloadable)) uint4 CD(short4 a); __attribute__((overloadable)) uint8 CE(short8 a); __attribute__((overloadable)) uint16 CF(short16 a); __attribute__((overloadable)) short CG(short a); __attribute__((overloadable)) short2 CH(short2 a); __attribute__((overloadable)) short3 CI(short3 a); __attribute__((overloadable)) short4 CJ(short4 a); __attribute__((overloadable)) short8 CK(short8 a); __attribute__((overloadable)) short16 CL(short16 a); __attribute__((overloadable)) ushort CM(short a); __attribute__((overloadable)) ushort2 CN(short2 a); __attribute__((overloadable)) ushort3 CO(short3 a); __attribute__((overloadable)) ushort4 CP(short4 a); __attribute__((overloadable)) ushort8 CQ(short8 a); __attribute__((overloadable)) ushort16 CR(short16 a); __attribute__((overloadable)) long CS(short a); __attribute__((overloadable)) long2 CT(short2 a); __attribute__((overloadable)) long3 CU(short3 a); __attribute__((overloadable)) long4 CV(short4 a); __attribute__((overloadable)) long8 CW(short8 a); __attribute__((overloadable)) long16 CX(short16 a); __attribute__((overloadable)) ulong CY(short a); __attribute__((overloadable)) ulong2 CZ(short2 a); __attribute__((overloadable)) ulong3 DA(short3 a); __attribute__((overloadable)) ulong4 DB(short4 a); __attribute__((overloadable)) ulong8 DC(short8 a); __attribute__((overloadable)) ulong16 DD(short16 a); __attribute__((overloadable)) float DE(short a); __attribute__((overloadable)) float2 DF(short2 a); __attribute__((overloadable)) float3 DG(short3 a); __attribute__((overloadable)) float4 DH(short4 a); __attribute__((overloadable)) float8 DI(short8 a); __attribute__((overloadable)) float16 DJ(short16 a); __attribute__((overloadable)) double DK(short a); __attribute__((overloadable)) double2 DL(short2 a); __attribute__((overloadable)) double3 DM(short3 a); __attribute__((overloadable)) double4 DN(short4 a); __attribute__((overloadable)) double8 DO(short8 a); __attribute__((overloadable)) double16 DP(short16 a); __attribute__((overloadable)) char BI(ushort a); __attribute__((overloadable)) char2 BJ(ushort2 a); __attribute__((overloadable)) char3 BK(ushort3 a); __attribute__((overloadable)) char4 BL(ushort4 a); __attribute__((overloadable)) char8 BM(ushort8 a); __attribute__((overloadable)) char16 BN(ushort16 a); __attribute__((overloadable)) uchar BO(ushort a); __attribute__((overloadable)) uchar2 BP(ushort2 a); __attribute__((overloadable)) uchar3 BQ(ushort3 a); __attribute__((overloadable)) uchar4 BR(ushort4 a); __attribute__((overloadable)) uchar8 BS(ushort8 a); __attribute__((overloadable)) uchar16 BT(ushort16 a); __attribute__((overloadable)) int BU(ushort a); __attribute__((overloadable)) int2 BV(ushort2 a); __attribute__((overloadable)) int3 BW(ushort3 a); __attribute__((overloadable)) int4 BX(ushort4 a); __attribute__((overloadable)) int8 BY(ushort8 a); __attribute__((overloadable)) int16 BZ(ushort16 a); __attribute__((overloadable)) uint CA(ushort a); __attribute__((overloadable)) uint2 CB(ushort2 a); __attribute__((overloadable)) uint3 CC(ushort3 a); __attribute__((overloadable)) uint4 CD(ushort4 a); __attribute__((overloadable)) uint8 CE(ushort8 a); __attribute__((overloadable)) uint16 CF(ushort16 a); __attribute__((overloadable)) short CG(ushort a); __attribute__((overloadable)) short2 CH(ushort2 a); __attribute__((overloadable)) short3 CI(ushort3 a); __attribute__((overloadable)) short4 CJ(ushort4 a); __attribute__((overloadable)) short8 CK(ushort8 a); __attribute__((overloadable)) short16 CL(ushort16 a); __attribute__((overloadable)) ushort CM(ushort a); __attribute__((overloadable)) ushort2 CN(ushort2 a); __attribute__((overloadable)) ushort3 CO(ushort3 a); __attribute__((overloadable)) ushort4 CP(ushort4 a); __attribute__((overloadable)) ushort8 CQ(ushort8 a); __attribute__((overloadable)) ushort16 CR(ushort16 a); __attribute__((overloadable)) long CS(ushort a); __attribute__((overloadable)) long2 CT(ushort2 a); __attribute__((overloadable)) long3 CU(ushort3 a); __attribute__((overloadable)) long4 CV(ushort4 a); __attribute__((overloadable)) long8 CW(ushort8 a); __attribute__((overloadable)) long16 CX(ushort16 a); __attribute__((overloadable)) ulong CY(ushort a); __attribute__((overloadable)) ulong2 CZ(ushort2 a); __attribute__((overloadable)) ulong3 DA(ushort3 a); __attribute__((overloadable)) ulong4 DB(ushort4 a); __attribute__((overloadable)) ulong8 DC(ushort8 a); __attribute__((overloadable)) ulong16 DD(ushort16 a); __attribute__((overloadable)) float DE(ushort a); __attribute__((overloadable)) float2 DF(ushort2 a); __attribute__((overloadable)) float3 DG(ushort3 a); __attribute__((overloadable)) float4 DH(ushort4 a); __attribute__((overloadable)) float8 DI(ushort8 a); __attribute__((overloadable)) float16 DJ(ushort16 a); __attribute__((overloadable)) double DK(ushort a); __attribute__((overloadable)) double2 DL(ushort2 a); __attribute__((overloadable)) double3 DM(ushort3 a); __attribute__((overloadable)) double4 DN(ushort4 a); __attribute__((overloadable)) double8 DO(ushort8 a); __attribute__((overloadable)) double16 DP(ushort16 a); __attribute__((overloadable)) char BI(long a); __attribute__((overloadable)) char2 BJ(long2 a); __attribute__((overloadable)) char3 BK(long3 a); __attribute__((overloadable)) char4 BL(long4 a); __attribute__((overloadable)) char8 BM(long8 a); __attribute__((overloadable)) char16 BN(long16 a); __attribute__((overloadable)) uchar BO(long a); __attribute__((overloadable)) uchar2 BP(long2 a); __attribute__((overloadable)) uchar3 BQ(long3 a); __attribute__((overloadable)) uchar4 BR(long4 a); __attribute__((overloadable)) uchar8 BS(long8 a); __attribute__((overloadable)) uchar16 BT(long16 a); __attribute__((overloadable)) int BU(long a); __attribute__((overloadable)) int2 BV(long2 a); __attribute__((overloadable)) int3 BW(long3 a); __attribute__((overloadable)) int4 BX(long4 a); __attribute__((overloadable)) int8 BY(long8 a); __attribute__((overloadable)) int16 BZ(long16 a); __attribute__((overloadable)) uint CA(long a); __attribute__((overloadable)) uint2 CB(long2 a); __attribute__((overloadable)) uint3 CC(long3 a); __attribute__((overloadable)) uint4 CD(long4 a); __attribute__((overloadable)) uint8 CE(long8 a); __attribute__((overloadable)) uint16 CF(long16 a); __attribute__((overloadable)) short CG(long a); __attribute__((overloadable)) short2 CH(long2 a); __attribute__((overloadable)) short3 CI(long3 a); __attribute__((overloadable)) short4 CJ(long4 a); __attribute__((overloadable)) short8 CK(long8 a); __attribute__((overloadable)) short16 CL(long16 a); __attribute__((overloadable)) ushort CM(long a); __attribute__((overloadable)) ushort2 CN(long2 a); __attribute__((overloadable)) ushort3 CO(long3 a); __attribute__((overloadable)) ushort4 CP(long4 a); __attribute__((overloadable)) ushort8 CQ(long8 a); __attribute__((overloadable)) ushort16 CR(long16 a); __attribute__((overloadable)) long CS(long a); __attribute__((overloadable)) long2 CT(long2 a); __attribute__((overloadable)) long3 CU(long3 a); __attribute__((overloadable)) long4 CV(long4 a); __attribute__((overloadable)) long8 CW(long8 a); __attribute__((overloadable)) long16 CX(long16 a); __attribute__((overloadable)) ulong CY(long a); __attribute__((overloadable)) ulong2 CZ(long2 a); __attribute__((overloadable)) ulong3 DA(long3 a); __attribute__((overloadable)) ulong4 DB(long4 a); __attribute__((overloadable)) ulong8 DC(long8 a); __attribute__((overloadable)) ulong16 DD(long16 a); __attribute__((overloadable)) float DE(long a); __attribute__((overloadable)) float2 DF(long2 a); __attribute__((overloadable)) float3 DG(long3 a); __attribute__((overloadable)) float4 DH(long4 a); __attribute__((overloadable)) float8 DI(long8 a); __attribute__((overloadable)) float16 DJ(long16 a); __attribute__((overloadable)) double DK(long a); __attribute__((overloadable)) double2 DL(long2 a); __attribute__((overloadable)) double3 DM(long3 a); __attribute__((overloadable)) double4 DN(long4 a); __attribute__((overloadable)) double8 DO(long8 a); __attribute__((overloadable)) double16 DP(long16 a); __attribute__((overloadable)) char BI(ulong a); __attribute__((overloadable)) char2 BJ(ulong2 a); __attribute__((overloadable)) char3 BK(ulong3 a); __attribute__((overloadable)) char4 BL(ulong4 a); __attribute__((overloadable)) char8 BM(ulong8 a); __attribute__((overloadable)) char16 BN(ulong16 a); __attribute__((overloadable)) uchar BO(ulong a); __attribute__((overloadable)) uchar2 BP(ulong2 a); __attribute__((overloadable)) uchar3 BQ(ulong3 a); __attribute__((overloadable)) uchar4 BR(ulong4 a); __attribute__((overloadable)) uchar8 BS(ulong8 a); __attribute__((overloadable)) uchar16 BT(ulong16 a); __attribute__((overloadable)) int BU(ulong a); __attribute__((overloadable)) int2 BV(ulong2 a); __attribute__((overloadable)) int3 BW(ulong3 a); __attribute__((overloadable)) int4 BX(ulong4 a); __attribute__((overloadable)) int8 BY(ulong8 a); __attribute__((overloadable)) int16 BZ(ulong16 a); __attribute__((overloadable)) uint CA(ulong a); __attribute__((overloadable)) uint2 CB(ulong2 a); __attribute__((overloadable)) uint3 CC(ulong3 a); __attribute__((overloadable)) uint4 CD(ulong4 a); __attribute__((overloadable)) uint8 CE(ulong8 a); __attribute__((overloadable)) uint16 CF(ulong16 a); __attribute__((overloadable)) short CG(ulong a); __attribute__((overloadable)) short2 CH(ulong2 a); __attribute__((overloadable)) short3 CI(ulong3 a); __attribute__((overloadable)) short4 CJ(ulong4 a); __attribute__((overloadable)) short8 CK(ulong8 a); __attribute__((overloadable)) short16 CL(ulong16 a); __attribute__((overloadable)) ushort CM(ulong a); __attribute__((overloadable)) ushort2 CN(ulong2 a); __attribute__((overloadable)) ushort3 CO(ulong3 a); __attribute__((overloadable)) ushort4 CP(ulong4 a); __attribute__((overloadable)) ushort8 CQ(ulong8 a); __attribute__((overloadable)) ushort16 CR(ulong16 a); __attribute__((overloadable)) long CS(ulong a); __attribute__((overloadable)) long2 CT(ulong2 a); __attribute__((overloadable)) long3 CU(ulong3 a); __attribute__((overloadable)) long4 CV(ulong4 a); __attribute__((overloadable)) long8 CW(ulong8 a); __attribute__((overloadable)) long16 CX(ulong16 a); __attribute__((overloadable)) ulong CY(ulong a); __attribute__((overloadable)) ulong2 CZ(ulong2 a); __attribute__((overloadable)) ulong3 DA(ulong3 a); __attribute__((overloadable)) ulong4 DB(ulong4 a); __attribute__((overloadable)) ulong8 DC(ulong8 a); __attribute__((overloadable)) ulong16 DD(ulong16 a); __attribute__((overloadable)) float DE(ulong a); __attribute__((overloadable)) float2 DF(ulong2 a); __attribute__((overloadable)) float3 DG(ulong3 a); __attribute__((overloadable)) float4 DH(ulong4 a); __attribute__((overloadable)) float8 DI(ulong8 a); __attribute__((overloadable)) float16 DJ(ulong16 a); __attribute__((overloadable)) double DK(ulong a); __attribute__((overloadable)) double2 DL(ulong2 a); __attribute__((overloadable)) double3 DM(ulong3 a); __attribute__((overloadable)) double4 DN(ulong4 a); __attribute__((overloadable)) double8 DO(ulong8 a); __attribute__((overloadable)) double16 DP(ulong16 a); __attribute__((overloadable)) char BI(float a); __attribute__((overloadable)) char2 BJ(float2 a); __attribute__((overloadable)) char3 BK(float3 a); __attribute__((overloadable)) char4 BL(float4 a); __attribute__((overloadable)) char8 BM(float8 a); __attribute__((overloadable)) char16 BN(float16 a); __attribute__((overloadable)) uchar BO(float a); __attribute__((overloadable)) uchar2 BP(float2 a); __attribute__((overloadable)) uchar3 BQ(float3 a); __attribute__((overloadable)) uchar4 BR(float4 a); __attribute__((overloadable)) uchar8 BS(float8 a); __attribute__((overloadable)) uchar16 BT(float16 a); __attribute__((overloadable)) int BU(float a); __attribute__((overloadable)) int2 BV(float2 a); __attribute__((overloadable)) int3 BW(float3 a); __attribute__((overloadable)) int4 BX(float4 a); __attribute__((overloadable)) int8 BY(float8 a); __attribute__((overloadable)) int16 BZ(float16 a); __attribute__((overloadable)) uint CA(float a); __attribute__((overloadable)) uint2 CB(float2 a); __attribute__((overloadable)) uint3 CC(float3 a); __attribute__((overloadable)) uint4 CD(float4 a); __attribute__((overloadable)) uint8 CE(float8 a); __attribute__((overloadable)) uint16 CF(float16 a); __attribute__((overloadable)) short CG(float a); __attribute__((overloadable)) short2 CH(float2 a); __attribute__((overloadable)) short3 CI(float3 a); __attribute__((overloadable)) short4 CJ(float4 a); __attribute__((overloadable)) short8 CK(float8 a); __attribute__((overloadable)) short16 CL(float16 a); __attribute__((overloadable)) ushort CM(float a); __attribute__((overloadable)) ushort2 CN(float2 a); __attribute__((overloadable)) ushort3 CO(float3 a); __attribute__((overloadable)) ushort4 CP(float4 a); __attribute__((overloadable)) ushort8 CQ(float8 a); __attribute__((overloadable)) ushort16 CR(float16 a); __attribute__((overloadable)) long CS(float a); __attribute__((overloadable)) long2 CT(float2 a); __attribute__((overloadable)) long3 CU(float3 a); __attribute__((overloadable)) long4 CV(float4 a); __attribute__((overloadable)) long8 CW(float8 a); __attribute__((overloadable)) long16 CX(float16 a); __attribute__((overloadable)) ulong CY(float a); __attribute__((overloadable)) ulong2 CZ(float2 a); __attribute__((overloadable)) ulong3 DA(float3 a); __attribute__((overloadable)) ulong4 DB(float4 a); __attribute__((overloadable)) ulong8 DC(float8 a); __attribute__((overloadable)) ulong16 DD(float16 a); __attribute__((overloadable)) float DE(float a); __attribute__((overloadable)) float2 DF(float2 a); __attribute__((overloadable)) float3 DG(float3 a); __attribute__((overloadable)) float4 DH(float4 a); __attribute__((overloadable)) float8 DI(float8 a); __attribute__((overloadable)) float16 DJ(float16 a); __attribute__((overloadable)) double DK(float a); __attribute__((overloadable)) double2 DL(float2 a); __attribute__((overloadable)) double3 DM(float3 a); __attribute__((overloadable)) double4 DN(float4 a); __attribute__((overloadable)) double8 DO(float8 a); __attribute__((overloadable)) double16 DP(float16 a); __attribute__((overloadable)) char BI(double a); __attribute__((overloadable)) char2 BJ(double2 a); __attribute__((overloadable)) char3 BK(double3 a); __attribute__((overloadable)) char4 BL(double4 a); __attribute__((overloadable)) char8 BM(double8 a); __attribute__((overloadable)) char16 BN(double16 a); __attribute__((overloadable)) uchar BO(double a); __attribute__((overloadable)) uchar2 BP(double2 a); __attribute__((overloadable)) uchar3 BQ(double3 a); __attribute__((overloadable)) uchar4 BR(double4 a); __attribute__((overloadable)) uchar8 BS(double8 a); __attribute__((overloadable)) uchar16 BT(double16 a); __attribute__((overloadable)) int BU(double a); __attribute__((overloadable)) int2 BV(double2 a); __attribute__((overloadable)) int3 BW(double3 a); __attribute__((overloadable)) int4 BX(double4 a); __attribute__((overloadable)) int8 BY(double8 a); __attribute__((overloadable)) int16 BZ(double16 a); __attribute__((overloadable)) uint CA(double a); __attribute__((overloadable)) uint2 CB(double2 a); __attribute__((overloadable)) uint3 CC(double3 a); __attribute__((overloadable)) uint4 CD(double4 a); __attribute__((overloadable)) uint8 CE(double8 a); __attribute__((overloadable)) uint16 CF(double16 a); __attribute__((overloadable)) short CG(double a); __attribute__((overloadable)) short2 CH(double2 a); __attribute__((overloadable)) short3 CI(double3 a); __attribute__((overloadable)) short4 CJ(double4 a); __attribute__((overloadable)) short8 CK(double8 a); __attribute__((overloadable)) short16 CL(double16 a); __attribute__((overloadable)) ushort CM(double a); __attribute__((overloadable)) ushort2 CN(double2 a); __attribute__((overloadable)) ushort3 CO(double3 a); __attribute__((overloadable)) ushort4 CP(double4 a); __attribute__((overloadable)) ushort8 CQ(double8 a); __attribute__((overloadable)) ushort16 CR(double16 a); __attribute__((overloadable)) long CS(double a); __attribute__((overloadable)) long2 CT(double2 a); __attribute__((overloadable)) long3 CU(double3 a); __attribute__((overloadable)) long4 CV(double4 a); __attribute__((overloadable)) long8 CW(double8 a); __attribute__((overloadable)) long16 CX(double16 a); __attribute__((overloadable)) ulong CY(double a); __attribute__((overloadable)) ulong2 CZ(double2 a); __attribute__((overloadable)) ulong3 DA(double3 a); __attribute__((overloadable)) ulong4 DB(double4 a); __attribute__((overloadable)) ulong8 DC(double8 a); __attribute__((overloadable)) ulong16 DD(double16 a); __attribute__((overloadable)) float DE(double a); __attribute__((overloadable)) float2 DF(double2 a); __attribute__((overloadable)) float3 DG(double3 a); __attribute__((overloadable)) float4 DH(double4 a); __attribute__((overloadable)) float8 DI(double8 a); __attribute__((overloadable)) float16 DJ(double16 a); __attribute__((overloadable)) double DK(double a); __attribute__((overloadable)) double2 DL(double2 a); __attribute__((overloadable)) double3 DM(double3 a); __attribute__((overloadable)) double4 DN(double4 a); __attribute__((overloadable)) double8 DO(double8 a); __attribute__((overloadable)) double16 DP(double16 a); __attribute__((overloadable)) char DQ(char a); __attribute__((overloadable)) char2 DR(char2 a); __attribute__((overloadable)) char3 DS(char3 a); __attribute__((overloadable)) char4 DT(char4 a); __attribute__((overloadable)) char8 DU(char8 a); __attribute__((overloadable)) char16 DV(char16 a); __attribute__((overloadable)) uchar DW(char a); __attribute__((overloadable)) uchar2 DX(char2 a); __attribute__((overloadable)) uchar3 DY(char3 a); __attribute__((overloadable)) uchar4 DZ(char4 a); __attribute__((overloadable)) uchar8 EA(char8 a); __attribute__((overloadable)) uchar16 EB(char16 a); __attribute__((overloadable)) int EC(char a); __attribute__((overloadable)) int2 ED(char2 a); __attribute__((overloadable)) int3 EE(char3 a); __attribute__((overloadable)) int4 EF(char4 a); __attribute__((overloadable)) int8 EG(char8 a); __attribute__((overloadable)) int16 EH(char16 a); __attribute__((overloadable)) uint EI(char a); __attribute__((overloadable)) uint2 EJ(char2 a); __attribute__((overloadable)) uint3 EK(char3 a); __attribute__((overloadable)) uint4 EL(char4 a); __attribute__((overloadable)) uint8 EM(char8 a); __attribute__((overloadable)) uint16 EN(char16 a); __attribute__((overloadable)) short EO(char a); __attribute__((overloadable)) short2 EP(char2 a); __attribute__((overloadable)) short3 EQ(char3 a); __attribute__((overloadable)) short4 ER(char4 a); __attribute__((overloadable)) short8 ES(char8 a); __attribute__((overloadable)) short16 ET(char16 a); __attribute__((overloadable)) ushort EU(char a); __attribute__((overloadable)) ushort2 EV(char2 a); __attribute__((overloadable)) ushort3 EW(char3 a); __attribute__((overloadable)) ushort4 EX(char4 a); __attribute__((overloadable)) ushort8 EY(char8 a); __attribute__((overloadable)) ushort16 EZ(char16 a); __attribute__((overloadable)) long FA(char a); __attribute__((overloadable)) long2 FB(char2 a); __attribute__((overloadable)) long3 FC(char3 a); __attribute__((overloadable)) long4 FD(char4 a); __attribute__((overloadable)) long8 FE(char8 a); __attribute__((overloadable)) long16 FF(char16 a); __attribute__((overloadable)) ulong FG(char a); __attribute__((overloadable)) ulong2 FH(char2 a); __attribute__((overloadable)) ulong3 FI(char3 a); __attribute__((overloadable)) ulong4 FJ(char4 a); __attribute__((overloadable)) ulong8 FK(char8 a); __attribute__((overloadable)) ulong16 FL(char16 a); __attribute__((overloadable)) float FM(char a); __attribute__((overloadable)) float2 FN(char2 a); __attribute__((overloadable)) float3 FO(char3 a); __attribute__((overloadable)) float4 FP(char4 a); __attribute__((overloadable)) float8 FQ(char8 a); __attribute__((overloadable)) float16 FR(char16 a); __attribute__((overloadable)) double FS(char a); __attribute__((overloadable)) double2 FT(char2 a); __attribute__((overloadable)) double3 FU(char3 a); __attribute__((overloadable)) double4 FV(char4 a); __attribute__((overloadable)) double8 FW(char8 a); __attribute__((overloadable)) double16 FX(char16 a); __attribute__((overloadable)) char DQ(uchar a); __attribute__((overloadable)) char2 DR(uchar2 a); __attribute__((overloadable)) char3 DS(uchar3 a); __attribute__((overloadable)) char4 DT(uchar4 a); __attribute__((overloadable)) char8 DU(uchar8 a); __attribute__((overloadable)) char16 DV(uchar16 a); __attribute__((overloadable)) uchar DW(uchar a); __attribute__((overloadable)) uchar2 DX(uchar2 a); __attribute__((overloadable)) uchar3 DY(uchar3 a); __attribute__((overloadable)) uchar4 DZ(uchar4 a); __attribute__((overloadable)) uchar8 EA(uchar8 a); __attribute__((overloadable)) uchar16 EB(uchar16 a); __attribute__((overloadable)) int EC(uchar a); __attribute__((overloadable)) int2 ED(uchar2 a); __attribute__((overloadable)) int3 EE(uchar3 a); __attribute__((overloadable)) int4 EF(uchar4 a); __attribute__((overloadable)) int8 EG(uchar8 a); __attribute__((overloadable)) int16 EH(uchar16 a); __attribute__((overloadable)) uint EI(uchar a); __attribute__((overloadable)) uint2 EJ(uchar2 a); __attribute__((overloadable)) uint3 EK(uchar3 a); __attribute__((overloadable)) uint4 EL(uchar4 a); __attribute__((overloadable)) uint8 EM(uchar8 a); __attribute__((overloadable)) uint16 EN(uchar16 a); __attribute__((overloadable)) short EO(uchar a); __attribute__((overloadable)) short2 EP(uchar2 a); __attribute__((overloadable)) short3 EQ(uchar3 a); __attribute__((overloadable)) short4 ER(uchar4 a); __attribute__((overloadable)) short8 ES(uchar8 a); __attribute__((overloadable)) short16 ET(uchar16 a); __attribute__((overloadable)) ushort EU(uchar a); __attribute__((overloadable)) ushort2 EV(uchar2 a); __attribute__((overloadable)) ushort3 EW(uchar3 a); __attribute__((overloadable)) ushort4 EX(uchar4 a); __attribute__((overloadable)) ushort8 EY(uchar8 a); __attribute__((overloadable)) ushort16 EZ(uchar16 a); __attribute__((overloadable)) long FA(uchar a); __attribute__((overloadable)) long2 FB(uchar2 a); __attribute__((overloadable)) long3 FC(uchar3 a); __attribute__((overloadable)) long4 FD(uchar4 a); __attribute__((overloadable)) long8 FE(uchar8 a); __attribute__((overloadable)) long16 FF(uchar16 a); __attribute__((overloadable)) ulong FG(uchar a); __attribute__((overloadable)) ulong2 FH(uchar2 a); __attribute__((overloadable)) ulong3 FI(uchar3 a); __attribute__((overloadable)) ulong4 FJ(uchar4 a); __attribute__((overloadable)) ulong8 FK(uchar8 a); __attribute__((overloadable)) ulong16 FL(uchar16 a); __attribute__((overloadable)) float FM(uchar a); __attribute__((overloadable)) float2 FN(uchar2 a); __attribute__((overloadable)) float3 FO(uchar3 a); __attribute__((overloadable)) float4 FP(uchar4 a); __attribute__((overloadable)) float8 FQ(uchar8 a); __attribute__((overloadable)) float16 FR(uchar16 a); __attribute__((overloadable)) double FS(uchar a); __attribute__((overloadable)) double2 FT(uchar2 a); __attribute__((overloadable)) double3 FU(uchar3 a); __attribute__((overloadable)) double4 FV(uchar4 a); __attribute__((overloadable)) double8 FW(uchar8 a); __attribute__((overloadable)) double16 FX(uchar16 a); __attribute__((overloadable)) char DQ(int a); __attribute__((overloadable)) char2 DR(int2 a); __attribute__((overloadable)) char3 DS(int3 a); __attribute__((overloadable)) char4 DT(int4 a); __attribute__((overloadable)) char8 DU(int8 a); __attribute__((overloadable)) char16 DV(int16 a); __attribute__((overloadable)) uchar DW(int a); __attribute__((overloadable)) uchar2 DX(int2 a); __attribute__((overloadable)) uchar3 DY(int3 a); __attribute__((overloadable)) uchar4 DZ(int4 a); __attribute__((overloadable)) uchar8 EA(int8 a); __attribute__((overloadable)) uchar16 EB(int16 a); __attribute__((overloadable)) int EC(int a); __attribute__((overloadable)) int2 ED(int2 a); __attribute__((overloadable)) int3 EE(int3 a); __attribute__((overloadable)) int4 EF(int4 a); __attribute__((overloadable)) int8 EG(int8 a); __attribute__((overloadable)) int16 EH(int16 a); __attribute__((overloadable)) uint EI(int a); __attribute__((overloadable)) uint2 EJ(int2 a); __attribute__((overloadable)) uint3 EK(int3 a); __attribute__((overloadable)) uint4 EL(int4 a); __attribute__((overloadable)) uint8 EM(int8 a); __attribute__((overloadable)) uint16 EN(int16 a); __attribute__((overloadable)) short EO(int a); __attribute__((overloadable)) short2 EP(int2 a); __attribute__((overloadable)) short3 EQ(int3 a); __attribute__((overloadable)) short4 ER(int4 a); __attribute__((overloadable)) short8 ES(int8 a); __attribute__((overloadable)) short16 ET(int16 a); __attribute__((overloadable)) ushort EU(int a); __attribute__((overloadable)) ushort2 EV(int2 a); __attribute__((overloadable)) ushort3 EW(int3 a); __attribute__((overloadable)) ushort4 EX(int4 a); __attribute__((overloadable)) ushort8 EY(int8 a); __attribute__((overloadable)) ushort16 EZ(int16 a); __attribute__((overloadable)) long FA(int a); __attribute__((overloadable)) long2 FB(int2 a); __attribute__((overloadable)) long3 FC(int3 a); __attribute__((overloadable)) long4 FD(int4 a); __attribute__((overloadable)) long8 FE(int8 a); __attribute__((overloadable)) long16 FF(int16 a); __attribute__((overloadable)) ulong FG(int a); __attribute__((overloadable)) ulong2 FH(int2 a); __attribute__((overloadable)) ulong3 FI(int3 a); __attribute__((overloadable)) ulong4 FJ(int4 a); __attribute__((overloadable)) ulong8 FK(int8 a); __attribute__((overloadable)) ulong16 FL(int16 a); __attribute__((overloadable)) float FM(int a); __attribute__((overloadable)) float2 FN(int2 a); __attribute__((overloadable)) float3 FO(int3 a); __attribute__((overloadable)) float4 FP(int4 a); __attribute__((overloadable)) float8 FQ(int8 a); __attribute__((overloadable)) float16 FR(int16 a); __attribute__((overloadable)) double FS(int a); __attribute__((overloadable)) double2 FT(int2 a); __attribute__((overloadable)) double3 FU(int3 a); __attribute__((overloadable)) double4 FV(int4 a); __attribute__((overloadable)) double8 FW(int8 a); __attribute__((overloadable)) double16 FX(int16 a); __attribute__((overloadable)) char DQ(uint a); __attribute__((overloadable)) char2 DR(uint2 a); __attribute__((overloadable)) char3 DS(uint3 a); __attribute__((overloadable)) char4 DT(uint4 a); __attribute__((overloadable)) char8 DU(uint8 a); __attribute__((overloadable)) char16 DV(uint16 a); __attribute__((overloadable)) uchar DW(uint a); __attribute__((overloadable)) uchar2 DX(uint2 a); __attribute__((overloadable)) uchar3 DY(uint3 a); __attribute__((overloadable)) uchar4 DZ(uint4 a); __attribute__((overloadable)) uchar8 EA(uint8 a); __attribute__((overloadable)) uchar16 EB(uint16 a); __attribute__((overloadable)) int EC(uint a); __attribute__((overloadable)) int2 ED(uint2 a); __attribute__((overloadable)) int3 EE(uint3 a); __attribute__((overloadable)) int4 EF(uint4 a); __attribute__((overloadable)) int8 EG(uint8 a); __attribute__((overloadable)) int16 EH(uint16 a); __attribute__((overloadable)) uint EI(uint a); __attribute__((overloadable)) uint2 EJ(uint2 a); __attribute__((overloadable)) uint3 EK(uint3 a); __attribute__((overloadable)) uint4 EL(uint4 a); __attribute__((overloadable)) uint8 EM(uint8 a); __attribute__((overloadable)) uint16 EN(uint16 a); __attribute__((overloadable)) short EO(uint a); __attribute__((overloadable)) short2 EP(uint2 a); __attribute__((overloadable)) short3 EQ(uint3 a); __attribute__((overloadable)) short4 ER(uint4 a); __attribute__((overloadable)) short8 ES(uint8 a); __attribute__((overloadable)) short16 ET(uint16 a); __attribute__((overloadable)) ushort EU(uint a); __attribute__((overloadable)) ushort2 EV(uint2 a); __attribute__((overloadable)) ushort3 EW(uint3 a); __attribute__((overloadable)) ushort4 EX(uint4 a); __attribute__((overloadable)) ushort8 EY(uint8 a); __attribute__((overloadable)) ushort16 EZ(uint16 a); __attribute__((overloadable)) long FA(uint a); __attribute__((overloadable)) long2 FB(uint2 a); __attribute__((overloadable)) long3 FC(uint3 a); __attribute__((overloadable)) long4 FD(uint4 a); __attribute__((overloadable)) long8 FE(uint8 a); __attribute__((overloadable)) long16 FF(uint16 a); __attribute__((overloadable)) ulong FG(uint a); __attribute__((overloadable)) ulong2 FH(uint2 a); __attribute__((overloadable)) ulong3 FI(uint3 a); __attribute__((overloadable)) ulong4 FJ(uint4 a); __attribute__((overloadable)) ulong8 FK(uint8 a); __attribute__((overloadable)) ulong16 FL(uint16 a); __attribute__((overloadable)) float FM(uint a); __attribute__((overloadable)) float2 FN(uint2 a); __attribute__((overloadable)) float3 FO(uint3 a); __attribute__((overloadable)) float4 FP(uint4 a); __attribute__((overloadable)) float8 FQ(uint8 a); __attribute__((overloadable)) float16 FR(uint16 a); __attribute__((overloadable)) double FS(uint a); __attribute__((overloadable)) double2 FT(uint2 a); __attribute__((overloadable)) double3 FU(uint3 a); __attribute__((overloadable)) double4 FV(uint4 a); __attribute__((overloadable)) double8 FW(uint8 a); __attribute__((overloadable)) double16 FX(uint16 a); __attribute__((overloadable)) char DQ(short a); __attribute__((overloadable)) char2 DR(short2 a); __attribute__((overloadable)) char3 DS(short3 a); __attribute__((overloadable)) char4 DT(short4 a); __attribute__((overloadable)) char8 DU(short8 a); __attribute__((overloadable)) char16 DV(short16 a); __attribute__((overloadable)) uchar DW(short a); __attribute__((overloadable)) uchar2 DX(short2 a); __attribute__((overloadable)) uchar3 DY(short3 a); __attribute__((overloadable)) uchar4 DZ(short4 a); __attribute__((overloadable)) uchar8 EA(short8 a); __attribute__((overloadable)) uchar16 EB(short16 a); __attribute__((overloadable)) int EC(short a); __attribute__((overloadable)) int2 ED(short2 a); __attribute__((overloadable)) int3 EE(short3 a); __attribute__((overloadable)) int4 EF(short4 a); __attribute__((overloadable)) int8 EG(short8 a); __attribute__((overloadable)) int16 EH(short16 a); __attribute__((overloadable)) uint EI(short a); __attribute__((overloadable)) uint2 EJ(short2 a); __attribute__((overloadable)) uint3 EK(short3 a); __attribute__((overloadable)) uint4 EL(short4 a); __attribute__((overloadable)) uint8 EM(short8 a); __attribute__((overloadable)) uint16 EN(short16 a); __attribute__((overloadable)) short EO(short a); __attribute__((overloadable)) short2 EP(short2 a); __attribute__((overloadable)) short3 EQ(short3 a); __attribute__((overloadable)) short4 ER(short4 a); __attribute__((overloadable)) short8 ES(short8 a); __attribute__((overloadable)) short16 ET(short16 a); __attribute__((overloadable)) ushort EU(short a); __attribute__((overloadable)) ushort2 EV(short2 a); __attribute__((overloadable)) ushort3 EW(short3 a); __attribute__((overloadable)) ushort4 EX(short4 a); __attribute__((overloadable)) ushort8 EY(short8 a); __attribute__((overloadable)) ushort16 EZ(short16 a); __attribute__((overloadable)) long FA(short a); __attribute__((overloadable)) long2 FB(short2 a); __attribute__((overloadable)) long3 FC(short3 a); __attribute__((overloadable)) long4 FD(short4 a); __attribute__((overloadable)) long8 FE(short8 a); __attribute__((overloadable)) long16 FF(short16 a); __attribute__((overloadable)) ulong FG(short a); __attribute__((overloadable)) ulong2 FH(short2 a); __attribute__((overloadable)) ulong3 FI(short3 a); __attribute__((overloadable)) ulong4 FJ(short4 a); __attribute__((overloadable)) ulong8 FK(short8 a); __attribute__((overloadable)) ulong16 FL(short16 a); __attribute__((overloadable)) float FM(short a); __attribute__((overloadable)) float2 FN(short2 a); __attribute__((overloadable)) float3 FO(short3 a); __attribute__((overloadable)) float4 FP(short4 a); __attribute__((overloadable)) float8 FQ(short8 a); __attribute__((overloadable)) float16 FR(short16 a); __attribute__((overloadable)) double FS(short a); __attribute__((overloadable)) double2 FT(short2 a); __attribute__((overloadable)) double3 FU(short3 a); __attribute__((overloadable)) double4 FV(short4 a); __attribute__((overloadable)) double8 FW(short8 a); __attribute__((overloadable)) double16 FX(short16 a); __attribute__((overloadable)) char DQ(ushort a); __attribute__((overloadable)) char2 DR(ushort2 a); __attribute__((overloadable)) char3 DS(ushort3 a); __attribute__((overloadable)) char4 DT(ushort4 a); __attribute__((overloadable)) char8 DU(ushort8 a); __attribute__((overloadable)) char16 DV(ushort16 a); __attribute__((overloadable)) uchar DW(ushort a); __attribute__((overloadable)) uchar2 DX(ushort2 a); __attribute__((overloadable)) uchar3 DY(ushort3 a); __attribute__((overloadable)) uchar4 DZ(ushort4 a); __attribute__((overloadable)) uchar8 EA(ushort8 a); __attribute__((overloadable)) uchar16 EB(ushort16 a); __attribute__((overloadable)) int EC(ushort a); __attribute__((overloadable)) int2 ED(ushort2 a); __attribute__((overloadable)) int3 EE(ushort3 a); __attribute__((overloadable)) int4 EF(ushort4 a); __attribute__((overloadable)) int8 EG(ushort8 a); __attribute__((overloadable)) int16 EH(ushort16 a); __attribute__((overloadable)) uint EI(ushort a); __attribute__((overloadable)) uint2 EJ(ushort2 a); __attribute__((overloadable)) uint3 EK(ushort3 a); __attribute__((overloadable)) uint4 EL(ushort4 a); __attribute__((overloadable)) uint8 EM(ushort8 a); __attribute__((overloadable)) uint16 EN(ushort16 a); __attribute__((overloadable)) short EO(ushort a); __attribute__((overloadable)) short2 EP(ushort2 a); __attribute__((overloadable)) short3 EQ(ushort3 a); __attribute__((overloadable)) short4 ER(ushort4 a); __attribute__((overloadable)) short8 ES(ushort8 a); __attribute__((overloadable)) short16 ET(ushort16 a); __attribute__((overloadable)) ushort EU(ushort a); __attribute__((overloadable)) ushort2 EV(ushort2 a); __attribute__((overloadable)) ushort3 EW(ushort3 a); __attribute__((overloadable)) ushort4 EX(ushort4 a); __attribute__((overloadable)) ushort8 EY(ushort8 a); __attribute__((overloadable)) ushort16 EZ(ushort16 a); __attribute__((overloadable)) long FA(ushort a); __attribute__((overloadable)) long2 FB(ushort2 a); __attribute__((overloadable)) long3 FC(ushort3 a); __attribute__((overloadable)) long4 FD(ushort4 a); __attribute__((overloadable)) long8 FE(ushort8 a); __attribute__((overloadable)) long16 FF(ushort16 a); __attribute__((overloadable)) ulong FG(ushort a); __attribute__((overloadable)) ulong2 FH(ushort2 a); __attribute__((overloadable)) ulong3 FI(ushort3 a); __attribute__((overloadable)) ulong4 FJ(ushort4 a); __attribute__((overloadable)) ulong8 FK(ushort8 a); __attribute__((overloadable)) ulong16 FL(ushort16 a); __attribute__((overloadable)) float FM(ushort a); __attribute__((overloadable)) float2 FN(ushort2 a); __attribute__((overloadable)) float3 FO(ushort3 a); __attribute__((overloadable)) float4 FP(ushort4 a); __attribute__((overloadable)) float8 FQ(ushort8 a); __attribute__((overloadable)) float16 FR(ushort16 a); __attribute__((overloadable)) double FS(ushort a); __attribute__((overloadable)) double2 FT(ushort2 a); __attribute__((overloadable)) double3 FU(ushort3 a); __attribute__((overloadable)) double4 FV(ushort4 a); __attribute__((overloadable)) double8 FW(ushort8 a); __attribute__((overloadable)) double16 FX(ushort16 a); __attribute__((overloadable)) char DQ(long a); __attribute__((overloadable)) char2 DR(long2 a); __attribute__((overloadable)) char3 DS(long3 a); __attribute__((overloadable)) char4 DT(long4 a); __attribute__((overloadable)) char8 DU(long8 a); __attribute__((overloadable)) char16 DV(long16 a); __attribute__((overloadable)) uchar DW(long a); __attribute__((overloadable)) uchar2 DX(long2 a); __attribute__((overloadable)) uchar3 DY(long3 a); __attribute__((overloadable)) uchar4 DZ(long4 a); __attribute__((overloadable)) uchar8 EA(long8 a); __attribute__((overloadable)) uchar16 EB(long16 a); __attribute__((overloadable)) int EC(long a); __attribute__((overloadable)) int2 ED(long2 a); __attribute__((overloadable)) int3 EE(long3 a); __attribute__((overloadable)) int4 EF(long4 a); __attribute__((overloadable)) int8 EG(long8 a); __attribute__((overloadable)) int16 EH(long16 a); __attribute__((overloadable)) uint EI(long a); __attribute__((overloadable)) uint2 EJ(long2 a); __attribute__((overloadable)) uint3 EK(long3 a); __attribute__((overloadable)) uint4 EL(long4 a); __attribute__((overloadable)) uint8 EM(long8 a); __attribute__((overloadable)) uint16 EN(long16 a); __attribute__((overloadable)) short EO(long a); __attribute__((overloadable)) short2 EP(long2 a); __attribute__((overloadable)) short3 EQ(long3 a); __attribute__((overloadable)) short4 ER(long4 a); __attribute__((overloadable)) short8 ES(long8 a); __attribute__((overloadable)) short16 ET(long16 a); __attribute__((overloadable)) ushort EU(long a); __attribute__((overloadable)) ushort2 EV(long2 a); __attribute__((overloadable)) ushort3 EW(long3 a); __attribute__((overloadable)) ushort4 EX(long4 a); __attribute__((overloadable)) ushort8 EY(long8 a); __attribute__((overloadable)) ushort16 EZ(long16 a); __attribute__((overloadable)) long FA(long a); __attribute__((overloadable)) long2 FB(long2 a); __attribute__((overloadable)) long3 FC(long3 a); __attribute__((overloadable)) long4 FD(long4 a); __attribute__((overloadable)) long8 FE(long8 a); __attribute__((overloadable)) long16 FF(long16 a); __attribute__((overloadable)) ulong FG(long a); __attribute__((overloadable)) ulong2 FH(long2 a); __attribute__((overloadable)) ulong3 FI(long3 a); __attribute__((overloadable)) ulong4 FJ(long4 a); __attribute__((overloadable)) ulong8 FK(long8 a); __attribute__((overloadable)) ulong16 FL(long16 a); __attribute__((overloadable)) float FM(long a); __attribute__((overloadable)) float2 FN(long2 a); __attribute__((overloadable)) float3 FO(long3 a); __attribute__((overloadable)) float4 FP(long4 a); __attribute__((overloadable)) float8 FQ(long8 a); __attribute__((overloadable)) float16 FR(long16 a); __attribute__((overloadable)) double FS(long a); __attribute__((overloadable)) double2 FT(long2 a); __attribute__((overloadable)) double3 FU(long3 a); __attribute__((overloadable)) double4 FV(long4 a); __attribute__((overloadable)) double8 FW(long8 a); __attribute__((overloadable)) double16 FX(long16 a); __attribute__((overloadable)) char DQ(ulong a); __attribute__((overloadable)) char2 DR(ulong2 a); __attribute__((overloadable)) char3 DS(ulong3 a); __attribute__((overloadable)) char4 DT(ulong4 a); __attribute__((overloadable)) char8 DU(ulong8 a); __attribute__((overloadable)) char16 DV(ulong16 a); __attribute__((overloadable)) uchar DW(ulong a); __attribute__((overloadable)) uchar2 DX(ulong2 a); __attribute__((overloadable)) uchar3 DY(ulong3 a); __attribute__((overloadable)) uchar4 DZ(ulong4 a); __attribute__((overloadable)) uchar8 EA(ulong8 a); __attribute__((overloadable)) uchar16 EB(ulong16 a); __attribute__((overloadable)) int EC(ulong a); __attribute__((overloadable)) int2 ED(ulong2 a); __attribute__((overloadable)) int3 EE(ulong3 a); __attribute__((overloadable)) int4 EF(ulong4 a); __attribute__((overloadable)) int8 EG(ulong8 a); __attribute__((overloadable)) int16 EH(ulong16 a); __attribute__((overloadable)) uint EI(ulong a); __attribute__((overloadable)) uint2 EJ(ulong2 a); __attribute__((overloadable)) uint3 EK(ulong3 a); __attribute__((overloadable)) uint4 EL(ulong4 a); __attribute__((overloadable)) uint8 EM(ulong8 a); __attribute__((overloadable)) uint16 EN(ulong16 a); __attribute__((overloadable)) short EO(ulong a); __attribute__((overloadable)) short2 EP(ulong2 a); __attribute__((overloadable)) short3 EQ(ulong3 a); __attribute__((overloadable)) short4 ER(ulong4 a); __attribute__((overloadable)) short8 ES(ulong8 a); __attribute__((overloadable)) short16 ET(ulong16 a); __attribute__((overloadable)) ushort EU(ulong a); __attribute__((overloadable)) ushort2 EV(ulong2 a); __attribute__((overloadable)) ushort3 EW(ulong3 a); __attribute__((overloadable)) ushort4 EX(ulong4 a); __attribute__((overloadable)) ushort8 EY(ulong8 a); __attribute__((overloadable)) ushort16 EZ(ulong16 a); __attribute__((overloadable)) long FA(ulong a); __attribute__((overloadable)) long2 FB(ulong2 a); __attribute__((overloadable)) long3 FC(ulong3 a); __attribute__((overloadable)) long4 FD(ulong4 a); __attribute__((overloadable)) long8 FE(ulong8 a); __attribute__((overloadable)) long16 FF(ulong16 a); __attribute__((overloadable)) ulong FG(ulong a); __attribute__((overloadable)) ulong2 FH(ulong2 a); __attribute__((overloadable)) ulong3 FI(ulong3 a); __attribute__((overloadable)) ulong4 FJ(ulong4 a); __attribute__((overloadable)) ulong8 FK(ulong8 a); __attribute__((overloadable)) ulong16 FL(ulong16 a); __attribute__((overloadable)) float FM(ulong a); __attribute__((overloadable)) float2 FN(ulong2 a); __attribute__((overloadable)) float3 FO(ulong3 a); __attribute__((overloadable)) float4 FP(ulong4 a); __attribute__((overloadable)) float8 FQ(ulong8 a); __attribute__((overloadable)) float16 FR(ulong16 a); __attribute__((overloadable)) double FS(ulong a); __attribute__((overloadable)) double2 FT(ulong2 a); __attribute__((overloadable)) double3 FU(ulong3 a); __attribute__((overloadable)) double4 FV(ulong4 a); __attribute__((overloadable)) double8 FW(ulong8 a); __attribute__((overloadable)) double16 FX(ulong16 a); __attribute__((overloadable)) char DQ(float a); __attribute__((overloadable)) char2 DR(float2 a); __attribute__((overloadable)) char3 DS(float3 a); __attribute__((overloadable)) char4 DT(float4 a); __attribute__((overloadable)) char8 DU(float8 a); __attribute__((overloadable)) char16 DV(float16 a); __attribute__((overloadable)) uchar DW(float a); __attribute__((overloadable)) uchar2 DX(float2 a); __attribute__((overloadable)) uchar3 DY(float3 a); __attribute__((overloadable)) uchar4 DZ(float4 a); __attribute__((overloadable)) uchar8 EA(float8 a); __attribute__((overloadable)) uchar16 EB(float16 a); __attribute__((overloadable)) int EC(float a); __attribute__((overloadable)) int2 ED(float2 a); __attribute__((overloadable)) int3 EE(float3 a); __attribute__((overloadable)) int4 EF(float4 a); __attribute__((overloadable)) int8 EG(float8 a); __attribute__((overloadable)) int16 EH(float16 a); __attribute__((overloadable)) uint EI(float a); __attribute__((overloadable)) uint2 EJ(float2 a); __attribute__((overloadable)) uint3 EK(float3 a); __attribute__((overloadable)) uint4 EL(float4 a); __attribute__((overloadable)) uint8 EM(float8 a); __attribute__((overloadable)) uint16 EN(float16 a); __attribute__((overloadable)) short EO(float a); __attribute__((overloadable)) short2 EP(float2 a); __attribute__((overloadable)) short3 EQ(float3 a); __attribute__((overloadable)) short4 ER(float4 a); __attribute__((overloadable)) short8 ES(float8 a); __attribute__((overloadable)) short16 ET(float16 a); __attribute__((overloadable)) ushort EU(float a); __attribute__((overloadable)) ushort2 EV(float2 a); __attribute__((overloadable)) ushort3 EW(float3 a); __attribute__((overloadable)) ushort4 EX(float4 a); __attribute__((overloadable)) ushort8 EY(float8 a); __attribute__((overloadable)) ushort16 EZ(float16 a); __attribute__((overloadable)) long FA(float a); __attribute__((overloadable)) long2 FB(float2 a); __attribute__((overloadable)) long3 FC(float3 a); __attribute__((overloadable)) long4 FD(float4 a); __attribute__((overloadable)) long8 FE(float8 a); __attribute__((overloadable)) long16 FF(float16 a); __attribute__((overloadable)) ulong FG(float a); __attribute__((overloadable)) ulong2 FH(float2 a); __attribute__((overloadable)) ulong3 FI(float3 a); __attribute__((overloadable)) ulong4 FJ(float4 a); __attribute__((overloadable)) ulong8 FK(float8 a); __attribute__((overloadable)) ulong16 FL(float16 a); __attribute__((overloadable)) float FM(float a); __attribute__((overloadable)) float2 FN(float2 a); __attribute__((overloadable)) float3 FO(float3 a); __attribute__((overloadable)) float4 FP(float4 a); __attribute__((overloadable)) float8 FQ(float8 a); __attribute__((overloadable)) float16 FR(float16 a); __attribute__((overloadable)) double FS(float a); __attribute__((overloadable)) double2 FT(float2 a); __attribute__((overloadable)) double3 FU(float3 a); __attribute__((overloadable)) double4 FV(float4 a); __attribute__((overloadable)) double8 FW(float8 a); __attribute__((overloadable)) double16 FX(float16 a); __attribute__((overloadable)) char DQ(double a); __attribute__((overloadable)) char2 DR(double2 a); __attribute__((overloadable)) char3 DS(double3 a); __attribute__((overloadable)) char4 DT(double4 a); __attribute__((overloadable)) char8 DU(double8 a); __attribute__((overloadable)) char16 DV(double16 a); __attribute__((overloadable)) uchar DW(double a); __attribute__((overloadable)) uchar2 DX(double2 a); __attribute__((overloadable)) uchar3 DY(double3 a); __attribute__((overloadable)) uchar4 DZ(double4 a); __attribute__((overloadable)) uchar8 EA(double8 a); __attribute__((overloadable)) uchar16 EB(double16 a); __attribute__((overloadable)) int EC(double a); __attribute__((overloadable)) int2 ED(double2 a); __attribute__((overloadable)) int3 EE(double3 a); __attribute__((overloadable)) int4 EF(double4 a); __attribute__((overloadable)) int8 EG(double8 a); __attribute__((overloadable)) int16 EH(double16 a); __attribute__((overloadable)) uint EI(double a); __attribute__((overloadable)) uint2 EJ(double2 a); __attribute__((overloadable)) uint3 EK(double3 a); __attribute__((overloadable)) uint4 EL(double4 a); __attribute__((overloadable)) uint8 EM(double8 a); __attribute__((overloadable)) uint16 EN(double16 a); __attribute__((overloadable)) short EO(double a); __attribute__((overloadable)) short2 EP(double2 a); __attribute__((overloadable)) short3 EQ(double3 a); __attribute__((overloadable)) short4 ER(double4 a); __attribute__((overloadable)) short8 ES(double8 a); __attribute__((overloadable)) short16 ET(double16 a); __attribute__((overloadable)) ushort EU(double a); __attribute__((overloadable)) ushort2 EV(double2 a); __attribute__((overloadable)) ushort3 EW(double3 a); __attribute__((overloadable)) ushort4 EX(double4 a); __attribute__((overloadable)) ushort8 EY(double8 a); __attribute__((overloadable)) ushort16 EZ(double16 a); __attribute__((overloadable)) long FA(double a); __attribute__((overloadable)) long2 FB(double2 a); __attribute__((overloadable)) long3 FC(double3 a); __attribute__((overloadable)) long4 FD(double4 a); __attribute__((overloadable)) long8 FE(double8 a); __attribute__((overloadable)) long16 FF(double16 a); __attribute__((overloadable)) ulong FG(double a); __attribute__((overloadable)) ulong2 FH(double2 a); __attribute__((overloadable)) ulong3 FI(double3 a); __attribute__((overloadable)) ulong4 FJ(double4 a); __attribute__((overloadable)) ulong8 FK(double8 a); __attribute__((overloadable)) ulong16 FL(double16 a); __attribute__((overloadable)) float FM(double a); __attribute__((overloadable)) float2 FN(double2 a); __attribute__((overloadable)) float3 FO(double3 a); __attribute__((overloadable)) float4 FP(double4 a); __attribute__((overloadable)) float8 FQ(double8 a); __attribute__((overloadable)) float16 FR(double16 a); __attribute__((overloadable)) double FS(double a); __attribute__((overloadable)) double2 FT(double2 a); __attribute__((overloadable)) double3 FU(double3 a); __attribute__((overloadable)) double4 FV(double4 a); __attribute__((overloadable)) double8 FW(double8 a); __attribute__((overloadable)) double16 FX(double16 a); __attribute__((overloadable)) char FY(char a); __attribute__((overloadable)) char2 FZ(char2 a); __attribute__((overloadable)) char3 GA(char3 a); __attribute__((overloadable)) char4 GB(char4 a); __attribute__((overloadable)) char8 GC(char8 a); __attribute__((overloadable)) char16 GD(char16 a); __attribute__((overloadable)) uchar GE(char a); __attribute__((overloadable)) uchar2 GF(char2 a); __attribute__((overloadable)) uchar3 GG(char3 a); __attribute__((overloadable)) uchar4 GH(char4 a); __attribute__((overloadable)) uchar8 GI(char8 a); __attribute__((overloadable)) uchar16 GJ(char16 a); __attribute__((overloadable)) int GK(char a); __attribute__((overloadable)) int2 GL(char2 a); __attribute__((overloadable)) int3 GM(char3 a); __attribute__((overloadable)) int4 GN(char4 a); __attribute__((overloadable)) int8 GO(char8 a); __attribute__((overloadable)) int16 GP(char16 a); __attribute__((overloadable)) uint GQ(char a); __attribute__((overloadable)) uint2 GR(char2 a); __attribute__((overloadable)) uint3 GS(char3 a); __attribute__((overloadable)) uint4 GT(char4 a); __attribute__((overloadable)) uint8 GU(char8 a); __attribute__((overloadable)) uint16 GV(char16 a); __attribute__((overloadable)) short GW(char a); __attribute__((overloadable)) short2 GX(char2 a); __attribute__((overloadable)) short3 GY(char3 a); __attribute__((overloadable)) short4 GZ(char4 a); __attribute__((overloadable)) short8 HA(char8 a); __attribute__((overloadable)) short16 HB(char16 a); __attribute__((overloadable)) ushort HC(char a); __attribute__((overloadable)) ushort2 HD(char2 a); __attribute__((overloadable)) ushort3 HE(char3 a); __attribute__((overloadable)) ushort4 HF(char4 a); __attribute__((overloadable)) ushort8 HG(char8 a); __attribute__((overloadable)) ushort16 HH(char16 a); __attribute__((overloadable)) long HI(char a); __attribute__((overloadable)) long2 HJ(char2 a); __attribute__((overloadable)) long3 HK(char3 a); __attribute__((overloadable)) long4 HL(char4 a); __attribute__((overloadable)) long8 HM(char8 a); __attribute__((overloadable)) long16 HN(char16 a); __attribute__((overloadable)) ulong HO(char a); __attribute__((overloadable)) ulong2 HP(char2 a); __attribute__((overloadable)) ulong3 HQ(char3 a); __attribute__((overloadable)) ulong4 HR(char4 a); __attribute__((overloadable)) ulong8 HS(char8 a); __attribute__((overloadable)) ulong16 HT(char16 a); __attribute__((overloadable)) float HU(char a); __attribute__((overloadable)) float2 HV(char2 a); __attribute__((overloadable)) float3 HW(char3 a); __attribute__((overloadable)) float4 HX(char4 a); __attribute__((overloadable)) float8 HY(char8 a); __attribute__((overloadable)) float16 HZ(char16 a); __attribute__((overloadable)) double IA(char a); __attribute__((overloadable)) double2 IB(char2 a); __attribute__((overloadable)) double3 IC(char3 a); __attribute__((overloadable)) double4 ID(char4 a); __attribute__((overloadable)) double8 IE(char8 a); __attribute__((overloadable)) double16 IF(char16 a); __attribute__((overloadable)) char FY(uchar a); __attribute__((overloadable)) char2 FZ(uchar2 a); __attribute__((overloadable)) char3 GA(uchar3 a); __attribute__((overloadable)) char4 GB(uchar4 a); __attribute__((overloadable)) char8 GC(uchar8 a); __attribute__((overloadable)) char16 GD(uchar16 a); __attribute__((overloadable)) uchar GE(uchar a); __attribute__((overloadable)) uchar2 GF(uchar2 a); __attribute__((overloadable)) uchar3 GG(uchar3 a); __attribute__((overloadable)) uchar4 GH(uchar4 a); __attribute__((overloadable)) uchar8 GI(uchar8 a); __attribute__((overloadable)) uchar16 GJ(uchar16 a); __attribute__((overloadable)) int GK(uchar a); __attribute__((overloadable)) int2 GL(uchar2 a); __attribute__((overloadable)) int3 GM(uchar3 a); __attribute__((overloadable)) int4 GN(uchar4 a); __attribute__((overloadable)) int8 GO(uchar8 a); __attribute__((overloadable)) int16 GP(uchar16 a); __attribute__((overloadable)) uint GQ(uchar a); __attribute__((overloadable)) uint2 GR(uchar2 a); __attribute__((overloadable)) uint3 GS(uchar3 a); __attribute__((overloadable)) uint4 GT(uchar4 a); __attribute__((overloadable)) uint8 GU(uchar8 a); __attribute__((overloadable)) uint16 GV(uchar16 a); __attribute__((overloadable)) short GW(uchar a); __attribute__((overloadable)) short2 GX(uchar2 a); __attribute__((overloadable)) short3 GY(uchar3 a); __attribute__((overloadable)) short4 GZ(uchar4 a); __attribute__((overloadable)) short8 HA(uchar8 a); __attribute__((overloadable)) short16 HB(uchar16 a); __attribute__((overloadable)) ushort HC(uchar a); __attribute__((overloadable)) ushort2 HD(uchar2 a); __attribute__((overloadable)) ushort3 HE(uchar3 a); __attribute__((overloadable)) ushort4 HF(uchar4 a); __attribute__((overloadable)) ushort8 HG(uchar8 a); __attribute__((overloadable)) ushort16 HH(uchar16 a); __attribute__((overloadable)) long HI(uchar a); __attribute__((overloadable)) long2 HJ(uchar2 a); __attribute__((overloadable)) long3 HK(uchar3 a); __attribute__((overloadable)) long4 HL(uchar4 a); __attribute__((overloadable)) long8 HM(uchar8 a); __attribute__((overloadable)) long16 HN(uchar16 a); __attribute__((overloadable)) ulong HO(uchar a); __attribute__((overloadable)) ulong2 HP(uchar2 a); __attribute__((overloadable)) ulong3 HQ(uchar3 a); __attribute__((overloadable)) ulong4 HR(uchar4 a); __attribute__((overloadable)) ulong8 HS(uchar8 a); __attribute__((overloadable)) ulong16 HT(uchar16 a); __attribute__((overloadable)) float HU(uchar a); __attribute__((overloadable)) float2 HV(uchar2 a); __attribute__((overloadable)) float3 HW(uchar3 a); __attribute__((overloadable)) float4 HX(uchar4 a); __attribute__((overloadable)) float8 HY(uchar8 a); __attribute__((overloadable)) float16 HZ(uchar16 a); __attribute__((overloadable)) double IA(uchar a); __attribute__((overloadable)) double2 IB(uchar2 a); __attribute__((overloadable)) double3 IC(uchar3 a); __attribute__((overloadable)) double4 ID(uchar4 a); __attribute__((overloadable)) double8 IE(uchar8 a); __attribute__((overloadable)) double16 IF(uchar16 a); __attribute__((overloadable)) char FY(int a); __attribute__((overloadable)) char2 FZ(int2 a); __attribute__((overloadable)) char3 GA(int3 a); __attribute__((overloadable)) char4 GB(int4 a); __attribute__((overloadable)) char8 GC(int8 a); __attribute__((overloadable)) char16 GD(int16 a); __attribute__((overloadable)) uchar GE(int a); __attribute__((overloadable)) uchar2 GF(int2 a); __attribute__((overloadable)) uchar3 GG(int3 a); __attribute__((overloadable)) uchar4 GH(int4 a); __attribute__((overloadable)) uchar8 GI(int8 a); __attribute__((overloadable)) uchar16 GJ(int16 a); __attribute__((overloadable)) int GK(int a); __attribute__((overloadable)) int2 GL(int2 a); __attribute__((overloadable)) int3 GM(int3 a); __attribute__((overloadable)) int4 GN(int4 a); __attribute__((overloadable)) int8 GO(int8 a); __attribute__((overloadable)) int16 GP(int16 a); __attribute__((overloadable)) uint GQ(int a); __attribute__((overloadable)) uint2 GR(int2 a); __attribute__((overloadable)) uint3 GS(int3 a); __attribute__((overloadable)) uint4 GT(int4 a); __attribute__((overloadable)) uint8 GU(int8 a); __attribute__((overloadable)) uint16 GV(int16 a); __attribute__((overloadable)) short GW(int a); __attribute__((overloadable)) short2 GX(int2 a); __attribute__((overloadable)) short3 GY(int3 a); __attribute__((overloadable)) short4 GZ(int4 a); __attribute__((overloadable)) short8 HA(int8 a); __attribute__((overloadable)) short16 HB(int16 a); __attribute__((overloadable)) ushort HC(int a); __attribute__((overloadable)) ushort2 HD(int2 a); __attribute__((overloadable)) ushort3 HE(int3 a); __attribute__((overloadable)) ushort4 HF(int4 a); __attribute__((overloadable)) ushort8 HG(int8 a); __attribute__((overloadable)) ushort16 HH(int16 a); __attribute__((overloadable)) long HI(int a); __attribute__((overloadable)) long2 HJ(int2 a); __attribute__((overloadable)) long3 HK(int3 a); __attribute__((overloadable)) long4 HL(int4 a); __attribute__((overloadable)) long8 HM(int8 a); __attribute__((overloadable)) long16 HN(int16 a); __attribute__((overloadable)) ulong HO(int a); __attribute__((overloadable)) ulong2 HP(int2 a); __attribute__((overloadable)) ulong3 HQ(int3 a); __attribute__((overloadable)) ulong4 HR(int4 a); __attribute__((overloadable)) ulong8 HS(int8 a); __attribute__((overloadable)) ulong16 HT(int16 a); __attribute__((overloadable)) float HU(int a); __attribute__((overloadable)) float2 HV(int2 a); __attribute__((overloadable)) float3 HW(int3 a); __attribute__((overloadable)) float4 HX(int4 a); __attribute__((overloadable)) float8 HY(int8 a); __attribute__((overloadable)) float16 HZ(int16 a); __attribute__((overloadable)) double IA(int a); __attribute__((overloadable)) double2 IB(int2 a); __attribute__((overloadable)) double3 IC(int3 a); __attribute__((overloadable)) double4 ID(int4 a); __attribute__((overloadable)) double8 IE(int8 a); __attribute__((overloadable)) double16 IF(int16 a); __attribute__((overloadable)) char FY(uint a); __attribute__((overloadable)) char2 FZ(uint2 a); __attribute__((overloadable)) char3 GA(uint3 a); __attribute__((overloadable)) char4 GB(uint4 a); __attribute__((overloadable)) char8 GC(uint8 a); __attribute__((overloadable)) char16 GD(uint16 a); __attribute__((overloadable)) uchar GE(uint a); __attribute__((overloadable)) uchar2 GF(uint2 a); __attribute__((overloadable)) uchar3 GG(uint3 a); __attribute__((overloadable)) uchar4 GH(uint4 a); __attribute__((overloadable)) uchar8 GI(uint8 a); __attribute__((overloadable)) uchar16 GJ(uint16 a); __attribute__((overloadable)) int GK(uint a); __attribute__((overloadable)) int2 GL(uint2 a); __attribute__((overloadable)) int3 GM(uint3 a); __attribute__((overloadable)) int4 GN(uint4 a); __attribute__((overloadable)) int8 GO(uint8 a); __attribute__((overloadable)) int16 GP(uint16 a); __attribute__((overloadable)) uint GQ(uint a); __attribute__((overloadable)) uint2 GR(uint2 a); __attribute__((overloadable)) uint3 GS(uint3 a); __attribute__((overloadable)) uint4 GT(uint4 a); __attribute__((overloadable)) uint8 GU(uint8 a); __attribute__((overloadable)) uint16 GV(uint16 a); __attribute__((overloadable)) short GW(uint a); __attribute__((overloadable)) short2 GX(uint2 a); __attribute__((overloadable)) short3 GY(uint3 a); __attribute__((overloadable)) short4 GZ(uint4 a); __attribute__((overloadable)) short8 HA(uint8 a); __attribute__((overloadable)) short16 HB(uint16 a); __attribute__((overloadable)) ushort HC(uint a); __attribute__((overloadable)) ushort2 HD(uint2 a); __attribute__((overloadable)) ushort3 HE(uint3 a); __attribute__((overloadable)) ushort4 HF(uint4 a); __attribute__((overloadable)) ushort8 HG(uint8 a); __attribute__((overloadable)) ushort16 HH(uint16 a); __attribute__((overloadable)) long HI(uint a); __attribute__((overloadable)) long2 HJ(uint2 a); __attribute__((overloadable)) long3 HK(uint3 a); __attribute__((overloadable)) long4 HL(uint4 a); __attribute__((overloadable)) long8 HM(uint8 a); __attribute__((overloadable)) long16 HN(uint16 a); __attribute__((overloadable)) ulong HO(uint a); __attribute__((overloadable)) ulong2 HP(uint2 a); __attribute__((overloadable)) ulong3 HQ(uint3 a); __attribute__((overloadable)) ulong4 HR(uint4 a); __attribute__((overloadable)) ulong8 HS(uint8 a); __attribute__((overloadable)) ulong16 HT(uint16 a); __attribute__((overloadable)) float HU(uint a); __attribute__((overloadable)) float2 HV(uint2 a); __attribute__((overloadable)) float3 HW(uint3 a); __attribute__((overloadable)) float4 HX(uint4 a); __attribute__((overloadable)) float8 HY(uint8 a); __attribute__((overloadable)) float16 HZ(uint16 a); __attribute__((overloadable)) double IA(uint a); __attribute__((overloadable)) double2 IB(uint2 a); __attribute__((overloadable)) double3 IC(uint3 a); __attribute__((overloadable)) double4 ID(uint4 a); __attribute__((overloadable)) double8 IE(uint8 a); __attribute__((overloadable)) double16 IF(uint16 a); __attribute__((overloadable)) char FY(short a); __attribute__((overloadable)) char2 FZ(short2 a); __attribute__((overloadable)) char3 GA(short3 a); __attribute__((overloadable)) char4 GB(short4 a); __attribute__((overloadable)) char8 GC(short8 a); __attribute__((overloadable)) char16 GD(short16 a); __attribute__((overloadable)) uchar GE(short a); __attribute__((overloadable)) uchar2 GF(short2 a); __attribute__((overloadable)) uchar3 GG(short3 a); __attribute__((overloadable)) uchar4 GH(short4 a); __attribute__((overloadable)) uchar8 GI(short8 a); __attribute__((overloadable)) uchar16 GJ(short16 a); __attribute__((overloadable)) int GK(short a); __attribute__((overloadable)) int2 GL(short2 a); __attribute__((overloadable)) int3 GM(short3 a); __attribute__((overloadable)) int4 GN(short4 a); __attribute__((overloadable)) int8 GO(short8 a); __attribute__((overloadable)) int16 GP(short16 a); __attribute__((overloadable)) uint GQ(short a); __attribute__((overloadable)) uint2 GR(short2 a); __attribute__((overloadable)) uint3 GS(short3 a); __attribute__((overloadable)) uint4 GT(short4 a); __attribute__((overloadable)) uint8 GU(short8 a); __attribute__((overloadable)) uint16 GV(short16 a); __attribute__((overloadable)) short GW(short a); __attribute__((overloadable)) short2 GX(short2 a); __attribute__((overloadable)) short3 GY(short3 a); __attribute__((overloadable)) short4 GZ(short4 a); __attribute__((overloadable)) short8 HA(short8 a); __attribute__((overloadable)) short16 HB(short16 a); __attribute__((overloadable)) ushort HC(short a); __attribute__((overloadable)) ushort2 HD(short2 a); __attribute__((overloadable)) ushort3 HE(short3 a); __attribute__((overloadable)) ushort4 HF(short4 a); __attribute__((overloadable)) ushort8 HG(short8 a); __attribute__((overloadable)) ushort16 HH(short16 a); __attribute__((overloadable)) long HI(short a); __attribute__((overloadable)) long2 HJ(short2 a); __attribute__((overloadable)) long3 HK(short3 a); __attribute__((overloadable)) long4 HL(short4 a); __attribute__((overloadable)) long8 HM(short8 a); __attribute__((overloadable)) long16 HN(short16 a); __attribute__((overloadable)) ulong HO(short a); __attribute__((overloadable)) ulong2 HP(short2 a); __attribute__((overloadable)) ulong3 HQ(short3 a); __attribute__((overloadable)) ulong4 HR(short4 a); __attribute__((overloadable)) ulong8 HS(short8 a); __attribute__((overloadable)) ulong16 HT(short16 a); __attribute__((overloadable)) float HU(short a); __attribute__((overloadable)) float2 HV(short2 a); __attribute__((overloadable)) float3 HW(short3 a); __attribute__((overloadable)) float4 HX(short4 a); __attribute__((overloadable)) float8 HY(short8 a); __attribute__((overloadable)) float16 HZ(short16 a); __attribute__((overloadable)) double IA(short a); __attribute__((overloadable)) double2 IB(short2 a); __attribute__((overloadable)) double3 IC(short3 a); __attribute__((overloadable)) double4 ID(short4 a); __attribute__((overloadable)) double8 IE(short8 a); __attribute__((overloadable)) double16 IF(short16 a); __attribute__((overloadable)) char FY(ushort a); __attribute__((overloadable)) char2 FZ(ushort2 a); __attribute__((overloadable)) char3 GA(ushort3 a); __attribute__((overloadable)) char4 GB(ushort4 a); __attribute__((overloadable)) char8 GC(ushort8 a); __attribute__((overloadable)) char16 GD(ushort16 a); __attribute__((overloadable)) uchar GE(ushort a); __attribute__((overloadable)) uchar2 GF(ushort2 a); __attribute__((overloadable)) uchar3 GG(ushort3 a); __attribute__((overloadable)) uchar4 GH(ushort4 a); __attribute__((overloadable)) uchar8 GI(ushort8 a); __attribute__((overloadable)) uchar16 GJ(ushort16 a); __attribute__((overloadable)) int GK(ushort a); __attribute__((overloadable)) int2 GL(ushort2 a); __attribute__((overloadable)) int3 GM(ushort3 a); __attribute__((overloadable)) int4 GN(ushort4 a); __attribute__((overloadable)) int8 GO(ushort8 a); __attribute__((overloadable)) int16 GP(ushort16 a); __attribute__((overloadable)) uint GQ(ushort a); __attribute__((overloadable)) uint2 GR(ushort2 a); __attribute__((overloadable)) uint3 GS(ushort3 a); __attribute__((overloadable)) uint4 GT(ushort4 a); __attribute__((overloadable)) uint8 GU(ushort8 a); __attribute__((overloadable)) uint16 GV(ushort16 a); __attribute__((overloadable)) short GW(ushort a); __attribute__((overloadable)) short2 GX(ushort2 a); __attribute__((overloadable)) short3 GY(ushort3 a); __attribute__((overloadable)) short4 GZ(ushort4 a); __attribute__((overloadable)) short8 HA(ushort8 a); __attribute__((overloadable)) short16 HB(ushort16 a); __attribute__((overloadable)) ushort HC(ushort a); __attribute__((overloadable)) ushort2 HD(ushort2 a); __attribute__((overloadable)) ushort3 HE(ushort3 a); __attribute__((overloadable)) ushort4 HF(ushort4 a); __attribute__((overloadable)) ushort8 HG(ushort8 a); __attribute__((overloadable)) ushort16 HH(ushort16 a); __attribute__((overloadable)) long HI(ushort a); __attribute__((overloadable)) long2 HJ(ushort2 a); __attribute__((overloadable)) long3 HK(ushort3 a); __attribute__((overloadable)) long4 HL(ushort4 a); __attribute__((overloadable)) long8 HM(ushort8 a); __attribute__((overloadable)) long16 HN(ushort16 a); __attribute__((overloadable)) ulong HO(ushort a); __attribute__((overloadable)) ulong2 HP(ushort2 a); __attribute__((overloadable)) ulong3 HQ(ushort3 a); __attribute__((overloadable)) ulong4 HR(ushort4 a); __attribute__((overloadable)) ulong8 HS(ushort8 a); __attribute__((overloadable)) ulong16 HT(ushort16 a); __attribute__((overloadable)) float HU(ushort a); __attribute__((overloadable)) float2 HV(ushort2 a); __attribute__((overloadable)) float3 HW(ushort3 a); __attribute__((overloadable)) float4 HX(ushort4 a); __attribute__((overloadable)) float8 HY(ushort8 a); __attribute__((overloadable)) float16 HZ(ushort16 a); __attribute__((overloadable)) double IA(ushort a); __attribute__((overloadable)) double2 IB(ushort2 a); __attribute__((overloadable)) double3 IC(ushort3 a); __attribute__((overloadable)) double4 ID(ushort4 a); __attribute__((overloadable)) double8 IE(ushort8 a); __attribute__((overloadable)) double16 IF(ushort16 a); __attribute__((overloadable)) char FY(long a); __attribute__((overloadable)) char2 FZ(long2 a); __attribute__((overloadable)) char3 GA(long3 a); __attribute__((overloadable)) char4 GB(long4 a); __attribute__((overloadable)) char8 GC(long8 a); __attribute__((overloadable)) char16 GD(long16 a); __attribute__((overloadable)) uchar GE(long a); __attribute__((overloadable)) uchar2 GF(long2 a); __attribute__((overloadable)) uchar3 GG(long3 a); __attribute__((overloadable)) uchar4 GH(long4 a); __attribute__((overloadable)) uchar8 GI(long8 a); __attribute__((overloadable)) uchar16 GJ(long16 a); __attribute__((overloadable)) int GK(long a); __attribute__((overloadable)) int2 GL(long2 a); __attribute__((overloadable)) int3 GM(long3 a); __attribute__((overloadable)) int4 GN(long4 a); __attribute__((overloadable)) int8 GO(long8 a); __attribute__((overloadable)) int16 GP(long16 a); __attribute__((overloadable)) uint GQ(long a); __attribute__((overloadable)) uint2 GR(long2 a); __attribute__((overloadable)) uint3 GS(long3 a); __attribute__((overloadable)) uint4 GT(long4 a); __attribute__((overloadable)) uint8 GU(long8 a); __attribute__((overloadable)) uint16 GV(long16 a); __attribute__((overloadable)) short GW(long a); __attribute__((overloadable)) short2 GX(long2 a); __attribute__((overloadable)) short3 GY(long3 a); __attribute__((overloadable)) short4 GZ(long4 a); __attribute__((overloadable)) short8 HA(long8 a); __attribute__((overloadable)) short16 HB(long16 a); __attribute__((overloadable)) ushort HC(long a); __attribute__((overloadable)) ushort2 HD(long2 a); __attribute__((overloadable)) ushort3 HE(long3 a); __attribute__((overloadable)) ushort4 HF(long4 a); __attribute__((overloadable)) ushort8 HG(long8 a); __attribute__((overloadable)) ushort16 HH(long16 a); __attribute__((overloadable)) long HI(long a); __attribute__((overloadable)) long2 HJ(long2 a); __attribute__((overloadable)) long3 HK(long3 a); __attribute__((overloadable)) long4 HL(long4 a); __attribute__((overloadable)) long8 HM(long8 a); __attribute__((overloadable)) long16 HN(long16 a); __attribute__((overloadable)) ulong HO(long a); __attribute__((overloadable)) ulong2 HP(long2 a); __attribute__((overloadable)) ulong3 HQ(long3 a); __attribute__((overloadable)) ulong4 HR(long4 a); __attribute__((overloadable)) ulong8 HS(long8 a); __attribute__((overloadable)) ulong16 HT(long16 a); __attribute__((overloadable)) float HU(long a); __attribute__((overloadable)) float2 HV(long2 a); __attribute__((overloadable)) float3 HW(long3 a); __attribute__((overloadable)) float4 HX(long4 a); __attribute__((overloadable)) float8 HY(long8 a); __attribute__((overloadable)) float16 HZ(long16 a); __attribute__((overloadable)) double IA(long a); __attribute__((overloadable)) double2 IB(long2 a); __attribute__((overloadable)) double3 IC(long3 a); __attribute__((overloadable)) double4 ID(long4 a); __attribute__((overloadable)) double8 IE(long8 a); __attribute__((overloadable)) double16 IF(long16 a); __attribute__((overloadable)) char FY(ulong a); __attribute__((overloadable)) char2 FZ(ulong2 a); __attribute__((overloadable)) char3 GA(ulong3 a); __attribute__((overloadable)) char4 GB(ulong4 a); __attribute__((overloadable)) char8 GC(ulong8 a); __attribute__((overloadable)) char16 GD(ulong16 a); __attribute__((overloadable)) uchar GE(ulong a); __attribute__((overloadable)) uchar2 GF(ulong2 a); __attribute__((overloadable)) uchar3 GG(ulong3 a); __attribute__((overloadable)) uchar4 GH(ulong4 a); __attribute__((overloadable)) uchar8 GI(ulong8 a); __attribute__((overloadable)) uchar16 GJ(ulong16 a); __attribute__((overloadable)) int GK(ulong a); __attribute__((overloadable)) int2 GL(ulong2 a); __attribute__((overloadable)) int3 GM(ulong3 a); __attribute__((overloadable)) int4 GN(ulong4 a); __attribute__((overloadable)) int8 GO(ulong8 a); __attribute__((overloadable)) int16 GP(ulong16 a); __attribute__((overloadable)) uint GQ(ulong a); __attribute__((overloadable)) uint2 GR(ulong2 a); __attribute__((overloadable)) uint3 GS(ulong3 a); __attribute__((overloadable)) uint4 GT(ulong4 a); __attribute__((overloadable)) uint8 GU(ulong8 a); __attribute__((overloadable)) uint16 GV(ulong16 a); __attribute__((overloadable)) short GW(ulong a); __attribute__((overloadable)) short2 GX(ulong2 a); __attribute__((overloadable)) short3 GY(ulong3 a); __attribute__((overloadable)) short4 GZ(ulong4 a); __attribute__((overloadable)) short8 HA(ulong8 a); __attribute__((overloadable)) short16 HB(ulong16 a); __attribute__((overloadable)) ushort HC(ulong a); __attribute__((overloadable)) ushort2 HD(ulong2 a); __attribute__((overloadable)) ushort3 HE(ulong3 a); __attribute__((overloadable)) ushort4 HF(ulong4 a); __attribute__((overloadable)) ushort8 HG(ulong8 a); __attribute__((overloadable)) ushort16 HH(ulong16 a); __attribute__((overloadable)) long HI(ulong a); __attribute__((overloadable)) long2 HJ(ulong2 a); __attribute__((overloadable)) long3 HK(ulong3 a); __attribute__((overloadable)) long4 HL(ulong4 a); __attribute__((overloadable)) long8 HM(ulong8 a); __attribute__((overloadable)) long16 HN(ulong16 a); __attribute__((overloadable)) ulong HO(ulong a); __attribute__((overloadable)) ulong2 HP(ulong2 a); __attribute__((overloadable)) ulong3 HQ(ulong3 a); __attribute__((overloadable)) ulong4 HR(ulong4 a); __attribute__((overloadable)) ulong8 HS(ulong8 a); __attribute__((overloadable)) ulong16 HT(ulong16 a); __attribute__((overloadable)) float HU(ulong a); __attribute__((overloadable)) float2 HV(ulong2 a); __attribute__((overloadable)) float3 HW(ulong3 a); __attribute__((overloadable)) float4 HX(ulong4 a); __attribute__((overloadable)) float8 HY(ulong8 a); __attribute__((overloadable)) float16 HZ(ulong16 a); __attribute__((overloadable)) double IA(ulong a); __attribute__((overloadable)) double2 IB(ulong2 a); __attribute__((overloadable)) double3 IC(ulong3 a); __attribute__((overloadable)) double4 ID(ulong4 a); __attribute__((overloadable)) double8 IE(ulong8 a); __attribute__((overloadable)) double16 IF(ulong16 a); __attribute__((overloadable)) char FY(float a); __attribute__((overloadable)) char2 FZ(float2 a); __attribute__((overloadable)) char3 GA(float3 a); __attribute__((overloadable)) char4 GB(float4 a); __attribute__((overloadable)) char8 GC(float8 a); __attribute__((overloadable)) char16 GD(float16 a); __attribute__((overloadable)) uchar GE(float a); __attribute__((overloadable)) uchar2 GF(float2 a); __attribute__((overloadable)) uchar3 GG(float3 a); __attribute__((overloadable)) uchar4 GH(float4 a); __attribute__((overloadable)) uchar8 GI(float8 a); __attribute__((overloadable)) uchar16 GJ(float16 a); __attribute__((overloadable)) int GK(float a); __attribute__((overloadable)) int2 GL(float2 a); __attribute__((overloadable)) int3 GM(float3 a); __attribute__((overloadable)) int4 GN(float4 a); __attribute__((overloadable)) int8 GO(float8 a); __attribute__((overloadable)) int16 GP(float16 a); __attribute__((overloadable)) uint GQ(float a); __attribute__((overloadable)) uint2 GR(float2 a); __attribute__((overloadable)) uint3 GS(float3 a); __attribute__((overloadable)) uint4 GT(float4 a); __attribute__((overloadable)) uint8 GU(float8 a); __attribute__((overloadable)) uint16 GV(float16 a); __attribute__((overloadable)) short GW(float a); __attribute__((overloadable)) short2 GX(float2 a); __attribute__((overloadable)) short3 GY(float3 a); __attribute__((overloadable)) short4 GZ(float4 a); __attribute__((overloadable)) short8 HA(float8 a); __attribute__((overloadable)) short16 HB(float16 a); __attribute__((overloadable)) ushort HC(float a); __attribute__((overloadable)) ushort2 HD(float2 a); __attribute__((overloadable)) ushort3 HE(float3 a); __attribute__((overloadable)) ushort4 HF(float4 a); __attribute__((overloadable)) ushort8 HG(float8 a); __attribute__((overloadable)) ushort16 HH(float16 a); __attribute__((overloadable)) long HI(float a); __attribute__((overloadable)) long2 HJ(float2 a); __attribute__((overloadable)) long3 HK(float3 a); __attribute__((overloadable)) long4 HL(float4 a); __attribute__((overloadable)) long8 HM(float8 a); __attribute__((overloadable)) long16 HN(float16 a); __attribute__((overloadable)) ulong HO(float a); __attribute__((overloadable)) ulong2 HP(float2 a); __attribute__((overloadable)) ulong3 HQ(float3 a); __attribute__((overloadable)) ulong4 HR(float4 a); __attribute__((overloadable)) ulong8 HS(float8 a); __attribute__((overloadable)) ulong16 HT(float16 a); __attribute__((overloadable)) float HU(float a); __attribute__((overloadable)) float2 HV(float2 a); __attribute__((overloadable)) float3 HW(float3 a); __attribute__((overloadable)) float4 HX(float4 a); __attribute__((overloadable)) float8 HY(float8 a); __attribute__((overloadable)) float16 HZ(float16 a); __attribute__((overloadable)) double IA(float a); __attribute__((overloadable)) double2 IB(float2 a); __attribute__((overloadable)) double3 IC(float3 a); __attribute__((overloadable)) double4 ID(float4 a); __attribute__((overloadable)) double8 IE(float8 a); __attribute__((overloadable)) double16 IF(float16 a); __attribute__((overloadable)) char FY(double a); __attribute__((overloadable)) char2 FZ(double2 a); __attribute__((overloadable)) char3 GA(double3 a); __attribute__((overloadable)) char4 GB(double4 a); __attribute__((overloadable)) char8 GC(double8 a); __attribute__((overloadable)) char16 GD(double16 a); __attribute__((overloadable)) uchar GE(double a); __attribute__((overloadable)) uchar2 GF(double2 a); __attribute__((overloadable)) uchar3 GG(double3 a); __attribute__((overloadable)) uchar4 GH(double4 a); __attribute__((overloadable)) uchar8 GI(double8 a); __attribute__((overloadable)) uchar16 GJ(double16 a); __attribute__((overloadable)) int GK(double a); __attribute__((overloadable)) int2 GL(double2 a); __attribute__((overloadable)) int3 GM(double3 a); __attribute__((overloadable)) int4 GN(double4 a); __attribute__((overloadable)) int8 GO(double8 a); __attribute__((overloadable)) int16 GP(double16 a); __attribute__((overloadable)) uint GQ(double a); __attribute__((overloadable)) uint2 GR(double2 a); __attribute__((overloadable)) uint3 GS(double3 a); __attribute__((overloadable)) uint4 GT(double4 a); __attribute__((overloadable)) uint8 GU(double8 a); __attribute__((overloadable)) uint16 GV(double16 a); __attribute__((overloadable)) short GW(double a); __attribute__((overloadable)) short2 GX(double2 a); __attribute__((overloadable)) short3 GY(double3 a); __attribute__((overloadable)) short4 GZ(double4 a); __attribute__((overloadable)) short8 HA(double8 a); __attribute__((overloadable)) short16 HB(double16 a); __attribute__((overloadable)) ushort HC(double a); __attribute__((overloadable)) ushort2 HD(double2 a); __attribute__((overloadable)) ushort3 HE(double3 a); __attribute__((overloadable)) ushort4 HF(double4 a); __attribute__((overloadable)) ushort8 HG(double8 a); __attribute__((overloadable)) ushort16 HH(double16 a); __attribute__((overloadable)) long HI(double a); __attribute__((overloadable)) long2 HJ(double2 a); __attribute__((overloadable)) long3 HK(double3 a); __attribute__((overloadable)) long4 HL(double4 a); __attribute__((overloadable)) long8 HM(double8 a); __attribute__((overloadable)) long16 HN(double16 a); __attribute__((overloadable)) ulong HO(double a); __attribute__((overloadable)) ulong2 HP(double2 a); __attribute__((overloadable)) ulong3 HQ(double3 a); __attribute__((overloadable)) ulong4 HR(double4 a); __attribute__((overloadable)) ulong8 HS(double8 a); __attribute__((overloadable)) ulong16 HT(double16 a); __attribute__((overloadable)) float HU(double a); __attribute__((overloadable)) float2 HV(double2 a); __attribute__((overloadable)) float3 HW(double3 a); __attribute__((overloadable)) float4 HX(double4 a); __attribute__((overloadable)) float8 HY(double8 a); __attribute__((overloadable)) float16 HZ(double16 a); __attribute__((overloadable)) double IA(double a); __attribute__((overloadable)) double2 IB(double2 a); __attribute__((overloadable)) double3 IC(double3 a); __attribute__((overloadable)) double4 ID(double4 a); __attribute__((overloadable)) double8 IE(double8 a); __attribute__((overloadable)) double16 IF(double16 a); __attribute__((overloadable)) char IG(char a); __attribute__((overloadable)) char2 IH(char2 a); __attribute__((overloadable)) char3 II(char3 a); __attribute__((overloadable)) char4 IJ(char4 a); __attribute__((overloadable)) char8 IK(char8 a); __attribute__((overloadable)) char16 IL(char16 a); __attribute__((overloadable)) uchar IM(char a); __attribute__((overloadable)) uchar2 IN(char2 a); __attribute__((overloadable)) uchar3 IO(char3 a); __attribute__((overloadable)) uchar4 IP(char4 a); __attribute__((overloadable)) uchar8 IQ(char8 a); __attribute__((overloadable)) uchar16 IR(char16 a); __attribute__((overloadable)) int IS(char a); __attribute__((overloadable)) int2 IT(char2 a); __attribute__((overloadable)) int3 IU(char3 a); __attribute__((overloadable)) int4 IV(char4 a); __attribute__((overloadable)) int8 IW(char8 a); __attribute__((overloadable)) int16 IX(char16 a); __attribute__((overloadable)) uint IY(char a); __attribute__((overloadable)) uint2 IZ(char2 a); __attribute__((overloadable)) uint3 JA(char3 a); __attribute__((overloadable)) uint4 JB(char4 a); __attribute__((overloadable)) uint8 JC(char8 a); __attribute__((overloadable)) uint16 JD(char16 a); __attribute__((overloadable)) short JE(char a); __attribute__((overloadable)) short2 JF(char2 a); __attribute__((overloadable)) short3 JG(char3 a); __attribute__((overloadable)) short4 JH(char4 a); __attribute__((overloadable)) short8 JI(char8 a); __attribute__((overloadable)) short16 JJ(char16 a); __attribute__((overloadable)) ushort JK(char a); __attribute__((overloadable)) ushort2 JL(char2 a); __attribute__((overloadable)) ushort3 JM(char3 a); __attribute__((overloadable)) ushort4 JN(char4 a); __attribute__((overloadable)) ushort8 JO(char8 a); __attribute__((overloadable)) ushort16 JP(char16 a); __attribute__((overloadable)) long JQ(char a); __attribute__((overloadable)) long2 JR(char2 a); __attribute__((overloadable)) long3 JS(char3 a); __attribute__((overloadable)) long4 JT(char4 a); __attribute__((overloadable)) long8 JU(char8 a); __attribute__((overloadable)) long16 JV(char16 a); __attribute__((overloadable)) ulong JW(char a); __attribute__((overloadable)) ulong2 JX(char2 a); __attribute__((overloadable)) ulong3 JY(char3 a); __attribute__((overloadable)) ulong4 JZ(char4 a); __attribute__((overloadable)) ulong8 KA(char8 a); __attribute__((overloadable)) ulong16 KB(char16 a); __attribute__((overloadable)) float KC(char a); __attribute__((overloadable)) float2 KD(char2 a); __attribute__((overloadable)) float3 KE(char3 a); __attribute__((overloadable)) float4 KF(char4 a); __attribute__((overloadable)) float8 KG(char8 a); __attribute__((overloadable)) float16 KH(char16 a); __attribute__((overloadable)) double KI(char a); __attribute__((overloadable)) double2 KJ(char2 a); __attribute__((overloadable)) double3 KK(char3 a); __attribute__((overloadable)) double4 KL(char4 a); __attribute__((overloadable)) double8 KM(char8 a); __attribute__((overloadable)) double16 KN(char16 a); __attribute__((overloadable)) char IG(uchar a); __attribute__((overloadable)) char2 IH(uchar2 a); __attribute__((overloadable)) char3 II(uchar3 a); __attribute__((overloadable)) char4 IJ(uchar4 a); __attribute__((overloadable)) char8 IK(uchar8 a); __attribute__((overloadable)) char16 IL(uchar16 a); __attribute__((overloadable)) uchar IM(uchar a); __attribute__((overloadable)) uchar2 IN(uchar2 a); __attribute__((overloadable)) uchar3 IO(uchar3 a); __attribute__((overloadable)) uchar4 IP(uchar4 a); __attribute__((overloadable)) uchar8 IQ(uchar8 a); __attribute__((overloadable)) uchar16 IR(uchar16 a); __attribute__((overloadable)) int IS(uchar a); __attribute__((overloadable)) int2 IT(uchar2 a); __attribute__((overloadable)) int3 IU(uchar3 a); __attribute__((overloadable)) int4 IV(uchar4 a); __attribute__((overloadable)) int8 IW(uchar8 a); __attribute__((overloadable)) int16 IX(uchar16 a); __attribute__((overloadable)) uint IY(uchar a); __attribute__((overloadable)) uint2 IZ(uchar2 a); __attribute__((overloadable)) uint3 JA(uchar3 a); __attribute__((overloadable)) uint4 JB(uchar4 a); __attribute__((overloadable)) uint8 JC(uchar8 a); __attribute__((overloadable)) uint16 JD(uchar16 a); __attribute__((overloadable)) short JE(uchar a); __attribute__((overloadable)) short2 JF(uchar2 a); __attribute__((overloadable)) short3 JG(uchar3 a); __attribute__((overloadable)) short4 JH(uchar4 a); __attribute__((overloadable)) short8 JI(uchar8 a); __attribute__((overloadable)) short16 JJ(uchar16 a); __attribute__((overloadable)) ushort JK(uchar a); __attribute__((overloadable)) ushort2 JL(uchar2 a); __attribute__((overloadable)) ushort3 JM(uchar3 a); __attribute__((overloadable)) ushort4 JN(uchar4 a); __attribute__((overloadable)) ushort8 JO(uchar8 a); __attribute__((overloadable)) ushort16 JP(uchar16 a); __attribute__((overloadable)) long JQ(uchar a); __attribute__((overloadable)) long2 JR(uchar2 a); __attribute__((overloadable)) long3 JS(uchar3 a); __attribute__((overloadable)) long4 JT(uchar4 a); __attribute__((overloadable)) long8 JU(uchar8 a); __attribute__((overloadable)) long16 JV(uchar16 a); __attribute__((overloadable)) ulong JW(uchar a); __attribute__((overloadable)) ulong2 JX(uchar2 a); __attribute__((overloadable)) ulong3 JY(uchar3 a); __attribute__((overloadable)) ulong4 JZ(uchar4 a); __attribute__((overloadable)) ulong8 KA(uchar8 a); __attribute__((overloadable)) ulong16 KB(uchar16 a); __attribute__((overloadable)) float KC(uchar a); __attribute__((overloadable)) float2 KD(uchar2 a); __attribute__((overloadable)) float3 KE(uchar3 a); __attribute__((overloadable)) float4 KF(uchar4 a); __attribute__((overloadable)) float8 KG(uchar8 a); __attribute__((overloadable)) float16 KH(uchar16 a); __attribute__((overloadable)) double KI(uchar a); __attribute__((overloadable)) double2 KJ(uchar2 a); __attribute__((overloadable)) double3 KK(uchar3 a); __attribute__((overloadable)) double4 KL(uchar4 a); __attribute__((overloadable)) double8 KM(uchar8 a); __attribute__((overloadable)) double16 KN(uchar16 a); __attribute__((overloadable)) char IG(int a); __attribute__((overloadable)) char2 IH(int2 a); __attribute__((overloadable)) char3 II(int3 a); __attribute__((overloadable)) char4 IJ(int4 a); __attribute__((overloadable)) char8 IK(int8 a); __attribute__((overloadable)) char16 IL(int16 a); __attribute__((overloadable)) uchar IM(int a); __attribute__((overloadable)) uchar2 IN(int2 a); __attribute__((overloadable)) uchar3 IO(int3 a); __attribute__((overloadable)) uchar4 IP(int4 a); __attribute__((overloadable)) uchar8 IQ(int8 a); __attribute__((overloadable)) uchar16 IR(int16 a); __attribute__((overloadable)) int IS(int a); __attribute__((overloadable)) int2 IT(int2 a); __attribute__((overloadable)) int3 IU(int3 a); __attribute__((overloadable)) int4 IV(int4 a); __attribute__((overloadable)) int8 IW(int8 a); __attribute__((overloadable)) int16 IX(int16 a); __attribute__((overloadable)) uint IY(int a); __attribute__((overloadable)) uint2 IZ(int2 a); __attribute__((overloadable)) uint3 JA(int3 a); __attribute__((overloadable)) uint4 JB(int4 a); __attribute__((overloadable)) uint8 JC(int8 a); __attribute__((overloadable)) uint16 JD(int16 a); __attribute__((overloadable)) short JE(int a); __attribute__((overloadable)) short2 JF(int2 a); __attribute__((overloadable)) short3 JG(int3 a); __attribute__((overloadable)) short4 JH(int4 a); __attribute__((overloadable)) short8 JI(int8 a); __attribute__((overloadable)) short16 JJ(int16 a); __attribute__((overloadable)) ushort JK(int a); __attribute__((overloadable)) ushort2 JL(int2 a); __attribute__((overloadable)) ushort3 JM(int3 a); __attribute__((overloadable)) ushort4 JN(int4 a); __attribute__((overloadable)) ushort8 JO(int8 a); __attribute__((overloadable)) ushort16 JP(int16 a); __attribute__((overloadable)) long JQ(int a); __attribute__((overloadable)) long2 JR(int2 a); __attribute__((overloadable)) long3 JS(int3 a); __attribute__((overloadable)) long4 JT(int4 a); __attribute__((overloadable)) long8 JU(int8 a); __attribute__((overloadable)) long16 JV(int16 a); __attribute__((overloadable)) ulong JW(int a); __attribute__((overloadable)) ulong2 JX(int2 a); __attribute__((overloadable)) ulong3 JY(int3 a); __attribute__((overloadable)) ulong4 JZ(int4 a); __attribute__((overloadable)) ulong8 KA(int8 a); __attribute__((overloadable)) ulong16 KB(int16 a); __attribute__((overloadable)) float KC(int a); __attribute__((overloadable)) float2 KD(int2 a); __attribute__((overloadable)) float3 KE(int3 a); __attribute__((overloadable)) float4 KF(int4 a); __attribute__((overloadable)) float8 KG(int8 a); __attribute__((overloadable)) float16 KH(int16 a); __attribute__((overloadable)) double KI(int a); __attribute__((overloadable)) double2 KJ(int2 a); __attribute__((overloadable)) double3 KK(int3 a); __attribute__((overloadable)) double4 KL(int4 a); __attribute__((overloadable)) double8 KM(int8 a); __attribute__((overloadable)) double16 KN(int16 a); __attribute__((overloadable)) char IG(uint a); __attribute__((overloadable)) char2 IH(uint2 a); __attribute__((overloadable)) char3 II(uint3 a); __attribute__((overloadable)) char4 IJ(uint4 a); __attribute__((overloadable)) char8 IK(uint8 a); __attribute__((overloadable)) char16 IL(uint16 a); __attribute__((overloadable)) uchar IM(uint a); __attribute__((overloadable)) uchar2 IN(uint2 a); __attribute__((overloadable)) uchar3 IO(uint3 a); __attribute__((overloadable)) uchar4 IP(uint4 a); __attribute__((overloadable)) uchar8 IQ(uint8 a); __attribute__((overloadable)) uchar16 IR(uint16 a); __attribute__((overloadable)) int IS(uint a); __attribute__((overloadable)) int2 IT(uint2 a); __attribute__((overloadable)) int3 IU(uint3 a); __attribute__((overloadable)) int4 IV(uint4 a); __attribute__((overloadable)) int8 IW(uint8 a); __attribute__((overloadable)) int16 IX(uint16 a); __attribute__((overloadable)) uint IY(uint a); __attribute__((overloadable)) uint2 IZ(uint2 a); __attribute__((overloadable)) uint3 JA(uint3 a); __attribute__((overloadable)) uint4 JB(uint4 a); __attribute__((overloadable)) uint8 JC(uint8 a); __attribute__((overloadable)) uint16 JD(uint16 a); __attribute__((overloadable)) short JE(uint a); __attribute__((overloadable)) short2 JF(uint2 a); __attribute__((overloadable)) short3 JG(uint3 a); __attribute__((overloadable)) short4 JH(uint4 a); __attribute__((overloadable)) short8 JI(uint8 a); __attribute__((overloadable)) short16 JJ(uint16 a); __attribute__((overloadable)) ushort JK(uint a); __attribute__((overloadable)) ushort2 JL(uint2 a); __attribute__((overloadable)) ushort3 JM(uint3 a); __attribute__((overloadable)) ushort4 JN(uint4 a); __attribute__((overloadable)) ushort8 JO(uint8 a); __attribute__((overloadable)) ushort16 JP(uint16 a); __attribute__((overloadable)) long JQ(uint a); __attribute__((overloadable)) long2 JR(uint2 a); __attribute__((overloadable)) long3 JS(uint3 a); __attribute__((overloadable)) long4 JT(uint4 a); __attribute__((overloadable)) long8 JU(uint8 a); __attribute__((overloadable)) long16 JV(uint16 a); __attribute__((overloadable)) ulong JW(uint a); __attribute__((overloadable)) ulong2 JX(uint2 a); __attribute__((overloadable)) ulong3 JY(uint3 a); __attribute__((overloadable)) ulong4 JZ(uint4 a); __attribute__((overloadable)) ulong8 KA(uint8 a); __attribute__((overloadable)) ulong16 KB(uint16 a); __attribute__((overloadable)) float KC(uint a); __attribute__((overloadable)) float2 KD(uint2 a); __attribute__((overloadable)) float3 KE(uint3 a); __attribute__((overloadable)) float4 KF(uint4 a); __attribute__((overloadable)) float8 KG(uint8 a); __attribute__((overloadable)) float16 KH(uint16 a); __attribute__((overloadable)) double KI(uint a); __attribute__((overloadable)) double2 KJ(uint2 a); __attribute__((overloadable)) double3 KK(uint3 a); __attribute__((overloadable)) double4 KL(uint4 a); __attribute__((overloadable)) double8 KM(uint8 a); __attribute__((overloadable)) double16 KN(uint16 a); __attribute__((overloadable)) char IG(short a); __attribute__((overloadable)) char2 IH(short2 a); __attribute__((overloadable)) char3 II(short3 a); __attribute__((overloadable)) char4 IJ(short4 a); __attribute__((overloadable)) char8 IK(short8 a); __attribute__((overloadable)) char16 IL(short16 a); __attribute__((overloadable)) uchar IM(short a); __attribute__((overloadable)) uchar2 IN(short2 a); __attribute__((overloadable)) uchar3 IO(short3 a); __attribute__((overloadable)) uchar4 IP(short4 a); __attribute__((overloadable)) uchar8 IQ(short8 a); __attribute__((overloadable)) uchar16 IR(short16 a); __attribute__((overloadable)) int IS(short a); __attribute__((overloadable)) int2 IT(short2 a); __attribute__((overloadable)) int3 IU(short3 a); __attribute__((overloadable)) int4 IV(short4 a); __attribute__((overloadable)) int8 IW(short8 a); __attribute__((overloadable)) int16 IX(short16 a); __attribute__((overloadable)) uint IY(short a); __attribute__((overloadable)) uint2 IZ(short2 a); __attribute__((overloadable)) uint3 JA(short3 a); __attribute__((overloadable)) uint4 JB(short4 a); __attribute__((overloadable)) uint8 JC(short8 a); __attribute__((overloadable)) uint16 JD(short16 a); __attribute__((overloadable)) short JE(short a); __attribute__((overloadable)) short2 JF(short2 a); __attribute__((overloadable)) short3 JG(short3 a); __attribute__((overloadable)) short4 JH(short4 a); __attribute__((overloadable)) short8 JI(short8 a); __attribute__((overloadable)) short16 JJ(short16 a); __attribute__((overloadable)) ushort JK(short a); __attribute__((overloadable)) ushort2 JL(short2 a); __attribute__((overloadable)) ushort3 JM(short3 a); __attribute__((overloadable)) ushort4 JN(short4 a); __attribute__((overloadable)) ushort8 JO(short8 a); __attribute__((overloadable)) ushort16 JP(short16 a); __attribute__((overloadable)) long JQ(short a); __attribute__((overloadable)) long2 JR(short2 a); __attribute__((overloadable)) long3 JS(short3 a); __attribute__((overloadable)) long4 JT(short4 a); __attribute__((overloadable)) long8 JU(short8 a); __attribute__((overloadable)) long16 JV(short16 a); __attribute__((overloadable)) ulong JW(short a); __attribute__((overloadable)) ulong2 JX(short2 a); __attribute__((overloadable)) ulong3 JY(short3 a); __attribute__((overloadable)) ulong4 JZ(short4 a); __attribute__((overloadable)) ulong8 KA(short8 a); __attribute__((overloadable)) ulong16 KB(short16 a); __attribute__((overloadable)) float KC(short a); __attribute__((overloadable)) float2 KD(short2 a); __attribute__((overloadable)) float3 KE(short3 a); __attribute__((overloadable)) float4 KF(short4 a); __attribute__((overloadable)) float8 KG(short8 a); __attribute__((overloadable)) float16 KH(short16 a); __attribute__((overloadable)) double KI(short a); __attribute__((overloadable)) double2 KJ(short2 a); __attribute__((overloadable)) double3 KK(short3 a); __attribute__((overloadable)) double4 KL(short4 a); __attribute__((overloadable)) double8 KM(short8 a); __attribute__((overloadable)) double16 KN(short16 a); __attribute__((overloadable)) char IG(ushort a); __attribute__((overloadable)) char2 IH(ushort2 a); __attribute__((overloadable)) char3 II(ushort3 a); __attribute__((overloadable)) char4 IJ(ushort4 a); __attribute__((overloadable)) char8 IK(ushort8 a); __attribute__((overloadable)) char16 IL(ushort16 a); __attribute__((overloadable)) uchar IM(ushort a); __attribute__((overloadable)) uchar2 IN(ushort2 a); __attribute__((overloadable)) uchar3 IO(ushort3 a); __attribute__((overloadable)) uchar4 IP(ushort4 a); __attribute__((overloadable)) uchar8 IQ(ushort8 a); __attribute__((overloadable)) uchar16 IR(ushort16 a); __attribute__((overloadable)) int IS(ushort a); __attribute__((overloadable)) int2 IT(ushort2 a); __attribute__((overloadable)) int3 IU(ushort3 a); __attribute__((overloadable)) int4 IV(ushort4 a); __attribute__((overloadable)) int8 IW(ushort8 a); __attribute__((overloadable)) int16 IX(ushort16 a); __attribute__((overloadable)) uint IY(ushort a); __attribute__((overloadable)) uint2 IZ(ushort2 a); __attribute__((overloadable)) uint3 JA(ushort3 a); __attribute__((overloadable)) uint4 JB(ushort4 a); __attribute__((overloadable)) uint8 JC(ushort8 a); __attribute__((overloadable)) uint16 JD(ushort16 a); __attribute__((overloadable)) short JE(ushort a); __attribute__((overloadable)) short2 JF(ushort2 a); __attribute__((overloadable)) short3 JG(ushort3 a); __attribute__((overloadable)) short4 JH(ushort4 a); __attribute__((overloadable)) short8 JI(ushort8 a); __attribute__((overloadable)) short16 JJ(ushort16 a); __attribute__((overloadable)) ushort JK(ushort a); __attribute__((overloadable)) ushort2 JL(ushort2 a); __attribute__((overloadable)) ushort3 JM(ushort3 a); __attribute__((overloadable)) ushort4 JN(ushort4 a); __attribute__((overloadable)) ushort8 JO(ushort8 a); __attribute__((overloadable)) ushort16 JP(ushort16 a); __attribute__((overloadable)) long JQ(ushort a); __attribute__((overloadable)) long2 JR(ushort2 a); __attribute__((overloadable)) long3 JS(ushort3 a); __attribute__((overloadable)) long4 JT(ushort4 a); __attribute__((overloadable)) long8 JU(ushort8 a); __attribute__((overloadable)) long16 JV(ushort16 a); __attribute__((overloadable)) ulong JW(ushort a); __attribute__((overloadable)) ulong2 JX(ushort2 a); __attribute__((overloadable)) ulong3 JY(ushort3 a); __attribute__((overloadable)) ulong4 JZ(ushort4 a); __attribute__((overloadable)) ulong8 KA(ushort8 a); __attribute__((overloadable)) ulong16 KB(ushort16 a); __attribute__((overloadable)) float KC(ushort a); __attribute__((overloadable)) float2 KD(ushort2 a); __attribute__((overloadable)) float3 KE(ushort3 a); __attribute__((overloadable)) float4 KF(ushort4 a); __attribute__((overloadable)) float8 KG(ushort8 a); __attribute__((overloadable)) float16 KH(ushort16 a); __attribute__((overloadable)) double KI(ushort a); __attribute__((overloadable)) double2 KJ(ushort2 a); __attribute__((overloadable)) double3 KK(ushort3 a); __attribute__((overloadable)) double4 KL(ushort4 a); __attribute__((overloadable)) double8 KM(ushort8 a); __attribute__((overloadable)) double16 KN(ushort16 a); __attribute__((overloadable)) char IG(long a); __attribute__((overloadable)) char2 IH(long2 a); __attribute__((overloadable)) char3 II(long3 a); __attribute__((overloadable)) char4 IJ(long4 a); __attribute__((overloadable)) char8 IK(long8 a); __attribute__((overloadable)) char16 IL(long16 a); __attribute__((overloadable)) uchar IM(long a); __attribute__((overloadable)) uchar2 IN(long2 a); __attribute__((overloadable)) uchar3 IO(long3 a); __attribute__((overloadable)) uchar4 IP(long4 a); __attribute__((overloadable)) uchar8 IQ(long8 a); __attribute__((overloadable)) uchar16 IR(long16 a); __attribute__((overloadable)) int IS(long a); __attribute__((overloadable)) int2 IT(long2 a); __attribute__((overloadable)) int3 IU(long3 a); __attribute__((overloadable)) int4 IV(long4 a); __attribute__((overloadable)) int8 IW(long8 a); __attribute__((overloadable)) int16 IX(long16 a); __attribute__((overloadable)) uint IY(long a); __attribute__((overloadable)) uint2 IZ(long2 a); __attribute__((overloadable)) uint3 JA(long3 a); __attribute__((overloadable)) uint4 JB(long4 a); __attribute__((overloadable)) uint8 JC(long8 a); __attribute__((overloadable)) uint16 JD(long16 a); __attribute__((overloadable)) short JE(long a); __attribute__((overloadable)) short2 JF(long2 a); __attribute__((overloadable)) short3 JG(long3 a); __attribute__((overloadable)) short4 JH(long4 a); __attribute__((overloadable)) short8 JI(long8 a); __attribute__((overloadable)) short16 JJ(long16 a); __attribute__((overloadable)) ushort JK(long a); __attribute__((overloadable)) ushort2 JL(long2 a); __attribute__((overloadable)) ushort3 JM(long3 a); __attribute__((overloadable)) ushort4 JN(long4 a); __attribute__((overloadable)) ushort8 JO(long8 a); __attribute__((overloadable)) ushort16 JP(long16 a); __attribute__((overloadable)) long JQ(long a); __attribute__((overloadable)) long2 JR(long2 a); __attribute__((overloadable)) long3 JS(long3 a); __attribute__((overloadable)) long4 JT(long4 a); __attribute__((overloadable)) long8 JU(long8 a); __attribute__((overloadable)) long16 JV(long16 a); __attribute__((overloadable)) ulong JW(long a); __attribute__((overloadable)) ulong2 JX(long2 a); __attribute__((overloadable)) ulong3 JY(long3 a); __attribute__((overloadable)) ulong4 JZ(long4 a); __attribute__((overloadable)) ulong8 KA(long8 a); __attribute__((overloadable)) ulong16 KB(long16 a); __attribute__((overloadable)) float KC(long a); __attribute__((overloadable)) float2 KD(long2 a); __attribute__((overloadable)) float3 KE(long3 a); __attribute__((overloadable)) float4 KF(long4 a); __attribute__((overloadable)) float8 KG(long8 a); __attribute__((overloadable)) float16 KH(long16 a); __attribute__((overloadable)) double KI(long a); __attribute__((overloadable)) double2 KJ(long2 a); __attribute__((overloadable)) double3 KK(long3 a); __attribute__((overloadable)) double4 KL(long4 a); __attribute__((overloadable)) double8 KM(long8 a); __attribute__((overloadable)) double16 KN(long16 a); __attribute__((overloadable)) char IG(ulong a); __attribute__((overloadable)) char2 IH(ulong2 a); __attribute__((overloadable)) char3 II(ulong3 a); __attribute__((overloadable)) char4 IJ(ulong4 a); __attribute__((overloadable)) char8 IK(ulong8 a); __attribute__((overloadable)) char16 IL(ulong16 a); __attribute__((overloadable)) uchar IM(ulong a); __attribute__((overloadable)) uchar2 IN(ulong2 a); __attribute__((overloadable)) uchar3 IO(ulong3 a); __attribute__((overloadable)) uchar4 IP(ulong4 a); __attribute__((overloadable)) uchar8 IQ(ulong8 a); __attribute__((overloadable)) uchar16 IR(ulong16 a); __attribute__((overloadable)) int IS(ulong a); __attribute__((overloadable)) int2 IT(ulong2 a); __attribute__((overloadable)) int3 IU(ulong3 a); __attribute__((overloadable)) int4 IV(ulong4 a); __attribute__((overloadable)) int8 IW(ulong8 a); __attribute__((overloadable)) int16 IX(ulong16 a); __attribute__((overloadable)) uint IY(ulong a); __attribute__((overloadable)) uint2 IZ(ulong2 a); __attribute__((overloadable)) uint3 JA(ulong3 a); __attribute__((overloadable)) uint4 JB(ulong4 a); __attribute__((overloadable)) uint8 JC(ulong8 a); __attribute__((overloadable)) uint16 JD(ulong16 a); __attribute__((overloadable)) short JE(ulong a); __attribute__((overloadable)) short2 JF(ulong2 a); __attribute__((overloadable)) short3 JG(ulong3 a); __attribute__((overloadable)) short4 JH(ulong4 a); __attribute__((overloadable)) short8 JI(ulong8 a); __attribute__((overloadable)) short16 JJ(ulong16 a); __attribute__((overloadable)) ushort JK(ulong a); __attribute__((overloadable)) ushort2 JL(ulong2 a); __attribute__((overloadable)) ushort3 JM(ulong3 a); __attribute__((overloadable)) ushort4 JN(ulong4 a); __attribute__((overloadable)) ushort8 JO(ulong8 a); __attribute__((overloadable)) ushort16 JP(ulong16 a); __attribute__((overloadable)) long JQ(ulong a); __attribute__((overloadable)) long2 JR(ulong2 a); __attribute__((overloadable)) long3 JS(ulong3 a); __attribute__((overloadable)) long4 JT(ulong4 a); __attribute__((overloadable)) long8 JU(ulong8 a); __attribute__((overloadable)) long16 JV(ulong16 a); __attribute__((overloadable)) ulong JW(ulong a); __attribute__((overloadable)) ulong2 JX(ulong2 a); __attribute__((overloadable)) ulong3 JY(ulong3 a); __attribute__((overloadable)) ulong4 JZ(ulong4 a); __attribute__((overloadable)) ulong8 KA(ulong8 a); __attribute__((overloadable)) ulong16 KB(ulong16 a); __attribute__((overloadable)) float KC(ulong a); __attribute__((overloadable)) float2 KD(ulong2 a); __attribute__((overloadable)) float3 KE(ulong3 a); __attribute__((overloadable)) float4 KF(ulong4 a); __attribute__((overloadable)) float8 KG(ulong8 a); __attribute__((overloadable)) float16 KH(ulong16 a); __attribute__((overloadable)) double KI(ulong a); __attribute__((overloadable)) double2 KJ(ulong2 a); __attribute__((overloadable)) double3 KK(ulong3 a); __attribute__((overloadable)) double4 KL(ulong4 a); __attribute__((overloadable)) double8 KM(ulong8 a); __attribute__((overloadable)) double16 KN(ulong16 a); __attribute__((overloadable)) char IG(float a); __attribute__((overloadable)) char2 IH(float2 a); __attribute__((overloadable)) char3 II(float3 a); __attribute__((overloadable)) char4 IJ(float4 a); __attribute__((overloadable)) char8 IK(float8 a); __attribute__((overloadable)) char16 IL(float16 a); __attribute__((overloadable)) uchar IM(float a); __attribute__((overloadable)) uchar2 IN(float2 a); __attribute__((overloadable)) uchar3 IO(float3 a); __attribute__((overloadable)) uchar4 IP(float4 a); __attribute__((overloadable)) uchar8 IQ(float8 a); __attribute__((overloadable)) uchar16 IR(float16 a); __attribute__((overloadable)) int IS(float a); __attribute__((overloadable)) int2 IT(float2 a); __attribute__((overloadable)) int3 IU(float3 a); __attribute__((overloadable)) int4 IV(float4 a); __attribute__((overloadable)) int8 IW(float8 a); __attribute__((overloadable)) int16 IX(float16 a); __attribute__((overloadable)) uint IY(float a); __attribute__((overloadable)) uint2 IZ(float2 a); __attribute__((overloadable)) uint3 JA(float3 a); __attribute__((overloadable)) uint4 JB(float4 a); __attribute__((overloadable)) uint8 JC(float8 a); __attribute__((overloadable)) uint16 JD(float16 a); __attribute__((overloadable)) short JE(float a); __attribute__((overloadable)) short2 JF(float2 a); __attribute__((overloadable)) short3 JG(float3 a); __attribute__((overloadable)) short4 JH(float4 a); __attribute__((overloadable)) short8 JI(float8 a); __attribute__((overloadable)) short16 JJ(float16 a); __attribute__((overloadable)) ushort JK(float a); __attribute__((overloadable)) ushort2 JL(float2 a); __attribute__((overloadable)) ushort3 JM(float3 a); __attribute__((overloadable)) ushort4 JN(float4 a); __attribute__((overloadable)) ushort8 JO(float8 a); __attribute__((overloadable)) ushort16 JP(float16 a); __attribute__((overloadable)) long JQ(float a); __attribute__((overloadable)) long2 JR(float2 a); __attribute__((overloadable)) long3 JS(float3 a); __attribute__((overloadable)) long4 JT(float4 a); __attribute__((overloadable)) long8 JU(float8 a); __attribute__((overloadable)) long16 JV(float16 a); __attribute__((overloadable)) ulong JW(float a); __attribute__((overloadable)) ulong2 JX(float2 a); __attribute__((overloadable)) ulong3 JY(float3 a); __attribute__((overloadable)) ulong4 JZ(float4 a); __attribute__((overloadable)) ulong8 KA(float8 a); __attribute__((overloadable)) ulong16 KB(float16 a); __attribute__((overloadable)) float KC(float a); __attribute__((overloadable)) float2 KD(float2 a); __attribute__((overloadable)) float3 KE(float3 a); __attribute__((overloadable)) float4 KF(float4 a); __attribute__((overloadable)) float8 KG(float8 a); __attribute__((overloadable)) float16 KH(float16 a); __attribute__((overloadable)) double KI(float a); __attribute__((overloadable)) double2 KJ(float2 a); __attribute__((overloadable)) double3 KK(float3 a); __attribute__((overloadable)) double4 KL(float4 a); __attribute__((overloadable)) double8 KM(float8 a); __attribute__((overloadable)) double16 KN(float16 a); __attribute__((overloadable)) char IG(double a); __attribute__((overloadable)) char2 IH(double2 a); __attribute__((overloadable)) char3 II(double3 a); __attribute__((overloadable)) char4 IJ(double4 a); __attribute__((overloadable)) char8 IK(double8 a); __attribute__((overloadable)) char16 IL(double16 a); __attribute__((overloadable)) uchar IM(double a); __attribute__((overloadable)) uchar2 IN(double2 a); __attribute__((overloadable)) uchar3 IO(double3 a); __attribute__((overloadable)) uchar4 IP(double4 a); __attribute__((overloadable)) uchar8 IQ(double8 a); __attribute__((overloadable)) uchar16 IR(double16 a); __attribute__((overloadable)) int IS(double a); __attribute__((overloadable)) int2 IT(double2 a); __attribute__((overloadable)) int3 IU(double3 a); __attribute__((overloadable)) int4 IV(double4 a); __attribute__((overloadable)) int8 IW(double8 a); __attribute__((overloadable)) int16 IX(double16 a); __attribute__((overloadable)) uint IY(double a); __attribute__((overloadable)) uint2 IZ(double2 a); __attribute__((overloadable)) uint3 JA(double3 a); __attribute__((overloadable)) uint4 JB(double4 a); __attribute__((overloadable)) uint8 JC(double8 a); __attribute__((overloadable)) uint16 JD(double16 a); __attribute__((overloadable)) short JE(double a); __attribute__((overloadable)) short2 JF(double2 a); __attribute__((overloadable)) short3 JG(double3 a); __attribute__((overloadable)) short4 JH(double4 a); __attribute__((overloadable)) short8 JI(double8 a); __attribute__((overloadable)) short16 JJ(double16 a); __attribute__((overloadable)) ushort JK(double a); __attribute__((overloadable)) ushort2 JL(double2 a); __attribute__((overloadable)) ushort3 JM(double3 a); __attribute__((overloadable)) ushort4 JN(double4 a); __attribute__((overloadable)) ushort8 JO(double8 a); __attribute__((overloadable)) ushort16 JP(double16 a); __attribute__((overloadable)) long JQ(double a); __attribute__((overloadable)) long2 JR(double2 a); __attribute__((overloadable)) long3 JS(double3 a); __attribute__((overloadable)) long4 JT(double4 a); __attribute__((overloadable)) long8 JU(double8 a); __attribute__((overloadable)) long16 JV(double16 a); __attribute__((overloadable)) ulong JW(double a); __attribute__((overloadable)) ulong2 JX(double2 a); __attribute__((overloadable)) ulong3 JY(double3 a); __attribute__((overloadable)) ulong4 JZ(double4 a); __attribute__((overloadable)) ulong8 KA(double8 a); __attribute__((overloadable)) ulong16 KB(double16 a); __attribute__((overloadable)) float KC(double a); __attribute__((overloadable)) float2 KD(double2 a); __attribute__((overloadable)) float3 KE(double3 a); __attribute__((overloadable)) float4 KF(double4 a); __attribute__((overloadable)) float8 KG(double8 a); __attribute__((overloadable)) float16 KH(double16 a); __attribute__((overloadable)) double KI(double a); __attribute__((overloadable)) double2 KJ(double2 a); __attribute__((overloadable)) double3 KK(double3 a); __attribute__((overloadable)) double4 KL(double4 a); __attribute__((overloadable)) double8 KM(double8 a); __attribute__((overloadable)) double16 KN(double16 a); __attribute__((overloadable)) char KO(char a); __attribute__((overloadable)) char2 KP(char2 a); __attribute__((overloadable)) char3 KQ(char3 a); __attribute__((overloadable)) char4 KR(char4 a); __attribute__((overloadable)) char8 KS(char8 a); __attribute__((overloadable)) char16 KT(char16 a); __attribute__((overloadable)) uchar KU(char a); __attribute__((overloadable)) uchar2 KV(char2 a); __attribute__((overloadable)) uchar3 KW(char3 a); __attribute__((overloadable)) uchar4 KX(char4 a); __attribute__((overloadable)) uchar8 KY(char8 a); __attribute__((overloadable)) uchar16 KZ(char16 a); __attribute__((overloadable)) int LA(char a); __attribute__((overloadable)) int2 LB(char2 a); __attribute__((overloadable)) int3 LC(char3 a); __attribute__((overloadable)) int4 LD(char4 a); __attribute__((overloadable)) int8 LE(char8 a); __attribute__((overloadable)) int16 LF(char16 a); __attribute__((overloadable)) uint LG(char a); __attribute__((overloadable)) uint2 LH(char2 a); __attribute__((overloadable)) uint3 LI(char3 a); __attribute__((overloadable)) uint4 LJ(char4 a); __attribute__((overloadable)) uint8 LK(char8 a); __attribute__((overloadable)) uint16 LL(char16 a); __attribute__((overloadable)) short LM(char a); __attribute__((overloadable)) short2 LN(char2 a); __attribute__((overloadable)) short3 LO(char3 a); __attribute__((overloadable)) short4 LP(char4 a); __attribute__((overloadable)) short8 LQ(char8 a); __attribute__((overloadable)) short16 LR(char16 a); __attribute__((overloadable)) ushort LS(char a); __attribute__((overloadable)) ushort2 LT(char2 a); __attribute__((overloadable)) ushort3 LU(char3 a); __attribute__((overloadable)) ushort4 LV(char4 a); __attribute__((overloadable)) ushort8 LW(char8 a); __attribute__((overloadable)) ushort16 LX(char16 a); __attribute__((overloadable)) long LY(char a); __attribute__((overloadable)) long2 LZ(char2 a); __attribute__((overloadable)) long3 MA(char3 a); __attribute__((overloadable)) long4 MB(char4 a); __attribute__((overloadable)) long8 MC(char8 a); __attribute__((overloadable)) long16 MD(char16 a); __attribute__((overloadable)) ulong ME(char a); __attribute__((overloadable)) ulong2 MF(char2 a); __attribute__((overloadable)) ulong3 MG(char3 a); __attribute__((overloadable)) ulong4 MH(char4 a); __attribute__((overloadable)) ulong8 MI(char8 a); __attribute__((overloadable)) ulong16 MJ(char16 a); __attribute__((overloadable)) float MK(char a); __attribute__((overloadable)) float2 ML(char2 a); __attribute__((overloadable)) float3 MM(char3 a); __attribute__((overloadable)) float4 MN(char4 a); __attribute__((overloadable)) float8 MO(char8 a); __attribute__((overloadable)) float16 MP(char16 a); __attribute__((overloadable)) double MQ(char a); __attribute__((overloadable)) double2 MR(char2 a); __attribute__((overloadable)) double3 MS(char3 a); __attribute__((overloadable)) double4 MT(char4 a); __attribute__((overloadable)) double8 MU(char8 a); __attribute__((overloadable)) double16 MV(char16 a); __attribute__((overloadable)) char KO(uchar a); __attribute__((overloadable)) char2 KP(uchar2 a); __attribute__((overloadable)) char3 KQ(uchar3 a); __attribute__((overloadable)) char4 KR(uchar4 a); __attribute__((overloadable)) char8 KS(uchar8 a); __attribute__((overloadable)) char16 KT(uchar16 a); __attribute__((overloadable)) uchar KU(uchar a); __attribute__((overloadable)) uchar2 KV(uchar2 a); __attribute__((overloadable)) uchar3 KW(uchar3 a); __attribute__((overloadable)) uchar4 KX(uchar4 a); __attribute__((overloadable)) uchar8 KY(uchar8 a); __attribute__((overloadable)) uchar16 KZ(uchar16 a); __attribute__((overloadable)) int LA(uchar a); __attribute__((overloadable)) int2 LB(uchar2 a); __attribute__((overloadable)) int3 LC(uchar3 a); __attribute__((overloadable)) int4 LD(uchar4 a); __attribute__((overloadable)) int8 LE(uchar8 a); __attribute__((overloadable)) int16 LF(uchar16 a); __attribute__((overloadable)) uint LG(uchar a); __attribute__((overloadable)) uint2 LH(uchar2 a); __attribute__((overloadable)) uint3 LI(uchar3 a); __attribute__((overloadable)) uint4 LJ(uchar4 a); __attribute__((overloadable)) uint8 LK(uchar8 a); __attribute__((overloadable)) uint16 LL(uchar16 a); __attribute__((overloadable)) short LM(uchar a); __attribute__((overloadable)) short2 LN(uchar2 a); __attribute__((overloadable)) short3 LO(uchar3 a); __attribute__((overloadable)) short4 LP(uchar4 a); __attribute__((overloadable)) short8 LQ(uchar8 a); __attribute__((overloadable)) short16 LR(uchar16 a); __attribute__((overloadable)) ushort LS(uchar a); __attribute__((overloadable)) ushort2 LT(uchar2 a); __attribute__((overloadable)) ushort3 LU(uchar3 a); __attribute__((overloadable)) ushort4 LV(uchar4 a); __attribute__((overloadable)) ushort8 LW(uchar8 a); __attribute__((overloadable)) ushort16 LX(uchar16 a); __attribute__((overloadable)) long LY(uchar a); __attribute__((overloadable)) long2 LZ(uchar2 a); __attribute__((overloadable)) long3 MA(uchar3 a); __attribute__((overloadable)) long4 MB(uchar4 a); __attribute__((overloadable)) long8 MC(uchar8 a); __attribute__((overloadable)) long16 MD(uchar16 a); __attribute__((overloadable)) ulong ME(uchar a); __attribute__((overloadable)) ulong2 MF(uchar2 a); __attribute__((overloadable)) ulong3 MG(uchar3 a); __attribute__((overloadable)) ulong4 MH(uchar4 a); __attribute__((overloadable)) ulong8 MI(uchar8 a); __attribute__((overloadable)) ulong16 MJ(uchar16 a); __attribute__((overloadable)) float MK(uchar a); __attribute__((overloadable)) float2 ML(uchar2 a); __attribute__((overloadable)) float3 MM(uchar3 a); __attribute__((overloadable)) float4 MN(uchar4 a); __attribute__((overloadable)) float8 MO(uchar8 a); __attribute__((overloadable)) float16 MP(uchar16 a); __attribute__((overloadable)) double MQ(uchar a); __attribute__((overloadable)) double2 MR(uchar2 a); __attribute__((overloadable)) double3 MS(uchar3 a); __attribute__((overloadable)) double4 MT(uchar4 a); __attribute__((overloadable)) double8 MU(uchar8 a); __attribute__((overloadable)) double16 MV(uchar16 a); __attribute__((overloadable)) char KO(int a); __attribute__((overloadable)) char2 KP(int2 a); __attribute__((overloadable)) char3 KQ(int3 a); __attribute__((overloadable)) char4 KR(int4 a); __attribute__((overloadable)) char8 KS(int8 a); __attribute__((overloadable)) char16 KT(int16 a); __attribute__((overloadable)) uchar KU(int a); __attribute__((overloadable)) uchar2 KV(int2 a); __attribute__((overloadable)) uchar3 KW(int3 a); __attribute__((overloadable)) uchar4 KX(int4 a); __attribute__((overloadable)) uchar8 KY(int8 a); __attribute__((overloadable)) uchar16 KZ(int16 a); __attribute__((overloadable)) int LA(int a); __attribute__((overloadable)) int2 LB(int2 a); __attribute__((overloadable)) int3 LC(int3 a); __attribute__((overloadable)) int4 LD(int4 a); __attribute__((overloadable)) int8 LE(int8 a); __attribute__((overloadable)) int16 LF(int16 a); __attribute__((overloadable)) uint LG(int a); __attribute__((overloadable)) uint2 LH(int2 a); __attribute__((overloadable)) uint3 LI(int3 a); __attribute__((overloadable)) uint4 LJ(int4 a); __attribute__((overloadable)) uint8 LK(int8 a); __attribute__((overloadable)) uint16 LL(int16 a); __attribute__((overloadable)) short LM(int a); __attribute__((overloadable)) short2 LN(int2 a); __attribute__((overloadable)) short3 LO(int3 a); __attribute__((overloadable)) short4 LP(int4 a); __attribute__((overloadable)) short8 LQ(int8 a); __attribute__((overloadable)) short16 LR(int16 a); __attribute__((overloadable)) ushort LS(int a); __attribute__((overloadable)) ushort2 LT(int2 a); __attribute__((overloadable)) ushort3 LU(int3 a); __attribute__((overloadable)) ushort4 LV(int4 a); __attribute__((overloadable)) ushort8 LW(int8 a); __attribute__((overloadable)) ushort16 LX(int16 a); __attribute__((overloadable)) long LY(int a); __attribute__((overloadable)) long2 LZ(int2 a); __attribute__((overloadable)) long3 MA(int3 a); __attribute__((overloadable)) long4 MB(int4 a); __attribute__((overloadable)) long8 MC(int8 a); __attribute__((overloadable)) long16 MD(int16 a); __attribute__((overloadable)) ulong ME(int a); __attribute__((overloadable)) ulong2 MF(int2 a); __attribute__((overloadable)) ulong3 MG(int3 a); __attribute__((overloadable)) ulong4 MH(int4 a); __attribute__((overloadable)) ulong8 MI(int8 a); __attribute__((overloadable)) ulong16 MJ(int16 a); __attribute__((overloadable)) float MK(int a); __attribute__((overloadable)) float2 ML(int2 a); __attribute__((overloadable)) float3 MM(int3 a); __attribute__((overloadable)) float4 MN(int4 a); __attribute__((overloadable)) float8 MO(int8 a); __attribute__((overloadable)) float16 MP(int16 a); __attribute__((overloadable)) double MQ(int a); __attribute__((overloadable)) double2 MR(int2 a); __attribute__((overloadable)) double3 MS(int3 a); __attribute__((overloadable)) double4 MT(int4 a); __attribute__((overloadable)) double8 MU(int8 a); __attribute__((overloadable)) double16 MV(int16 a); __attribute__((overloadable)) char KO(uint a); __attribute__((overloadable)) char2 KP(uint2 a); __attribute__((overloadable)) char3 KQ(uint3 a); __attribute__((overloadable)) char4 KR(uint4 a); __attribute__((overloadable)) char8 KS(uint8 a); __attribute__((overloadable)) char16 KT(uint16 a); __attribute__((overloadable)) uchar KU(uint a); __attribute__((overloadable)) uchar2 KV(uint2 a); __attribute__((overloadable)) uchar3 KW(uint3 a); __attribute__((overloadable)) uchar4 KX(uint4 a); __attribute__((overloadable)) uchar8 KY(uint8 a); __attribute__((overloadable)) uchar16 KZ(uint16 a); __attribute__((overloadable)) int LA(uint a); __attribute__((overloadable)) int2 LB(uint2 a); __attribute__((overloadable)) int3 LC(uint3 a); __attribute__((overloadable)) int4 LD(uint4 a); __attribute__((overloadable)) int8 LE(uint8 a); __attribute__((overloadable)) int16 LF(uint16 a); __attribute__((overloadable)) uint LG(uint a); __attribute__((overloadable)) uint2 LH(uint2 a); __attribute__((overloadable)) uint3 LI(uint3 a); __attribute__((overloadable)) uint4 LJ(uint4 a); __attribute__((overloadable)) uint8 LK(uint8 a); __attribute__((overloadable)) uint16 LL(uint16 a); __attribute__((overloadable)) short LM(uint a); __attribute__((overloadable)) short2 LN(uint2 a); __attribute__((overloadable)) short3 LO(uint3 a); __attribute__((overloadable)) short4 LP(uint4 a); __attribute__((overloadable)) short8 LQ(uint8 a); __attribute__((overloadable)) short16 LR(uint16 a); __attribute__((overloadable)) ushort LS(uint a); __attribute__((overloadable)) ushort2 LT(uint2 a); __attribute__((overloadable)) ushort3 LU(uint3 a); __attribute__((overloadable)) ushort4 LV(uint4 a); __attribute__((overloadable)) ushort8 LW(uint8 a); __attribute__((overloadable)) ushort16 LX(uint16 a); __attribute__((overloadable)) long LY(uint a); __attribute__((overloadable)) long2 LZ(uint2 a); __attribute__((overloadable)) long3 MA(uint3 a); __attribute__((overloadable)) long4 MB(uint4 a); __attribute__((overloadable)) long8 MC(uint8 a); __attribute__((overloadable)) long16 MD(uint16 a); __attribute__((overloadable)) ulong ME(uint a); __attribute__((overloadable)) ulong2 MF(uint2 a); __attribute__((overloadable)) ulong3 MG(uint3 a); __attribute__((overloadable)) ulong4 MH(uint4 a); __attribute__((overloadable)) ulong8 MI(uint8 a); __attribute__((overloadable)) ulong16 MJ(uint16 a); __attribute__((overloadable)) float MK(uint a); __attribute__((overloadable)) float2 ML(uint2 a); __attribute__((overloadable)) float3 MM(uint3 a); __attribute__((overloadable)) float4 MN(uint4 a); __attribute__((overloadable)) float8 MO(uint8 a); __attribute__((overloadable)) float16 MP(uint16 a); __attribute__((overloadable)) double MQ(uint a); __attribute__((overloadable)) double2 MR(uint2 a); __attribute__((overloadable)) double3 MS(uint3 a); __attribute__((overloadable)) double4 MT(uint4 a); __attribute__((overloadable)) double8 MU(uint8 a); __attribute__((overloadable)) double16 MV(uint16 a); __attribute__((overloadable)) char KO(short a); __attribute__((overloadable)) char2 KP(short2 a); __attribute__((overloadable)) char3 KQ(short3 a); __attribute__((overloadable)) char4 KR(short4 a); __attribute__((overloadable)) char8 KS(short8 a); __attribute__((overloadable)) char16 KT(short16 a); __attribute__((overloadable)) uchar KU(short a); __attribute__((overloadable)) uchar2 KV(short2 a); __attribute__((overloadable)) uchar3 KW(short3 a); __attribute__((overloadable)) uchar4 KX(short4 a); __attribute__((overloadable)) uchar8 KY(short8 a); __attribute__((overloadable)) uchar16 KZ(short16 a); __attribute__((overloadable)) int LA(short a); __attribute__((overloadable)) int2 LB(short2 a); __attribute__((overloadable)) int3 LC(short3 a); __attribute__((overloadable)) int4 LD(short4 a); __attribute__((overloadable)) int8 LE(short8 a); __attribute__((overloadable)) int16 LF(short16 a); __attribute__((overloadable)) uint LG(short a); __attribute__((overloadable)) uint2 LH(short2 a); __attribute__((overloadable)) uint3 LI(short3 a); __attribute__((overloadable)) uint4 LJ(short4 a); __attribute__((overloadable)) uint8 LK(short8 a); __attribute__((overloadable)) uint16 LL(short16 a); __attribute__((overloadable)) short LM(short a); __attribute__((overloadable)) short2 LN(short2 a); __attribute__((overloadable)) short3 LO(short3 a); __attribute__((overloadable)) short4 LP(short4 a); __attribute__((overloadable)) short8 LQ(short8 a); __attribute__((overloadable)) short16 LR(short16 a); __attribute__((overloadable)) ushort LS(short a); __attribute__((overloadable)) ushort2 LT(short2 a); __attribute__((overloadable)) ushort3 LU(short3 a); __attribute__((overloadable)) ushort4 LV(short4 a); __attribute__((overloadable)) ushort8 LW(short8 a); __attribute__((overloadable)) ushort16 LX(short16 a); __attribute__((overloadable)) long LY(short a); __attribute__((overloadable)) long2 LZ(short2 a); __attribute__((overloadable)) long3 MA(short3 a); __attribute__((overloadable)) long4 MB(short4 a); __attribute__((overloadable)) long8 MC(short8 a); __attribute__((overloadable)) long16 MD(short16 a); __attribute__((overloadable)) ulong ME(short a); __attribute__((overloadable)) ulong2 MF(short2 a); __attribute__((overloadable)) ulong3 MG(short3 a); __attribute__((overloadable)) ulong4 MH(short4 a); __attribute__((overloadable)) ulong8 MI(short8 a); __attribute__((overloadable)) ulong16 MJ(short16 a); __attribute__((overloadable)) float MK(short a); __attribute__((overloadable)) float2 ML(short2 a); __attribute__((overloadable)) float3 MM(short3 a); __attribute__((overloadable)) float4 MN(short4 a); __attribute__((overloadable)) float8 MO(short8 a); __attribute__((overloadable)) float16 MP(short16 a); __attribute__((overloadable)) double MQ(short a); __attribute__((overloadable)) double2 MR(short2 a); __attribute__((overloadable)) double3 MS(short3 a); __attribute__((overloadable)) double4 MT(short4 a); __attribute__((overloadable)) double8 MU(short8 a); __attribute__((overloadable)) double16 MV(short16 a); __attribute__((overloadable)) char KO(ushort a); __attribute__((overloadable)) char2 KP(ushort2 a); __attribute__((overloadable)) char3 KQ(ushort3 a); __attribute__((overloadable)) char4 KR(ushort4 a); __attribute__((overloadable)) char8 KS(ushort8 a); __attribute__((overloadable)) char16 KT(ushort16 a); __attribute__((overloadable)) uchar KU(ushort a); __attribute__((overloadable)) uchar2 KV(ushort2 a); __attribute__((overloadable)) uchar3 KW(ushort3 a); __attribute__((overloadable)) uchar4 KX(ushort4 a); __attribute__((overloadable)) uchar8 KY(ushort8 a); __attribute__((overloadable)) uchar16 KZ(ushort16 a); __attribute__((overloadable)) int LA(ushort a); __attribute__((overloadable)) int2 LB(ushort2 a); __attribute__((overloadable)) int3 LC(ushort3 a); __attribute__((overloadable)) int4 LD(ushort4 a); __attribute__((overloadable)) int8 LE(ushort8 a); __attribute__((overloadable)) int16 LF(ushort16 a); __attribute__((overloadable)) uint LG(ushort a); __attribute__((overloadable)) uint2 LH(ushort2 a); __attribute__((overloadable)) uint3 LI(ushort3 a); __attribute__((overloadable)) uint4 LJ(ushort4 a); __attribute__((overloadable)) uint8 LK(ushort8 a); __attribute__((overloadable)) uint16 LL(ushort16 a); __attribute__((overloadable)) short LM(ushort a); __attribute__((overloadable)) short2 LN(ushort2 a); __attribute__((overloadable)) short3 LO(ushort3 a); __attribute__((overloadable)) short4 LP(ushort4 a); __attribute__((overloadable)) short8 LQ(ushort8 a); __attribute__((overloadable)) short16 LR(ushort16 a); __attribute__((overloadable)) ushort LS(ushort a); __attribute__((overloadable)) ushort2 LT(ushort2 a); __attribute__((overloadable)) ushort3 LU(ushort3 a); __attribute__((overloadable)) ushort4 LV(ushort4 a); __attribute__((overloadable)) ushort8 LW(ushort8 a); __attribute__((overloadable)) ushort16 LX(ushort16 a); __attribute__((overloadable)) long LY(ushort a); __attribute__((overloadable)) long2 LZ(ushort2 a); __attribute__((overloadable)) long3 MA(ushort3 a); __attribute__((overloadable)) long4 MB(ushort4 a); __attribute__((overloadable)) long8 MC(ushort8 a); __attribute__((overloadable)) long16 MD(ushort16 a); __attribute__((overloadable)) ulong ME(ushort a); __attribute__((overloadable)) ulong2 MF(ushort2 a); __attribute__((overloadable)) ulong3 MG(ushort3 a); __attribute__((overloadable)) ulong4 MH(ushort4 a); __attribute__((overloadable)) ulong8 MI(ushort8 a); __attribute__((overloadable)) ulong16 MJ(ushort16 a); __attribute__((overloadable)) float MK(ushort a); __attribute__((overloadable)) float2 ML(ushort2 a); __attribute__((overloadable)) float3 MM(ushort3 a); __attribute__((overloadable)) float4 MN(ushort4 a); __attribute__((overloadable)) float8 MO(ushort8 a); __attribute__((overloadable)) float16 MP(ushort16 a); __attribute__((overloadable)) double MQ(ushort a); __attribute__((overloadable)) double2 MR(ushort2 a); __attribute__((overloadable)) double3 MS(ushort3 a); __attribute__((overloadable)) double4 MT(ushort4 a); __attribute__((overloadable)) double8 MU(ushort8 a); __attribute__((overloadable)) double16 MV(ushort16 a); __attribute__((overloadable)) char KO(long a); __attribute__((overloadable)) char2 KP(long2 a); __attribute__((overloadable)) char3 KQ(long3 a); __attribute__((overloadable)) char4 KR(long4 a); __attribute__((overloadable)) char8 KS(long8 a); __attribute__((overloadable)) char16 KT(long16 a); __attribute__((overloadable)) uchar KU(long a); __attribute__((overloadable)) uchar2 KV(long2 a); __attribute__((overloadable)) uchar3 KW(long3 a); __attribute__((overloadable)) uchar4 KX(long4 a); __attribute__((overloadable)) uchar8 KY(long8 a); __attribute__((overloadable)) uchar16 KZ(long16 a); __attribute__((overloadable)) int LA(long a); __attribute__((overloadable)) int2 LB(long2 a); __attribute__((overloadable)) int3 LC(long3 a); __attribute__((overloadable)) int4 LD(long4 a); __attribute__((overloadable)) int8 LE(long8 a); __attribute__((overloadable)) int16 LF(long16 a); __attribute__((overloadable)) uint LG(long a); __attribute__((overloadable)) uint2 LH(long2 a); __attribute__((overloadable)) uint3 LI(long3 a); __attribute__((overloadable)) uint4 LJ(long4 a); __attribute__((overloadable)) uint8 LK(long8 a); __attribute__((overloadable)) uint16 LL(long16 a); __attribute__((overloadable)) short LM(long a); __attribute__((overloadable)) short2 LN(long2 a); __attribute__((overloadable)) short3 LO(long3 a); __attribute__((overloadable)) short4 LP(long4 a); __attribute__((overloadable)) short8 LQ(long8 a); __attribute__((overloadable)) short16 LR(long16 a); __attribute__((overloadable)) ushort LS(long a); __attribute__((overloadable)) ushort2 LT(long2 a); __attribute__((overloadable)) ushort3 LU(long3 a); __attribute__((overloadable)) ushort4 LV(long4 a); __attribute__((overloadable)) ushort8 LW(long8 a); __attribute__((overloadable)) ushort16 LX(long16 a); __attribute__((overloadable)) long LY(long a); __attribute__((overloadable)) long2 LZ(long2 a); __attribute__((overloadable)) long3 MA(long3 a); __attribute__((overloadable)) long4 MB(long4 a); __attribute__((overloadable)) long8 MC(long8 a); __attribute__((overloadable)) long16 MD(long16 a); __attribute__((overloadable)) ulong ME(long a); __attribute__((overloadable)) ulong2 MF(long2 a); __attribute__((overloadable)) ulong3 MG(long3 a); __attribute__((overloadable)) ulong4 MH(long4 a); __attribute__((overloadable)) ulong8 MI(long8 a); __attribute__((overloadable)) ulong16 MJ(long16 a); __attribute__((overloadable)) float MK(long a); __attribute__((overloadable)) float2 ML(long2 a); __attribute__((overloadable)) float3 MM(long3 a); __attribute__((overloadable)) float4 MN(long4 a); __attribute__((overloadable)) float8 MO(long8 a); __attribute__((overloadable)) float16 MP(long16 a); __attribute__((overloadable)) double MQ(long a); __attribute__((overloadable)) double2 MR(long2 a); __attribute__((overloadable)) double3 MS(long3 a); __attribute__((overloadable)) double4 MT(long4 a); __attribute__((overloadable)) double8 MU(long8 a); __attribute__((overloadable)) double16 MV(long16 a); __attribute__((overloadable)) char KO(ulong a); __attribute__((overloadable)) char2 KP(ulong2 a); __attribute__((overloadable)) char3 KQ(ulong3 a); __attribute__((overloadable)) char4 KR(ulong4 a); __attribute__((overloadable)) char8 KS(ulong8 a); __attribute__((overloadable)) char16 KT(ulong16 a); __attribute__((overloadable)) uchar KU(ulong a); __attribute__((overloadable)) uchar2 KV(ulong2 a); __attribute__((overloadable)) uchar3 KW(ulong3 a); __attribute__((overloadable)) uchar4 KX(ulong4 a); __attribute__((overloadable)) uchar8 KY(ulong8 a); __attribute__((overloadable)) uchar16 KZ(ulong16 a); __attribute__((overloadable)) int LA(ulong a); __attribute__((overloadable)) int2 LB(ulong2 a); __attribute__((overloadable)) int3 LC(ulong3 a); __attribute__((overloadable)) int4 LD(ulong4 a); __attribute__((overloadable)) int8 LE(ulong8 a); __attribute__((overloadable)) int16 LF(ulong16 a); __attribute__((overloadable)) uint LG(ulong a); __attribute__((overloadable)) uint2 LH(ulong2 a); __attribute__((overloadable)) uint3 LI(ulong3 a); __attribute__((overloadable)) uint4 LJ(ulong4 a); __attribute__((overloadable)) uint8 LK(ulong8 a); __attribute__((overloadable)) uint16 LL(ulong16 a); __attribute__((overloadable)) short LM(ulong a); __attribute__((overloadable)) short2 LN(ulong2 a); __attribute__((overloadable)) short3 LO(ulong3 a); __attribute__((overloadable)) short4 LP(ulong4 a); __attribute__((overloadable)) short8 LQ(ulong8 a); __attribute__((overloadable)) short16 LR(ulong16 a); __attribute__((overloadable)) ushort LS(ulong a); __attribute__((overloadable)) ushort2 LT(ulong2 a); __attribute__((overloadable)) ushort3 LU(ulong3 a); __attribute__((overloadable)) ushort4 LV(ulong4 a); __attribute__((overloadable)) ushort8 LW(ulong8 a); __attribute__((overloadable)) ushort16 LX(ulong16 a); __attribute__((overloadable)) long LY(ulong a); __attribute__((overloadable)) long2 LZ(ulong2 a); __attribute__((overloadable)) long3 MA(ulong3 a); __attribute__((overloadable)) long4 MB(ulong4 a); __attribute__((overloadable)) long8 MC(ulong8 a); __attribute__((overloadable)) long16 MD(ulong16 a); __attribute__((overloadable)) ulong ME(ulong a); __attribute__((overloadable)) ulong2 MF(ulong2 a); __attribute__((overloadable)) ulong3 MG(ulong3 a); __attribute__((overloadable)) ulong4 MH(ulong4 a); __attribute__((overloadable)) ulong8 MI(ulong8 a); __attribute__((overloadable)) ulong16 MJ(ulong16 a); __attribute__((overloadable)) float MK(ulong a); __attribute__((overloadable)) float2 ML(ulong2 a); __attribute__((overloadable)) float3 MM(ulong3 a); __attribute__((overloadable)) float4 MN(ulong4 a); __attribute__((overloadable)) float8 MO(ulong8 a); __attribute__((overloadable)) float16 MP(ulong16 a); __attribute__((overloadable)) double MQ(ulong a); __attribute__((overloadable)) double2 MR(ulong2 a); __attribute__((overloadable)) double3 MS(ulong3 a); __attribute__((overloadable)) double4 MT(ulong4 a); __attribute__((overloadable)) double8 MU(ulong8 a); __attribute__((overloadable)) double16 MV(ulong16 a); __attribute__((overloadable)) char KO(float a); __attribute__((overloadable)) char2 KP(float2 a); __attribute__((overloadable)) char3 KQ(float3 a); __attribute__((overloadable)) char4 KR(float4 a); __attribute__((overloadable)) char8 KS(float8 a); __attribute__((overloadable)) char16 KT(float16 a); __attribute__((overloadable)) uchar KU(float a); __attribute__((overloadable)) uchar2 KV(float2 a); __attribute__((overloadable)) uchar3 KW(float3 a); __attribute__((overloadable)) uchar4 KX(float4 a); __attribute__((overloadable)) uchar8 KY(float8 a); __attribute__((overloadable)) uchar16 KZ(float16 a); __attribute__((overloadable)) int LA(float a); __attribute__((overloadable)) int2 LB(float2 a); __attribute__((overloadable)) int3 LC(float3 a); __attribute__((overloadable)) int4 LD(float4 a); __attribute__((overloadable)) int8 LE(float8 a); __attribute__((overloadable)) int16 LF(float16 a); __attribute__((overloadable)) uint LG(float a); __attribute__((overloadable)) uint2 LH(float2 a); __attribute__((overloadable)) uint3 LI(float3 a); __attribute__((overloadable)) uint4 LJ(float4 a); __attribute__((overloadable)) uint8 LK(float8 a); __attribute__((overloadable)) uint16 LL(float16 a); __attribute__((overloadable)) short LM(float a); __attribute__((overloadable)) short2 LN(float2 a); __attribute__((overloadable)) short3 LO(float3 a); __attribute__((overloadable)) short4 LP(float4 a); __attribute__((overloadable)) short8 LQ(float8 a); __attribute__((overloadable)) short16 LR(float16 a); __attribute__((overloadable)) ushort LS(float a); __attribute__((overloadable)) ushort2 LT(float2 a); __attribute__((overloadable)) ushort3 LU(float3 a); __attribute__((overloadable)) ushort4 LV(float4 a); __attribute__((overloadable)) ushort8 LW(float8 a); __attribute__((overloadable)) ushort16 LX(float16 a); __attribute__((overloadable)) long LY(float a); __attribute__((overloadable)) long2 LZ(float2 a); __attribute__((overloadable)) long3 MA(float3 a); __attribute__((overloadable)) long4 MB(float4 a); __attribute__((overloadable)) long8 MC(float8 a); __attribute__((overloadable)) long16 MD(float16 a); __attribute__((overloadable)) ulong ME(float a); __attribute__((overloadable)) ulong2 MF(float2 a); __attribute__((overloadable)) ulong3 MG(float3 a); __attribute__((overloadable)) ulong4 MH(float4 a); __attribute__((overloadable)) ulong8 MI(float8 a); __attribute__((overloadable)) ulong16 MJ(float16 a); __attribute__((overloadable)) float MK(float a); __attribute__((overloadable)) float2 ML(float2 a); __attribute__((overloadable)) float3 MM(float3 a); __attribute__((overloadable)) float4 MN(float4 a); __attribute__((overloadable)) float8 MO(float8 a); __attribute__((overloadable)) float16 MP(float16 a); __attribute__((overloadable)) double MQ(float a); __attribute__((overloadable)) double2 MR(float2 a); __attribute__((overloadable)) double3 MS(float3 a); __attribute__((overloadable)) double4 MT(float4 a); __attribute__((overloadable)) double8 MU(float8 a); __attribute__((overloadable)) double16 MV(float16 a); __attribute__((overloadable)) char KO(double a); __attribute__((overloadable)) char2 KP(double2 a); __attribute__((overloadable)) char3 KQ(double3 a); __attribute__((overloadable)) char4 KR(double4 a); __attribute__((overloadable)) char8 KS(double8 a); __attribute__((overloadable)) char16 KT(double16 a); __attribute__((overloadable)) uchar KU(double a); __attribute__((overloadable)) uchar2 KV(double2 a); __attribute__((overloadable)) uchar3 KW(double3 a); __attribute__((overloadable)) uchar4 KX(double4 a); __attribute__((overloadable)) uchar8 KY(double8 a); __attribute__((overloadable)) uchar16 KZ(double16 a); __attribute__((overloadable)) int LA(double a); __attribute__((overloadable)) int2 LB(double2 a); __attribute__((overloadable)) int3 LC(double3 a); __attribute__((overloadable)) int4 LD(double4 a); __attribute__((overloadable)) int8 LE(double8 a); __attribute__((overloadable)) int16 LF(double16 a); __attribute__((overloadable)) uint LG(double a); __attribute__((overloadable)) uint2 LH(double2 a); __attribute__((overloadable)) uint3 LI(double3 a); __attribute__((overloadable)) uint4 LJ(double4 a); __attribute__((overloadable)) uint8 LK(double8 a); __attribute__((overloadable)) uint16 LL(double16 a); __attribute__((overloadable)) short LM(double a); __attribute__((overloadable)) short2 LN(double2 a); __attribute__((overloadable)) short3 LO(double3 a); __attribute__((overloadable)) short4 LP(double4 a); __attribute__((overloadable)) short8 LQ(double8 a); __attribute__((overloadable)) short16 LR(double16 a); __attribute__((overloadable)) ushort LS(double a); __attribute__((overloadable)) ushort2 LT(double2 a); __attribute__((overloadable)) ushort3 LU(double3 a); __attribute__((overloadable)) ushort4 LV(double4 a); __attribute__((overloadable)) ushort8 LW(double8 a); __attribute__((overloadable)) ushort16 LX(double16 a); __attribute__((overloadable)) long LY(double a); __attribute__((overloadable)) long2 LZ(double2 a); __attribute__((overloadable)) long3 MA(double3 a); __attribute__((overloadable)) long4 MB(double4 a); __attribute__((overloadable)) long8 MC(double8 a); __attribute__((overloadable)) long16 MD(double16 a); __attribute__((overloadable)) ulong ME(double a); __attribute__((overloadable)) ulong2 MF(double2 a); __attribute__((overloadable)) ulong3 MG(double3 a); __attribute__((overloadable)) ulong4 MH(double4 a); __attribute__((overloadable)) ulong8 MI(double8 a); __attribute__((overloadable)) ulong16 MJ(double16 a); __attribute__((overloadable)) float MK(double a); __attribute__((overloadable)) float2 ML(double2 a); __attribute__((overloadable)) float3 MM(double3 a); __attribute__((overloadable)) float4 MN(double4 a); __attribute__((overloadable)) float8 MO(double8 a); __attribute__((overloadable)) float16 MP(double16 a); __attribute__((overloadable)) double MQ(double a); __attribute__((overloadable)) double2 MR(double2 a); __attribute__((overloadable)) double3 MS(double3 a); __attribute__((overloadable)) double4 MT(double4 a); __attribute__((overloadable)) double8 MU(double8 a); __attribute__((overloadable)) double16 MV(double16 a); __attribute__((overloadable)) char MW(char a); __attribute__((overloadable)) char2 MX(char2 a); __attribute__((overloadable)) char3 MY(char3 a); __attribute__((overloadable)) char4 MZ(char4 a); __attribute__((overloadable)) char8 NA(char8 a); __attribute__((overloadable)) char16 NB(char16 a); __attribute__((overloadable)) uchar NC(char a); __attribute__((overloadable)) uchar2 ND(char2 a); __attribute__((overloadable)) uchar3 NE(char3 a); __attribute__((overloadable)) uchar4 NF(char4 a); __attribute__((overloadable)) uchar8 NG(char8 a); __attribute__((overloadable)) uchar16 NH(char16 a); __attribute__((overloadable)) int NI(char a); __attribute__((overloadable)) int2 NJ(char2 a); __attribute__((overloadable)) int3 NK(char3 a); __attribute__((overloadable)) int4 NL(char4 a); __attribute__((overloadable)) int8 NM(char8 a); __attribute__((overloadable)) int16 NN(char16 a); __attribute__((overloadable)) uint NO(char a); __attribute__((overloadable)) uint2 NP(char2 a); __attribute__((overloadable)) uint3 NQ(char3 a); __attribute__((overloadable)) uint4 NR(char4 a); __attribute__((overloadable)) uint8 NS(char8 a); __attribute__((overloadable)) uint16 NT(char16 a); __attribute__((overloadable)) short NU(char a); __attribute__((overloadable)) short2 NV(char2 a); __attribute__((overloadable)) short3 NW(char3 a); __attribute__((overloadable)) short4 NX(char4 a); __attribute__((overloadable)) short8 NY(char8 a); __attribute__((overloadable)) short16 NZ(char16 a); __attribute__((overloadable)) ushort OA(char a); __attribute__((overloadable)) ushort2 OB(char2 a); __attribute__((overloadable)) ushort3 OC(char3 a); __attribute__((overloadable)) ushort4 OD(char4 a); __attribute__((overloadable)) ushort8 OE(char8 a); __attribute__((overloadable)) ushort16 OF(char16 a); __attribute__((overloadable)) long OG(char a); __attribute__((overloadable)) long2 OH(char2 a); __attribute__((overloadable)) long3 OI(char3 a); __attribute__((overloadable)) long4 OJ(char4 a); __attribute__((overloadable)) long8 OK(char8 a); __attribute__((overloadable)) long16 OL(char16 a); __attribute__((overloadable)) ulong OM(char a); __attribute__((overloadable)) ulong2 ON(char2 a); __attribute__((overloadable)) ulong3 OO(char3 a); __attribute__((overloadable)) ulong4 OP(char4 a); __attribute__((overloadable)) ulong8 OQ(char8 a); __attribute__((overloadable)) ulong16 OR(char16 a); __attribute__((overloadable)) float OS(char a); __attribute__((overloadable)) float2 OT(char2 a); __attribute__((overloadable)) float3 OU(char3 a); __attribute__((overloadable)) float4 OV(char4 a); __attribute__((overloadable)) float8 OW(char8 a); __attribute__((overloadable)) float16 OX(char16 a); __attribute__((overloadable)) double OY(char a); __attribute__((overloadable)) double2 OZ(char2 a); __attribute__((overloadable)) double3 PA(char3 a); __attribute__((overloadable)) double4 PB(char4 a); __attribute__((overloadable)) double8 PC(char8 a); __attribute__((overloadable)) double16 PD(char16 a); __attribute__((overloadable)) char MW(uchar a); __attribute__((overloadable)) char2 MX(uchar2 a); __attribute__((overloadable)) char3 MY(uchar3 a); __attribute__((overloadable)) char4 MZ(uchar4 a); __attribute__((overloadable)) char8 NA(uchar8 a); __attribute__((overloadable)) char16 NB(uchar16 a); __attribute__((overloadable)) uchar NC(uchar a); __attribute__((overloadable)) uchar2 ND(uchar2 a); __attribute__((overloadable)) uchar3 NE(uchar3 a); __attribute__((overloadable)) uchar4 NF(uchar4 a); __attribute__((overloadable)) uchar8 NG(uchar8 a); __attribute__((overloadable)) uchar16 NH(uchar16 a); __attribute__((overloadable)) int NI(uchar a); __attribute__((overloadable)) int2 NJ(uchar2 a); __attribute__((overloadable)) int3 NK(uchar3 a); __attribute__((overloadable)) int4 NL(uchar4 a); __attribute__((overloadable)) int8 NM(uchar8 a); __attribute__((overloadable)) int16 NN(uchar16 a); __attribute__((overloadable)) uint NO(uchar a); __attribute__((overloadable)) uint2 NP(uchar2 a); __attribute__((overloadable)) uint3 NQ(uchar3 a); __attribute__((overloadable)) uint4 NR(uchar4 a); __attribute__((overloadable)) uint8 NS(uchar8 a); __attribute__((overloadable)) uint16 NT(uchar16 a); __attribute__((overloadable)) short NU(uchar a); __attribute__((overloadable)) short2 NV(uchar2 a); __attribute__((overloadable)) short3 NW(uchar3 a); __attribute__((overloadable)) short4 NX(uchar4 a); __attribute__((overloadable)) short8 NY(uchar8 a); __attribute__((overloadable)) short16 NZ(uchar16 a); __attribute__((overloadable)) ushort OA(uchar a); __attribute__((overloadable)) ushort2 OB(uchar2 a); __attribute__((overloadable)) ushort3 OC(uchar3 a); __attribute__((overloadable)) ushort4 OD(uchar4 a); __attribute__((overloadable)) ushort8 OE(uchar8 a); __attribute__((overloadable)) ushort16 OF(uchar16 a); __attribute__((overloadable)) long OG(uchar a); __attribute__((overloadable)) long2 OH(uchar2 a); __attribute__((overloadable)) long3 OI(uchar3 a); __attribute__((overloadable)) long4 OJ(uchar4 a); __attribute__((overloadable)) long8 OK(uchar8 a); __attribute__((overloadable)) long16 OL(uchar16 a); __attribute__((overloadable)) ulong OM(uchar a); __attribute__((overloadable)) ulong2 ON(uchar2 a); __attribute__((overloadable)) ulong3 OO(uchar3 a); __attribute__((overloadable)) ulong4 OP(uchar4 a); __attribute__((overloadable)) ulong8 OQ(uchar8 a); __attribute__((overloadable)) ulong16 OR(uchar16 a); __attribute__((overloadable)) float OS(uchar a); __attribute__((overloadable)) float2 OT(uchar2 a); __attribute__((overloadable)) float3 OU(uchar3 a); __attribute__((overloadable)) float4 OV(uchar4 a); __attribute__((overloadable)) float8 OW(uchar8 a); __attribute__((overloadable)) float16 OX(uchar16 a); __attribute__((overloadable)) double OY(uchar a); __attribute__((overloadable)) double2 OZ(uchar2 a); __attribute__((overloadable)) double3 PA(uchar3 a); __attribute__((overloadable)) double4 PB(uchar4 a); __attribute__((overloadable)) double8 PC(uchar8 a); __attribute__((overloadable)) double16 PD(uchar16 a); __attribute__((overloadable)) char MW(int a); __attribute__((overloadable)) char2 MX(int2 a); __attribute__((overloadable)) char3 MY(int3 a); __attribute__((overloadable)) char4 MZ(int4 a); __attribute__((overloadable)) char8 NA(int8 a); __attribute__((overloadable)) char16 NB(int16 a); __attribute__((overloadable)) uchar NC(int a); __attribute__((overloadable)) uchar2 ND(int2 a); __attribute__((overloadable)) uchar3 NE(int3 a); __attribute__((overloadable)) uchar4 NF(int4 a); __attribute__((overloadable)) uchar8 NG(int8 a); __attribute__((overloadable)) uchar16 NH(int16 a); __attribute__((overloadable)) int NI(int a); __attribute__((overloadable)) int2 NJ(int2 a); __attribute__((overloadable)) int3 NK(int3 a); __attribute__((overloadable)) int4 NL(int4 a); __attribute__((overloadable)) int8 NM(int8 a); __attribute__((overloadable)) int16 NN(int16 a); __attribute__((overloadable)) uint NO(int a); __attribute__((overloadable)) uint2 NP(int2 a); __attribute__((overloadable)) uint3 NQ(int3 a); __attribute__((overloadable)) uint4 NR(int4 a); __attribute__((overloadable)) uint8 NS(int8 a); __attribute__((overloadable)) uint16 NT(int16 a); __attribute__((overloadable)) short NU(int a); __attribute__((overloadable)) short2 NV(int2 a); __attribute__((overloadable)) short3 NW(int3 a); __attribute__((overloadable)) short4 NX(int4 a); __attribute__((overloadable)) short8 NY(int8 a); __attribute__((overloadable)) short16 NZ(int16 a); __attribute__((overloadable)) ushort OA(int a); __attribute__((overloadable)) ushort2 OB(int2 a); __attribute__((overloadable)) ushort3 OC(int3 a); __attribute__((overloadable)) ushort4 OD(int4 a); __attribute__((overloadable)) ushort8 OE(int8 a); __attribute__((overloadable)) ushort16 OF(int16 a); __attribute__((overloadable)) long OG(int a); __attribute__((overloadable)) long2 OH(int2 a); __attribute__((overloadable)) long3 OI(int3 a); __attribute__((overloadable)) long4 OJ(int4 a); __attribute__((overloadable)) long8 OK(int8 a); __attribute__((overloadable)) long16 OL(int16 a); __attribute__((overloadable)) ulong OM(int a); __attribute__((overloadable)) ulong2 ON(int2 a); __attribute__((overloadable)) ulong3 OO(int3 a); __attribute__((overloadable)) ulong4 OP(int4 a); __attribute__((overloadable)) ulong8 OQ(int8 a); __attribute__((overloadable)) ulong16 OR(int16 a); __attribute__((overloadable)) float OS(int a); __attribute__((overloadable)) float2 OT(int2 a); __attribute__((overloadable)) float3 OU(int3 a); __attribute__((overloadable)) float4 OV(int4 a); __attribute__((overloadable)) float8 OW(int8 a); __attribute__((overloadable)) float16 OX(int16 a); __attribute__((overloadable)) double OY(int a); __attribute__((overloadable)) double2 OZ(int2 a); __attribute__((overloadable)) double3 PA(int3 a); __attribute__((overloadable)) double4 PB(int4 a); __attribute__((overloadable)) double8 PC(int8 a); __attribute__((overloadable)) double16 PD(int16 a); __attribute__((overloadable)) char MW(uint a); __attribute__((overloadable)) char2 MX(uint2 a); __attribute__((overloadable)) char3 MY(uint3 a); __attribute__((overloadable)) char4 MZ(uint4 a); __attribute__((overloadable)) char8 NA(uint8 a); __attribute__((overloadable)) char16 NB(uint16 a); __attribute__((overloadable)) uchar NC(uint a); __attribute__((overloadable)) uchar2 ND(uint2 a); __attribute__((overloadable)) uchar3 NE(uint3 a); __attribute__((overloadable)) uchar4 NF(uint4 a); __attribute__((overloadable)) uchar8 NG(uint8 a); __attribute__((overloadable)) uchar16 NH(uint16 a); __attribute__((overloadable)) int NI(uint a); __attribute__((overloadable)) int2 NJ(uint2 a); __attribute__((overloadable)) int3 NK(uint3 a); __attribute__((overloadable)) int4 NL(uint4 a); __attribute__((overloadable)) int8 NM(uint8 a); __attribute__((overloadable)) int16 NN(uint16 a); __attribute__((overloadable)) uint NO(uint a); __attribute__((overloadable)) uint2 NP(uint2 a); __attribute__((overloadable)) uint3 NQ(uint3 a); __attribute__((overloadable)) uint4 NR(uint4 a); __attribute__((overloadable)) uint8 NS(uint8 a); __attribute__((overloadable)) uint16 NT(uint16 a); __attribute__((overloadable)) short NU(uint a); __attribute__((overloadable)) short2 NV(uint2 a); __attribute__((overloadable)) short3 NW(uint3 a); __attribute__((overloadable)) short4 NX(uint4 a); __attribute__((overloadable)) short8 NY(uint8 a); __attribute__((overloadable)) short16 NZ(uint16 a); __attribute__((overloadable)) ushort OA(uint a); __attribute__((overloadable)) ushort2 OB(uint2 a); __attribute__((overloadable)) ushort3 OC(uint3 a); __attribute__((overloadable)) ushort4 OD(uint4 a); __attribute__((overloadable)) ushort8 OE(uint8 a); __attribute__((overloadable)) ushort16 OF(uint16 a); __attribute__((overloadable)) long OG(uint a); __attribute__((overloadable)) long2 OH(uint2 a); __attribute__((overloadable)) long3 OI(uint3 a); __attribute__((overloadable)) long4 OJ(uint4 a); __attribute__((overloadable)) long8 OK(uint8 a); __attribute__((overloadable)) long16 OL(uint16 a); __attribute__((overloadable)) ulong OM(uint a); __attribute__((overloadable)) ulong2 ON(uint2 a); __attribute__((overloadable)) ulong3 OO(uint3 a); __attribute__((overloadable)) ulong4 OP(uint4 a); __attribute__((overloadable)) ulong8 OQ(uint8 a); __attribute__((overloadable)) ulong16 OR(uint16 a); __attribute__((overloadable)) float OS(uint a); __attribute__((overloadable)) float2 OT(uint2 a); __attribute__((overloadable)) float3 OU(uint3 a); __attribute__((overloadable)) float4 OV(uint4 a); __attribute__((overloadable)) float8 OW(uint8 a); __attribute__((overloadable)) float16 OX(uint16 a); __attribute__((overloadable)) double OY(uint a); __attribute__((overloadable)) double2 OZ(uint2 a); __attribute__((overloadable)) double3 PA(uint3 a); __attribute__((overloadable)) double4 PB(uint4 a); __attribute__((overloadable)) double8 PC(uint8 a); __attribute__((overloadable)) double16 PD(uint16 a); __attribute__((overloadable)) char MW(short a); __attribute__((overloadable)) char2 MX(short2 a); __attribute__((overloadable)) char3 MY(short3 a); __attribute__((overloadable)) char4 MZ(short4 a); __attribute__((overloadable)) char8 NA(short8 a); __attribute__((overloadable)) char16 NB(short16 a); __attribute__((overloadable)) uchar NC(short a); __attribute__((overloadable)) uchar2 ND(short2 a); __attribute__((overloadable)) uchar3 NE(short3 a); __attribute__((overloadable)) uchar4 NF(short4 a); __attribute__((overloadable)) uchar8 NG(short8 a); __attribute__((overloadable)) uchar16 NH(short16 a); __attribute__((overloadable)) int NI(short a); __attribute__((overloadable)) int2 NJ(short2 a); __attribute__((overloadable)) int3 NK(short3 a); __attribute__((overloadable)) int4 NL(short4 a); __attribute__((overloadable)) int8 NM(short8 a); __attribute__((overloadable)) int16 NN(short16 a); __attribute__((overloadable)) uint NO(short a); __attribute__((overloadable)) uint2 NP(short2 a); __attribute__((overloadable)) uint3 NQ(short3 a); __attribute__((overloadable)) uint4 NR(short4 a); __attribute__((overloadable)) uint8 NS(short8 a); __attribute__((overloadable)) uint16 NT(short16 a); __attribute__((overloadable)) short NU(short a); __attribute__((overloadable)) short2 NV(short2 a); __attribute__((overloadable)) short3 NW(short3 a); __attribute__((overloadable)) short4 NX(short4 a); __attribute__((overloadable)) short8 NY(short8 a); __attribute__((overloadable)) short16 NZ(short16 a); __attribute__((overloadable)) ushort OA(short a); __attribute__((overloadable)) ushort2 OB(short2 a); __attribute__((overloadable)) ushort3 OC(short3 a); __attribute__((overloadable)) ushort4 OD(short4 a); __attribute__((overloadable)) ushort8 OE(short8 a); __attribute__((overloadable)) ushort16 OF(short16 a); __attribute__((overloadable)) long OG(short a); __attribute__((overloadable)) long2 OH(short2 a); __attribute__((overloadable)) long3 OI(short3 a); __attribute__((overloadable)) long4 OJ(short4 a); __attribute__((overloadable)) long8 OK(short8 a); __attribute__((overloadable)) long16 OL(short16 a); __attribute__((overloadable)) ulong OM(short a); __attribute__((overloadable)) ulong2 ON(short2 a); __attribute__((overloadable)) ulong3 OO(short3 a); __attribute__((overloadable)) ulong4 OP(short4 a); __attribute__((overloadable)) ulong8 OQ(short8 a); __attribute__((overloadable)) ulong16 OR(short16 a); __attribute__((overloadable)) float OS(short a); __attribute__((overloadable)) float2 OT(short2 a); __attribute__((overloadable)) float3 OU(short3 a); __attribute__((overloadable)) float4 OV(short4 a); __attribute__((overloadable)) float8 OW(short8 a); __attribute__((overloadable)) float16 OX(short16 a); __attribute__((overloadable)) double OY(short a); __attribute__((overloadable)) double2 OZ(short2 a); __attribute__((overloadable)) double3 PA(short3 a); __attribute__((overloadable)) double4 PB(short4 a); __attribute__((overloadable)) double8 PC(short8 a); __attribute__((overloadable)) double16 PD(short16 a); __attribute__((overloadable)) char MW(ushort a); __attribute__((overloadable)) char2 MX(ushort2 a); __attribute__((overloadable)) char3 MY(ushort3 a); __attribute__((overloadable)) char4 MZ(ushort4 a); __attribute__((overloadable)) char8 NA(ushort8 a); __attribute__((overloadable)) char16 NB(ushort16 a); __attribute__((overloadable)) uchar NC(ushort a); __attribute__((overloadable)) uchar2 ND(ushort2 a); __attribute__((overloadable)) uchar3 NE(ushort3 a); __attribute__((overloadable)) uchar4 NF(ushort4 a); __attribute__((overloadable)) uchar8 NG(ushort8 a); __attribute__((overloadable)) uchar16 NH(ushort16 a); __attribute__((overloadable)) int NI(ushort a); __attribute__((overloadable)) int2 NJ(ushort2 a); __attribute__((overloadable)) int3 NK(ushort3 a); __attribute__((overloadable)) int4 NL(ushort4 a); __attribute__((overloadable)) int8 NM(ushort8 a); __attribute__((overloadable)) int16 NN(ushort16 a); __attribute__((overloadable)) uint NO(ushort a); __attribute__((overloadable)) uint2 NP(ushort2 a); __attribute__((overloadable)) uint3 NQ(ushort3 a); __attribute__((overloadable)) uint4 NR(ushort4 a); __attribute__((overloadable)) uint8 NS(ushort8 a); __attribute__((overloadable)) uint16 NT(ushort16 a); __attribute__((overloadable)) short NU(ushort a); __attribute__((overloadable)) short2 NV(ushort2 a); __attribute__((overloadable)) short3 NW(ushort3 a); __attribute__((overloadable)) short4 NX(ushort4 a); __attribute__((overloadable)) short8 NY(ushort8 a); __attribute__((overloadable)) short16 NZ(ushort16 a); __attribute__((overloadable)) ushort OA(ushort a); __attribute__((overloadable)) ushort2 OB(ushort2 a); __attribute__((overloadable)) ushort3 OC(ushort3 a); __attribute__((overloadable)) ushort4 OD(ushort4 a); __attribute__((overloadable)) ushort8 OE(ushort8 a); __attribute__((overloadable)) ushort16 OF(ushort16 a); __attribute__((overloadable)) long OG(ushort a); __attribute__((overloadable)) long2 OH(ushort2 a); __attribute__((overloadable)) long3 OI(ushort3 a); __attribute__((overloadable)) long4 OJ(ushort4 a); __attribute__((overloadable)) long8 OK(ushort8 a); __attribute__((overloadable)) long16 OL(ushort16 a); __attribute__((overloadable)) ulong OM(ushort a); __attribute__((overloadable)) ulong2 ON(ushort2 a); __attribute__((overloadable)) ulong3 OO(ushort3 a); __attribute__((overloadable)) ulong4 OP(ushort4 a); __attribute__((overloadable)) ulong8 OQ(ushort8 a); __attribute__((overloadable)) ulong16 OR(ushort16 a); __attribute__((overloadable)) float OS(ushort a); __attribute__((overloadable)) float2 OT(ushort2 a); __attribute__((overloadable)) float3 OU(ushort3 a); __attribute__((overloadable)) float4 OV(ushort4 a); __attribute__((overloadable)) float8 OW(ushort8 a); __attribute__((overloadable)) float16 OX(ushort16 a); __attribute__((overloadable)) double OY(ushort a); __attribute__((overloadable)) double2 OZ(ushort2 a); __attribute__((overloadable)) double3 PA(ushort3 a); __attribute__((overloadable)) double4 PB(ushort4 a); __attribute__((overloadable)) double8 PC(ushort8 a); __attribute__((overloadable)) double16 PD(ushort16 a); __attribute__((overloadable)) char MW(long a); __attribute__((overloadable)) char2 MX(long2 a); __attribute__((overloadable)) char3 MY(long3 a); __attribute__((overloadable)) char4 MZ(long4 a); __attribute__((overloadable)) char8 NA(long8 a); __attribute__((overloadable)) char16 NB(long16 a); __attribute__((overloadable)) uchar NC(long a); __attribute__((overloadable)) uchar2 ND(long2 a); __attribute__((overloadable)) uchar3 NE(long3 a); __attribute__((overloadable)) uchar4 NF(long4 a); __attribute__((overloadable)) uchar8 NG(long8 a); __attribute__((overloadable)) uchar16 NH(long16 a); __attribute__((overloadable)) int NI(long a); __attribute__((overloadable)) int2 NJ(long2 a); __attribute__((overloadable)) int3 NK(long3 a); __attribute__((overloadable)) int4 NL(long4 a); __attribute__((overloadable)) int8 NM(long8 a); __attribute__((overloadable)) int16 NN(long16 a); __attribute__((overloadable)) uint NO(long a); __attribute__((overloadable)) uint2 NP(long2 a); __attribute__((overloadable)) uint3 NQ(long3 a); __attribute__((overloadable)) uint4 NR(long4 a); __attribute__((overloadable)) uint8 NS(long8 a); __attribute__((overloadable)) uint16 NT(long16 a); __attribute__((overloadable)) short NU(long a); __attribute__((overloadable)) short2 NV(long2 a); __attribute__((overloadable)) short3 NW(long3 a); __attribute__((overloadable)) short4 NX(long4 a); __attribute__((overloadable)) short8 NY(long8 a); __attribute__((overloadable)) short16 NZ(long16 a); __attribute__((overloadable)) ushort OA(long a); __attribute__((overloadable)) ushort2 OB(long2 a); __attribute__((overloadable)) ushort3 OC(long3 a); __attribute__((overloadable)) ushort4 OD(long4 a); __attribute__((overloadable)) ushort8 OE(long8 a); __attribute__((overloadable)) ushort16 OF(long16 a); __attribute__((overloadable)) long OG(long a); __attribute__((overloadable)) long2 OH(long2 a); __attribute__((overloadable)) long3 OI(long3 a); __attribute__((overloadable)) long4 OJ(long4 a); __attribute__((overloadable)) long8 OK(long8 a); __attribute__((overloadable)) long16 OL(long16 a); __attribute__((overloadable)) ulong OM(long a); __attribute__((overloadable)) ulong2 ON(long2 a); __attribute__((overloadable)) ulong3 OO(long3 a); __attribute__((overloadable)) ulong4 OP(long4 a); __attribute__((overloadable)) ulong8 OQ(long8 a); __attribute__((overloadable)) ulong16 OR(long16 a); __attribute__((overloadable)) float OS(long a); __attribute__((overloadable)) float2 OT(long2 a); __attribute__((overloadable)) float3 OU(long3 a); __attribute__((overloadable)) float4 OV(long4 a); __attribute__((overloadable)) float8 OW(long8 a); __attribute__((overloadable)) float16 OX(long16 a); __attribute__((overloadable)) double OY(long a); __attribute__((overloadable)) double2 OZ(long2 a); __attribute__((overloadable)) double3 PA(long3 a); __attribute__((overloadable)) double4 PB(long4 a); __attribute__((overloadable)) double8 PC(long8 a); __attribute__((overloadable)) double16 PD(long16 a); __attribute__((overloadable)) char MW(ulong a); __attribute__((overloadable)) char2 MX(ulong2 a); __attribute__((overloadable)) char3 MY(ulong3 a); __attribute__((overloadable)) char4 MZ(ulong4 a); __attribute__((overloadable)) char8 NA(ulong8 a); __attribute__((overloadable)) char16 NB(ulong16 a); __attribute__((overloadable)) uchar NC(ulong a); __attribute__((overloadable)) uchar2 ND(ulong2 a); __attribute__((overloadable)) uchar3 NE(ulong3 a); __attribute__((overloadable)) uchar4 NF(ulong4 a); __attribute__((overloadable)) uchar8 NG(ulong8 a); __attribute__((overloadable)) uchar16 NH(ulong16 a); __attribute__((overloadable)) int NI(ulong a); __attribute__((overloadable)) int2 NJ(ulong2 a); __attribute__((overloadable)) int3 NK(ulong3 a); __attribute__((overloadable)) int4 NL(ulong4 a); __attribute__((overloadable)) int8 NM(ulong8 a); __attribute__((overloadable)) int16 NN(ulong16 a); __attribute__((overloadable)) uint NO(ulong a); __attribute__((overloadable)) uint2 NP(ulong2 a); __attribute__((overloadable)) uint3 NQ(ulong3 a); __attribute__((overloadable)) uint4 NR(ulong4 a); __attribute__((overloadable)) uint8 NS(ulong8 a); __attribute__((overloadable)) uint16 NT(ulong16 a); __attribute__((overloadable)) short NU(ulong a); __attribute__((overloadable)) short2 NV(ulong2 a); __attribute__((overloadable)) short3 NW(ulong3 a); __attribute__((overloadable)) short4 NX(ulong4 a); __attribute__((overloadable)) short8 NY(ulong8 a); __attribute__((overloadable)) short16 NZ(ulong16 a); __attribute__((overloadable)) ushort OA(ulong a); __attribute__((overloadable)) ushort2 OB(ulong2 a); __attribute__((overloadable)) ushort3 OC(ulong3 a); __attribute__((overloadable)) ushort4 OD(ulong4 a); __attribute__((overloadable)) ushort8 OE(ulong8 a); __attribute__((overloadable)) ushort16 OF(ulong16 a); __attribute__((overloadable)) long OG(ulong a); __attribute__((overloadable)) long2 OH(ulong2 a); __attribute__((overloadable)) long3 OI(ulong3 a); __attribute__((overloadable)) long4 OJ(ulong4 a); __attribute__((overloadable)) long8 OK(ulong8 a); __attribute__((overloadable)) long16 OL(ulong16 a); __attribute__((overloadable)) ulong OM(ulong a); __attribute__((overloadable)) ulong2 ON(ulong2 a); __attribute__((overloadable)) ulong3 OO(ulong3 a); __attribute__((overloadable)) ulong4 OP(ulong4 a); __attribute__((overloadable)) ulong8 OQ(ulong8 a); __attribute__((overloadable)) ulong16 OR(ulong16 a); __attribute__((overloadable)) float OS(ulong a); __attribute__((overloadable)) float2 OT(ulong2 a); __attribute__((overloadable)) float3 OU(ulong3 a); __attribute__((overloadable)) float4 OV(ulong4 a); __attribute__((overloadable)) float8 OW(ulong8 a); __attribute__((overloadable)) float16 OX(ulong16 a); __attribute__((overloadable)) double OY(ulong a); __attribute__((overloadable)) double2 OZ(ulong2 a); __attribute__((overloadable)) double3 PA(ulong3 a); __attribute__((overloadable)) double4 PB(ulong4 a); __attribute__((overloadable)) double8 PC(ulong8 a); __attribute__((overloadable)) double16 PD(ulong16 a); __attribute__((overloadable)) char MW(float a); __attribute__((overloadable)) char2 MX(float2 a); __attribute__((overloadable)) char3 MY(float3 a); __attribute__((overloadable)) char4 MZ(float4 a); __attribute__((overloadable)) char8 NA(float8 a); __attribute__((overloadable)) char16 NB(float16 a); __attribute__((overloadable)) uchar NC(float a); __attribute__((overloadable)) uchar2 ND(float2 a); __attribute__((overloadable)) uchar3 NE(float3 a); __attribute__((overloadable)) uchar4 NF(float4 a); __attribute__((overloadable)) uchar8 NG(float8 a); __attribute__((overloadable)) uchar16 NH(float16 a); __attribute__((overloadable)) int NI(float a); __attribute__((overloadable)) int2 NJ(float2 a); __attribute__((overloadable)) int3 NK(float3 a); __attribute__((overloadable)) int4 NL(float4 a); __attribute__((overloadable)) int8 NM(float8 a); __attribute__((overloadable)) int16 NN(float16 a); __attribute__((overloadable)) uint NO(float a); __attribute__((overloadable)) uint2 NP(float2 a); __attribute__((overloadable)) uint3 NQ(float3 a); __attribute__((overloadable)) uint4 NR(float4 a); __attribute__((overloadable)) uint8 NS(float8 a); __attribute__((overloadable)) uint16 NT(float16 a); __attribute__((overloadable)) short NU(float a); __attribute__((overloadable)) short2 NV(float2 a); __attribute__((overloadable)) short3 NW(float3 a); __attribute__((overloadable)) short4 NX(float4 a); __attribute__((overloadable)) short8 NY(float8 a); __attribute__((overloadable)) short16 NZ(float16 a); __attribute__((overloadable)) ushort OA(float a); __attribute__((overloadable)) ushort2 OB(float2 a); __attribute__((overloadable)) ushort3 OC(float3 a); __attribute__((overloadable)) ushort4 OD(float4 a); __attribute__((overloadable)) ushort8 OE(float8 a); __attribute__((overloadable)) ushort16 OF(float16 a); __attribute__((overloadable)) long OG(float a); __attribute__((overloadable)) long2 OH(float2 a); __attribute__((overloadable)) long3 OI(float3 a); __attribute__((overloadable)) long4 OJ(float4 a); __attribute__((overloadable)) long8 OK(float8 a); __attribute__((overloadable)) long16 OL(float16 a); __attribute__((overloadable)) ulong OM(float a); __attribute__((overloadable)) ulong2 ON(float2 a); __attribute__((overloadable)) ulong3 OO(float3 a); __attribute__((overloadable)) ulong4 OP(float4 a); __attribute__((overloadable)) ulong8 OQ(float8 a); __attribute__((overloadable)) ulong16 OR(float16 a); __attribute__((overloadable)) float OS(float a); __attribute__((overloadable)) float2 OT(float2 a); __attribute__((overloadable)) float3 OU(float3 a); __attribute__((overloadable)) float4 OV(float4 a); __attribute__((overloadable)) float8 OW(float8 a); __attribute__((overloadable)) float16 OX(float16 a); __attribute__((overloadable)) double OY(float a); __attribute__((overloadable)) double2 OZ(float2 a); __attribute__((overloadable)) double3 PA(float3 a); __attribute__((overloadable)) double4 PB(float4 a); __attribute__((overloadable)) double8 PC(float8 a); __attribute__((overloadable)) double16 PD(float16 a); __attribute__((overloadable)) char MW(double a); __attribute__((overloadable)) char2 MX(double2 a); __attribute__((overloadable)) char3 MY(double3 a); __attribute__((overloadable)) char4 MZ(double4 a); __attribute__((overloadable)) char8 NA(double8 a); __attribute__((overloadable)) char16 NB(double16 a); __attribute__((overloadable)) uchar NC(double a); __attribute__((overloadable)) uchar2 ND(double2 a); __attribute__((overloadable)) uchar3 NE(double3 a); __attribute__((overloadable)) uchar4 NF(double4 a); __attribute__((overloadable)) uchar8 NG(double8 a); __attribute__((overloadable)) uchar16 NH(double16 a); __attribute__((overloadable)) int NI(double a); __attribute__((overloadable)) int2 NJ(double2 a); __attribute__((overloadable)) int3 NK(double3 a); __attribute__((overloadable)) int4 NL(double4 a); __attribute__((overloadable)) int8 NM(double8 a); __attribute__((overloadable)) int16 NN(double16 a); __attribute__((overloadable)) uint NO(double a); __attribute__((overloadable)) uint2 NP(double2 a); __attribute__((overloadable)) uint3 NQ(double3 a); __attribute__((overloadable)) uint4 NR(double4 a); __attribute__((overloadable)) uint8 NS(double8 a); __attribute__((overloadable)) uint16 NT(double16 a); __attribute__((overloadable)) short NU(double a); __attribute__((overloadable)) short2 NV(double2 a); __attribute__((overloadable)) short3 NW(double3 a); __attribute__((overloadable)) short4 NX(double4 a); __attribute__((overloadable)) short8 NY(double8 a); __attribute__((overloadable)) short16 NZ(double16 a); __attribute__((overloadable)) ushort OA(double a); __attribute__((overloadable)) ushort2 OB(double2 a); __attribute__((overloadable)) ushort3 OC(double3 a); __attribute__((overloadable)) ushort4 OD(double4 a); __attribute__((overloadable)) ushort8 OE(double8 a); __attribute__((overloadable)) ushort16 OF(double16 a); __attribute__((overloadable)) long OG(double a); __attribute__((overloadable)) long2 OH(double2 a); __attribute__((overloadable)) long3 OI(double3 a); __attribute__((overloadable)) long4 OJ(double4 a); __attribute__((overloadable)) long8 OK(double8 a); __attribute__((overloadable)) long16 OL(double16 a); __attribute__((overloadable)) ulong OM(double a); __attribute__((overloadable)) ulong2 ON(double2 a); __attribute__((overloadable)) ulong3 OO(double3 a); __attribute__((overloadable)) ulong4 OP(double4 a); __attribute__((overloadable)) ulong8 OQ(double8 a); __attribute__((overloadable)) ulong16 OR(double16 a); __attribute__((overloadable)) float OS(double a); __attribute__((overloadable)) float2 OT(double2 a); __attribute__((overloadable)) float3 OU(double3 a); __attribute__((overloadable)) float4 OV(double4 a); __attribute__((overloadable)) float8 OW(double8 a); __attribute__((overloadable)) float16 OX(double16 a); __attribute__((overloadable)) double OY(double a); __attribute__((overloadable)) double2 OZ(double2 a); __attribute__((overloadable)) double3 PA(double3 a); __attribute__((overloadable)) double4 PB(double4 a); __attribute__((overloadable)) double8 PC(double8 a); __attribute__((overloadable)) double16 PD(double16 a); __attribute__((overloadable)) char PE(char a); __attribute__((overloadable)) char2 PF(char2 a); __attribute__((overloadable)) char3 PG(char3 a); __attribute__((overloadable)) char4 PH(char4 a); __attribute__((overloadable)) char8 PI(char8 a); __attribute__((overloadable)) char16 PJ(char16 a); __attribute__((overloadable)) uchar PK(char a); __attribute__((overloadable)) uchar2 PL(char2 a); __attribute__((overloadable)) uchar3 PM(char3 a); __attribute__((overloadable)) uchar4 PN(char4 a); __attribute__((overloadable)) uchar8 PO(char8 a); __attribute__((overloadable)) uchar16 PP(char16 a); __attribute__((overloadable)) int PQ(char a); __attribute__((overloadable)) int2 PR(char2 a); __attribute__((overloadable)) int3 PS(char3 a); __attribute__((overloadable)) int4 PT(char4 a); __attribute__((overloadable)) int8 PU(char8 a); __attribute__((overloadable)) int16 PV(char16 a); __attribute__((overloadable)) uint PW(char a); __attribute__((overloadable)) uint2 PX(char2 a); __attribute__((overloadable)) uint3 PY(char3 a); __attribute__((overloadable)) uint4 PZ(char4 a); __attribute__((overloadable)) uint8 QA(char8 a); __attribute__((overloadable)) uint16 QB(char16 a); __attribute__((overloadable)) short QC(char a); __attribute__((overloadable)) short2 QD(char2 a); __attribute__((overloadable)) short3 QE(char3 a); __attribute__((overloadable)) short4 QF(char4 a); __attribute__((overloadable)) short8 QG(char8 a); __attribute__((overloadable)) short16 QH(char16 a); __attribute__((overloadable)) ushort QI(char a); __attribute__((overloadable)) ushort2 QJ(char2 a); __attribute__((overloadable)) ushort3 QK(char3 a); __attribute__((overloadable)) ushort4 QL(char4 a); __attribute__((overloadable)) ushort8 QM(char8 a); __attribute__((overloadable)) ushort16 QN(char16 a); __attribute__((overloadable)) long QO(char a); __attribute__((overloadable)) long2 QP(char2 a); __attribute__((overloadable)) long3 QQ(char3 a); __attribute__((overloadable)) long4 QR(char4 a); __attribute__((overloadable)) long8 QS(char8 a); __attribute__((overloadable)) long16 QT(char16 a); __attribute__((overloadable)) ulong QU(char a); __attribute__((overloadable)) ulong2 QV(char2 a); __attribute__((overloadable)) ulong3 QW(char3 a); __attribute__((overloadable)) ulong4 QX(char4 a); __attribute__((overloadable)) ulong8 QY(char8 a); __attribute__((overloadable)) ulong16 QZ(char16 a); __attribute__((overloadable)) float RA(char a); __attribute__((overloadable)) float2 RB(char2 a); __attribute__((overloadable)) float3 RC(char3 a); __attribute__((overloadable)) float4 RD(char4 a); __attribute__((overloadable)) float8 RE(char8 a); __attribute__((overloadable)) float16 RF(char16 a); __attribute__((overloadable)) double RG(char a); __attribute__((overloadable)) double2 RH(char2 a); __attribute__((overloadable)) double3 RI(char3 a); __attribute__((overloadable)) double4 RJ(char4 a); __attribute__((overloadable)) double8 RK(char8 a); __attribute__((overloadable)) double16 RL(char16 a); __attribute__((overloadable)) char PE(uchar a); __attribute__((overloadable)) char2 PF(uchar2 a); __attribute__((overloadable)) char3 PG(uchar3 a); __attribute__((overloadable)) char4 PH(uchar4 a); __attribute__((overloadable)) char8 PI(uchar8 a); __attribute__((overloadable)) char16 PJ(uchar16 a); __attribute__((overloadable)) uchar PK(uchar a); __attribute__((overloadable)) uchar2 PL(uchar2 a); __attribute__((overloadable)) uchar3 PM(uchar3 a); __attribute__((overloadable)) uchar4 PN(uchar4 a); __attribute__((overloadable)) uchar8 PO(uchar8 a); __attribute__((overloadable)) uchar16 PP(uchar16 a); __attribute__((overloadable)) int PQ(uchar a); __attribute__((overloadable)) int2 PR(uchar2 a); __attribute__((overloadable)) int3 PS(uchar3 a); __attribute__((overloadable)) int4 PT(uchar4 a); __attribute__((overloadable)) int8 PU(uchar8 a); __attribute__((overloadable)) int16 PV(uchar16 a); __attribute__((overloadable)) uint PW(uchar a); __attribute__((overloadable)) uint2 PX(uchar2 a); __attribute__((overloadable)) uint3 PY(uchar3 a); __attribute__((overloadable)) uint4 PZ(uchar4 a); __attribute__((overloadable)) uint8 QA(uchar8 a); __attribute__((overloadable)) uint16 QB(uchar16 a); __attribute__((overloadable)) short QC(uchar a); __attribute__((overloadable)) short2 QD(uchar2 a); __attribute__((overloadable)) short3 QE(uchar3 a); __attribute__((overloadable)) short4 QF(uchar4 a); __attribute__((overloadable)) short8 QG(uchar8 a); __attribute__((overloadable)) short16 QH(uchar16 a); __attribute__((overloadable)) ushort QI(uchar a); __attribute__((overloadable)) ushort2 QJ(uchar2 a); __attribute__((overloadable)) ushort3 QK(uchar3 a); __attribute__((overloadable)) ushort4 QL(uchar4 a); __attribute__((overloadable)) ushort8 QM(uchar8 a); __attribute__((overloadable)) ushort16 QN(uchar16 a); __attribute__((overloadable)) long QO(uchar a); __attribute__((overloadable)) long2 QP(uchar2 a); __attribute__((overloadable)) long3 QQ(uchar3 a); __attribute__((overloadable)) long4 QR(uchar4 a); __attribute__((overloadable)) long8 QS(uchar8 a); __attribute__((overloadable)) long16 QT(uchar16 a); __attribute__((overloadable)) ulong QU(uchar a); __attribute__((overloadable)) ulong2 QV(uchar2 a); __attribute__((overloadable)) ulong3 QW(uchar3 a); __attribute__((overloadable)) ulong4 QX(uchar4 a); __attribute__((overloadable)) ulong8 QY(uchar8 a); __attribute__((overloadable)) ulong16 QZ(uchar16 a); __attribute__((overloadable)) float RA(uchar a); __attribute__((overloadable)) float2 RB(uchar2 a); __attribute__((overloadable)) float3 RC(uchar3 a); __attribute__((overloadable)) float4 RD(uchar4 a); __attribute__((overloadable)) float8 RE(uchar8 a); __attribute__((overloadable)) float16 RF(uchar16 a); __attribute__((overloadable)) double RG(uchar a); __attribute__((overloadable)) double2 RH(uchar2 a); __attribute__((overloadable)) double3 RI(uchar3 a); __attribute__((overloadable)) double4 RJ(uchar4 a); __attribute__((overloadable)) double8 RK(uchar8 a); __attribute__((overloadable)) double16 RL(uchar16 a); __attribute__((overloadable)) char PE(int a); __attribute__((overloadable)) char2 PF(int2 a); __attribute__((overloadable)) char3 PG(int3 a); __attribute__((overloadable)) char4 PH(int4 a); __attribute__((overloadable)) char8 PI(int8 a); __attribute__((overloadable)) char16 PJ(int16 a); __attribute__((overloadable)) uchar PK(int a); __attribute__((overloadable)) uchar2 PL(int2 a); __attribute__((overloadable)) uchar3 PM(int3 a); __attribute__((overloadable)) uchar4 PN(int4 a); __attribute__((overloadable)) uchar8 PO(int8 a); __attribute__((overloadable)) uchar16 PP(int16 a); __attribute__((overloadable)) int PQ(int a); __attribute__((overloadable)) int2 PR(int2 a); __attribute__((overloadable)) int3 PS(int3 a); __attribute__((overloadable)) int4 PT(int4 a); __attribute__((overloadable)) int8 PU(int8 a); __attribute__((overloadable)) int16 PV(int16 a); __attribute__((overloadable)) uint PW(int a); __attribute__((overloadable)) uint2 PX(int2 a); __attribute__((overloadable)) uint3 PY(int3 a); __attribute__((overloadable)) uint4 PZ(int4 a); __attribute__((overloadable)) uint8 QA(int8 a); __attribute__((overloadable)) uint16 QB(int16 a); __attribute__((overloadable)) short QC(int a); __attribute__((overloadable)) short2 QD(int2 a); __attribute__((overloadable)) short3 QE(int3 a); __attribute__((overloadable)) short4 QF(int4 a); __attribute__((overloadable)) short8 QG(int8 a); __attribute__((overloadable)) short16 QH(int16 a); __attribute__((overloadable)) ushort QI(int a); __attribute__((overloadable)) ushort2 QJ(int2 a); __attribute__((overloadable)) ushort3 QK(int3 a); __attribute__((overloadable)) ushort4 QL(int4 a); __attribute__((overloadable)) ushort8 QM(int8 a); __attribute__((overloadable)) ushort16 QN(int16 a); __attribute__((overloadable)) long QO(int a); __attribute__((overloadable)) long2 QP(int2 a); __attribute__((overloadable)) long3 QQ(int3 a); __attribute__((overloadable)) long4 QR(int4 a); __attribute__((overloadable)) long8 QS(int8 a); __attribute__((overloadable)) long16 QT(int16 a); __attribute__((overloadable)) ulong QU(int a); __attribute__((overloadable)) ulong2 QV(int2 a); __attribute__((overloadable)) ulong3 QW(int3 a); __attribute__((overloadable)) ulong4 QX(int4 a); __attribute__((overloadable)) ulong8 QY(int8 a); __attribute__((overloadable)) ulong16 QZ(int16 a); __attribute__((overloadable)) float RA(int a); __attribute__((overloadable)) float2 RB(int2 a); __attribute__((overloadable)) float3 RC(int3 a); __attribute__((overloadable)) float4 RD(int4 a); __attribute__((overloadable)) float8 RE(int8 a); __attribute__((overloadable)) float16 RF(int16 a); __attribute__((overloadable)) double RG(int a); __attribute__((overloadable)) double2 RH(int2 a); __attribute__((overloadable)) double3 RI(int3 a); __attribute__((overloadable)) double4 RJ(int4 a); __attribute__((overloadable)) double8 RK(int8 a); __attribute__((overloadable)) double16 RL(int16 a); __attribute__((overloadable)) char PE(uint a); __attribute__((overloadable)) char2 PF(uint2 a); __attribute__((overloadable)) char3 PG(uint3 a); __attribute__((overloadable)) char4 PH(uint4 a); __attribute__((overloadable)) char8 PI(uint8 a); __attribute__((overloadable)) char16 PJ(uint16 a); __attribute__((overloadable)) uchar PK(uint a); __attribute__((overloadable)) uchar2 PL(uint2 a); __attribute__((overloadable)) uchar3 PM(uint3 a); __attribute__((overloadable)) uchar4 PN(uint4 a); __attribute__((overloadable)) uchar8 PO(uint8 a); __attribute__((overloadable)) uchar16 PP(uint16 a); __attribute__((overloadable)) int PQ(uint a); __attribute__((overloadable)) int2 PR(uint2 a); __attribute__((overloadable)) int3 PS(uint3 a); __attribute__((overloadable)) int4 PT(uint4 a); __attribute__((overloadable)) int8 PU(uint8 a); __attribute__((overloadable)) int16 PV(uint16 a); __attribute__((overloadable)) uint PW(uint a); __attribute__((overloadable)) uint2 PX(uint2 a); __attribute__((overloadable)) uint3 PY(uint3 a); __attribute__((overloadable)) uint4 PZ(uint4 a); __attribute__((overloadable)) uint8 QA(uint8 a); __attribute__((overloadable)) uint16 QB(uint16 a); __attribute__((overloadable)) short QC(uint a); __attribute__((overloadable)) short2 QD(uint2 a); __attribute__((overloadable)) short3 QE(uint3 a); __attribute__((overloadable)) short4 QF(uint4 a); __attribute__((overloadable)) short8 QG(uint8 a); __attribute__((overloadable)) short16 QH(uint16 a); __attribute__((overloadable)) ushort QI(uint a); __attribute__((overloadable)) ushort2 QJ(uint2 a); __attribute__((overloadable)) ushort3 QK(uint3 a); __attribute__((overloadable)) ushort4 QL(uint4 a); __attribute__((overloadable)) ushort8 QM(uint8 a); __attribute__((overloadable)) ushort16 QN(uint16 a); __attribute__((overloadable)) long QO(uint a); __attribute__((overloadable)) long2 QP(uint2 a); __attribute__((overloadable)) long3 QQ(uint3 a); __attribute__((overloadable)) long4 QR(uint4 a); __attribute__((overloadable)) long8 QS(uint8 a); __attribute__((overloadable)) long16 QT(uint16 a); __attribute__((overloadable)) ulong QU(uint a); __attribute__((overloadable)) ulong2 QV(uint2 a); __attribute__((overloadable)) ulong3 QW(uint3 a); __attribute__((overloadable)) ulong4 QX(uint4 a); __attribute__((overloadable)) ulong8 QY(uint8 a); __attribute__((overloadable)) ulong16 QZ(uint16 a); __attribute__((overloadable)) float RA(uint a); __attribute__((overloadable)) float2 RB(uint2 a); __attribute__((overloadable)) float3 RC(uint3 a); __attribute__((overloadable)) float4 RD(uint4 a); __attribute__((overloadable)) float8 RE(uint8 a); __attribute__((overloadable)) float16 RF(uint16 a); __attribute__((overloadable)) double RG(uint a); __attribute__((overloadable)) double2 RH(uint2 a); __attribute__((overloadable)) double3 RI(uint3 a); __attribute__((overloadable)) double4 RJ(uint4 a); __attribute__((overloadable)) double8 RK(uint8 a); __attribute__((overloadable)) double16 RL(uint16 a); __attribute__((overloadable)) char PE(short a); __attribute__((overloadable)) char2 PF(short2 a); __attribute__((overloadable)) char3 PG(short3 a); __attribute__((overloadable)) char4 PH(short4 a); __attribute__((overloadable)) char8 PI(short8 a); __attribute__((overloadable)) char16 PJ(short16 a); __attribute__((overloadable)) uchar PK(short a); __attribute__((overloadable)) uchar2 PL(short2 a); __attribute__((overloadable)) uchar3 PM(short3 a); __attribute__((overloadable)) uchar4 PN(short4 a); __attribute__((overloadable)) uchar8 PO(short8 a); __attribute__((overloadable)) uchar16 PP(short16 a); __attribute__((overloadable)) int PQ(short a); __attribute__((overloadable)) int2 PR(short2 a); __attribute__((overloadable)) int3 PS(short3 a); __attribute__((overloadable)) int4 PT(short4 a); __attribute__((overloadable)) int8 PU(short8 a); __attribute__((overloadable)) int16 PV(short16 a); __attribute__((overloadable)) uint PW(short a); __attribute__((overloadable)) uint2 PX(short2 a); __attribute__((overloadable)) uint3 PY(short3 a); __attribute__((overloadable)) uint4 PZ(short4 a); __attribute__((overloadable)) uint8 QA(short8 a); __attribute__((overloadable)) uint16 QB(short16 a); __attribute__((overloadable)) short QC(short a); __attribute__((overloadable)) short2 QD(short2 a); __attribute__((overloadable)) short3 QE(short3 a); __attribute__((overloadable)) short4 QF(short4 a); __attribute__((overloadable)) short8 QG(short8 a); __attribute__((overloadable)) short16 QH(short16 a); __attribute__((overloadable)) ushort QI(short a); __attribute__((overloadable)) ushort2 QJ(short2 a); __attribute__((overloadable)) ushort3 QK(short3 a); __attribute__((overloadable)) ushort4 QL(short4 a); __attribute__((overloadable)) ushort8 QM(short8 a); __attribute__((overloadable)) ushort16 QN(short16 a); __attribute__((overloadable)) long QO(short a); __attribute__((overloadable)) long2 QP(short2 a); __attribute__((overloadable)) long3 QQ(short3 a); __attribute__((overloadable)) long4 QR(short4 a); __attribute__((overloadable)) long8 QS(short8 a); __attribute__((overloadable)) long16 QT(short16 a); __attribute__((overloadable)) ulong QU(short a); __attribute__((overloadable)) ulong2 QV(short2 a); __attribute__((overloadable)) ulong3 QW(short3 a); __attribute__((overloadable)) ulong4 QX(short4 a); __attribute__((overloadable)) ulong8 QY(short8 a); __attribute__((overloadable)) ulong16 QZ(short16 a); __attribute__((overloadable)) float RA(short a); __attribute__((overloadable)) float2 RB(short2 a); __attribute__((overloadable)) float3 RC(short3 a); __attribute__((overloadable)) float4 RD(short4 a); __attribute__((overloadable)) float8 RE(short8 a); __attribute__((overloadable)) float16 RF(short16 a); __attribute__((overloadable)) double RG(short a); __attribute__((overloadable)) double2 RH(short2 a); __attribute__((overloadable)) double3 RI(short3 a); __attribute__((overloadable)) double4 RJ(short4 a); __attribute__((overloadable)) double8 RK(short8 a); __attribute__((overloadable)) double16 RL(short16 a); __attribute__((overloadable)) char PE(ushort a); __attribute__((overloadable)) char2 PF(ushort2 a); __attribute__((overloadable)) char3 PG(ushort3 a); __attribute__((overloadable)) char4 PH(ushort4 a); __attribute__((overloadable)) char8 PI(ushort8 a); __attribute__((overloadable)) char16 PJ(ushort16 a); __attribute__((overloadable)) uchar PK(ushort a); __attribute__((overloadable)) uchar2 PL(ushort2 a); __attribute__((overloadable)) uchar3 PM(ushort3 a); __attribute__((overloadable)) uchar4 PN(ushort4 a); __attribute__((overloadable)) uchar8 PO(ushort8 a); __attribute__((overloadable)) uchar16 PP(ushort16 a); __attribute__((overloadable)) int PQ(ushort a); __attribute__((overloadable)) int2 PR(ushort2 a); __attribute__((overloadable)) int3 PS(ushort3 a); __attribute__((overloadable)) int4 PT(ushort4 a); __attribute__((overloadable)) int8 PU(ushort8 a); __attribute__((overloadable)) int16 PV(ushort16 a); __attribute__((overloadable)) uint PW(ushort a); __attribute__((overloadable)) uint2 PX(ushort2 a); __attribute__((overloadable)) uint3 PY(ushort3 a); __attribute__((overloadable)) uint4 PZ(ushort4 a); __attribute__((overloadable)) uint8 QA(ushort8 a); __attribute__((overloadable)) uint16 QB(ushort16 a); __attribute__((overloadable)) short QC(ushort a); __attribute__((overloadable)) short2 QD(ushort2 a); __attribute__((overloadable)) short3 QE(ushort3 a); __attribute__((overloadable)) short4 QF(ushort4 a); __attribute__((overloadable)) short8 QG(ushort8 a); __attribute__((overloadable)) short16 QH(ushort16 a); __attribute__((overloadable)) ushort QI(ushort a); __attribute__((overloadable)) ushort2 QJ(ushort2 a); __attribute__((overloadable)) ushort3 QK(ushort3 a); __attribute__((overloadable)) ushort4 QL(ushort4 a); __attribute__((overloadable)) ushort8 QM(ushort8 a); __attribute__((overloadable)) ushort16 QN(ushort16 a); __attribute__((overloadable)) long QO(ushort a); __attribute__((overloadable)) long2 QP(ushort2 a); __attribute__((overloadable)) long3 QQ(ushort3 a); __attribute__((overloadable)) long4 QR(ushort4 a); __attribute__((overloadable)) long8 QS(ushort8 a); __attribute__((overloadable)) long16 QT(ushort16 a); __attribute__((overloadable)) ulong QU(ushort a); __attribute__((overloadable)) ulong2 QV(ushort2 a); __attribute__((overloadable)) ulong3 QW(ushort3 a); __attribute__((overloadable)) ulong4 QX(ushort4 a); __attribute__((overloadable)) ulong8 QY(ushort8 a); __attribute__((overloadable)) ulong16 QZ(ushort16 a); __attribute__((overloadable)) float RA(ushort a); __attribute__((overloadable)) float2 RB(ushort2 a); __attribute__((overloadable)) float3 RC(ushort3 a); __attribute__((overloadable)) float4 RD(ushort4 a); __attribute__((overloadable)) float8 RE(ushort8 a); __attribute__((overloadable)) float16 RF(ushort16 a); __attribute__((overloadable)) double RG(ushort a); __attribute__((overloadable)) double2 RH(ushort2 a); __attribute__((overloadable)) double3 RI(ushort3 a); __attribute__((overloadable)) double4 RJ(ushort4 a); __attribute__((overloadable)) double8 RK(ushort8 a); __attribute__((overloadable)) double16 RL(ushort16 a); __attribute__((overloadable)) char PE(long a); __attribute__((overloadable)) char2 PF(long2 a); __attribute__((overloadable)) char3 PG(long3 a); __attribute__((overloadable)) char4 PH(long4 a); __attribute__((overloadable)) char8 PI(long8 a); __attribute__((overloadable)) char16 PJ(long16 a); __attribute__((overloadable)) uchar PK(long a); __attribute__((overloadable)) uchar2 PL(long2 a); __attribute__((overloadable)) uchar3 PM(long3 a); __attribute__((overloadable)) uchar4 PN(long4 a); __attribute__((overloadable)) uchar8 PO(long8 a); __attribute__((overloadable)) uchar16 PP(long16 a); __attribute__((overloadable)) int PQ(long a); __attribute__((overloadable)) int2 PR(long2 a); __attribute__((overloadable)) int3 PS(long3 a); __attribute__((overloadable)) int4 PT(long4 a); __attribute__((overloadable)) int8 PU(long8 a); __attribute__((overloadable)) int16 PV(long16 a); __attribute__((overloadable)) uint PW(long a); __attribute__((overloadable)) uint2 PX(long2 a); __attribute__((overloadable)) uint3 PY(long3 a); __attribute__((overloadable)) uint4 PZ(long4 a); __attribute__((overloadable)) uint8 QA(long8 a); __attribute__((overloadable)) uint16 QB(long16 a); __attribute__((overloadable)) short QC(long a); __attribute__((overloadable)) short2 QD(long2 a); __attribute__((overloadable)) short3 QE(long3 a); __attribute__((overloadable)) short4 QF(long4 a); __attribute__((overloadable)) short8 QG(long8 a); __attribute__((overloadable)) short16 QH(long16 a); __attribute__((overloadable)) ushort QI(long a); __attribute__((overloadable)) ushort2 QJ(long2 a); __attribute__((overloadable)) ushort3 QK(long3 a); __attribute__((overloadable)) ushort4 QL(long4 a); __attribute__((overloadable)) ushort8 QM(long8 a); __attribute__((overloadable)) ushort16 QN(long16 a); __attribute__((overloadable)) long QO(long a); __attribute__((overloadable)) long2 QP(long2 a); __attribute__((overloadable)) long3 QQ(long3 a); __attribute__((overloadable)) long4 QR(long4 a); __attribute__((overloadable)) long8 QS(long8 a); __attribute__((overloadable)) long16 QT(long16 a); __attribute__((overloadable)) ulong QU(long a); __attribute__((overloadable)) ulong2 QV(long2 a); __attribute__((overloadable)) ulong3 QW(long3 a); __attribute__((overloadable)) ulong4 QX(long4 a); __attribute__((overloadable)) ulong8 QY(long8 a); __attribute__((overloadable)) ulong16 QZ(long16 a); __attribute__((overloadable)) float RA(long a); __attribute__((overloadable)) float2 RB(long2 a); __attribute__((overloadable)) float3 RC(long3 a); __attribute__((overloadable)) float4 RD(long4 a); __attribute__((overloadable)) float8 RE(long8 a); __attribute__((overloadable)) float16 RF(long16 a); __attribute__((overloadable)) double RG(long a); __attribute__((overloadable)) double2 RH(long2 a); __attribute__((overloadable)) double3 RI(long3 a); __attribute__((overloadable)) double4 RJ(long4 a); __attribute__((overloadable)) double8 RK(long8 a); __attribute__((overloadable)) double16 RL(long16 a); __attribute__((overloadable)) char PE(ulong a); __attribute__((overloadable)) char2 PF(ulong2 a); __attribute__((overloadable)) char3 PG(ulong3 a); __attribute__((overloadable)) char4 PH(ulong4 a); __attribute__((overloadable)) char8 PI(ulong8 a); __attribute__((overloadable)) char16 PJ(ulong16 a); __attribute__((overloadable)) uchar PK(ulong a); __attribute__((overloadable)) uchar2 PL(ulong2 a); __attribute__((overloadable)) uchar3 PM(ulong3 a); __attribute__((overloadable)) uchar4 PN(ulong4 a); __attribute__((overloadable)) uchar8 PO(ulong8 a); __attribute__((overloadable)) uchar16 PP(ulong16 a); __attribute__((overloadable)) int PQ(ulong a); __attribute__((overloadable)) int2 PR(ulong2 a); __attribute__((overloadable)) int3 PS(ulong3 a); __attribute__((overloadable)) int4 PT(ulong4 a); __attribute__((overloadable)) int8 PU(ulong8 a); __attribute__((overloadable)) int16 PV(ulong16 a); __attribute__((overloadable)) uint PW(ulong a); __attribute__((overloadable)) uint2 PX(ulong2 a); __attribute__((overloadable)) uint3 PY(ulong3 a); __attribute__((overloadable)) uint4 PZ(ulong4 a); __attribute__((overloadable)) uint8 QA(ulong8 a); __attribute__((overloadable)) uint16 QB(ulong16 a); __attribute__((overloadable)) short QC(ulong a); __attribute__((overloadable)) short2 QD(ulong2 a); __attribute__((overloadable)) short3 QE(ulong3 a); __attribute__((overloadable)) short4 QF(ulong4 a); __attribute__((overloadable)) short8 QG(ulong8 a); __attribute__((overloadable)) short16 QH(ulong16 a); __attribute__((overloadable)) ushort QI(ulong a); __attribute__((overloadable)) ushort2 QJ(ulong2 a); __attribute__((overloadable)) ushort3 QK(ulong3 a); __attribute__((overloadable)) ushort4 QL(ulong4 a); __attribute__((overloadable)) ushort8 QM(ulong8 a); __attribute__((overloadable)) ushort16 QN(ulong16 a); __attribute__((overloadable)) long QO(ulong a); __attribute__((overloadable)) long2 QP(ulong2 a); __attribute__((overloadable)) long3 QQ(ulong3 a); __attribute__((overloadable)) long4 QR(ulong4 a); __attribute__((overloadable)) long8 QS(ulong8 a); __attribute__((overloadable)) long16 QT(ulong16 a); __attribute__((overloadable)) ulong QU(ulong a); __attribute__((overloadable)) ulong2 QV(ulong2 a); __attribute__((overloadable)) ulong3 QW(ulong3 a); __attribute__((overloadable)) ulong4 QX(ulong4 a); __attribute__((overloadable)) ulong8 QY(ulong8 a); __attribute__((overloadable)) ulong16 QZ(ulong16 a); __attribute__((overloadable)) float RA(ulong a); __attribute__((overloadable)) float2 RB(ulong2 a); __attribute__((overloadable)) float3 RC(ulong3 a); __attribute__((overloadable)) float4 RD(ulong4 a); __attribute__((overloadable)) float8 RE(ulong8 a); __attribute__((overloadable)) float16 RF(ulong16 a); __attribute__((overloadable)) double RG(ulong a); __attribute__((overloadable)) double2 RH(ulong2 a); __attribute__((overloadable)) double3 RI(ulong3 a); __attribute__((overloadable)) double4 RJ(ulong4 a); __attribute__((overloadable)) double8 RK(ulong8 a); __attribute__((overloadable)) double16 RL(ulong16 a); __attribute__((overloadable)) char PE(float a); __attribute__((overloadable)) char2 PF(float2 a); __attribute__((overloadable)) char3 PG(float3 a); __attribute__((overloadable)) char4 PH(float4 a); __attribute__((overloadable)) char8 PI(float8 a); __attribute__((overloadable)) char16 PJ(float16 a); __attribute__((overloadable)) uchar PK(float a); __attribute__((overloadable)) uchar2 PL(float2 a); __attribute__((overloadable)) uchar3 PM(float3 a); __attribute__((overloadable)) uchar4 PN(float4 a); __attribute__((overloadable)) uchar8 PO(float8 a); __attribute__((overloadable)) uchar16 PP(float16 a); __attribute__((overloadable)) int PQ(float a); __attribute__((overloadable)) int2 PR(float2 a); __attribute__((overloadable)) int3 PS(float3 a); __attribute__((overloadable)) int4 PT(float4 a); __attribute__((overloadable)) int8 PU(float8 a); __attribute__((overloadable)) int16 PV(float16 a); __attribute__((overloadable)) uint PW(float a); __attribute__((overloadable)) uint2 PX(float2 a); __attribute__((overloadable)) uint3 PY(float3 a); __attribute__((overloadable)) uint4 PZ(float4 a); __attribute__((overloadable)) uint8 QA(float8 a); __attribute__((overloadable)) uint16 QB(float16 a); __attribute__((overloadable)) short QC(float a); __attribute__((overloadable)) short2 QD(float2 a); __attribute__((overloadable)) short3 QE(float3 a); __attribute__((overloadable)) short4 QF(float4 a); __attribute__((overloadable)) short8 QG(float8 a); __attribute__((overloadable)) short16 QH(float16 a); __attribute__((overloadable)) ushort QI(float a); __attribute__((overloadable)) ushort2 QJ(float2 a); __attribute__((overloadable)) ushort3 QK(float3 a); __attribute__((overloadable)) ushort4 QL(float4 a); __attribute__((overloadable)) ushort8 QM(float8 a); __attribute__((overloadable)) ushort16 QN(float16 a); __attribute__((overloadable)) long QO(float a); __attribute__((overloadable)) long2 QP(float2 a); __attribute__((overloadable)) long3 QQ(float3 a); __attribute__((overloadable)) long4 QR(float4 a); __attribute__((overloadable)) long8 QS(float8 a); __attribute__((overloadable)) long16 QT(float16 a); __attribute__((overloadable)) ulong QU(float a); __attribute__((overloadable)) ulong2 QV(float2 a); __attribute__((overloadable)) ulong3 QW(float3 a); __attribute__((overloadable)) ulong4 QX(float4 a); __attribute__((overloadable)) ulong8 QY(float8 a); __attribute__((overloadable)) ulong16 QZ(float16 a); __attribute__((overloadable)) float RA(float a); __attribute__((overloadable)) float2 RB(float2 a); __attribute__((overloadable)) float3 RC(float3 a); __attribute__((overloadable)) float4 RD(float4 a); __attribute__((overloadable)) float8 RE(float8 a); __attribute__((overloadable)) float16 RF(float16 a); __attribute__((overloadable)) double RG(float a); __attribute__((overloadable)) double2 RH(float2 a); __attribute__((overloadable)) double3 RI(float3 a); __attribute__((overloadable)) double4 RJ(float4 a); __attribute__((overloadable)) double8 RK(float8 a); __attribute__((overloadable)) double16 RL(float16 a); __attribute__((overloadable)) char PE(double a); __attribute__((overloadable)) char2 PF(double2 a); __attribute__((overloadable)) char3 PG(double3 a); __attribute__((overloadable)) char4 PH(double4 a); __attribute__((overloadable)) char8 PI(double8 a); __attribute__((overloadable)) char16 PJ(double16 a); __attribute__((overloadable)) uchar PK(double a); __attribute__((overloadable)) uchar2 PL(double2 a); __attribute__((overloadable)) uchar3 PM(double3 a); __attribute__((overloadable)) uchar4 PN(double4 a); __attribute__((overloadable)) uchar8 PO(double8 a); __attribute__((overloadable)) uchar16 PP(double16 a); __attribute__((overloadable)) int PQ(double a); __attribute__((overloadable)) int2 PR(double2 a); __attribute__((overloadable)) int3 PS(double3 a); __attribute__((overloadable)) int4 PT(double4 a); __attribute__((overloadable)) int8 PU(double8 a); __attribute__((overloadable)) int16 PV(double16 a); __attribute__((overloadable)) uint PW(double a); __attribute__((overloadable)) uint2 PX(double2 a); __attribute__((overloadable)) uint3 PY(double3 a); __attribute__((overloadable)) uint4 PZ(double4 a); __attribute__((overloadable)) uint8 QA(double8 a); __attribute__((overloadable)) uint16 QB(double16 a); __attribute__((overloadable)) short QC(double a); __attribute__((overloadable)) short2 QD(double2 a); __attribute__((overloadable)) short3 QE(double3 a); __attribute__((overloadable)) short4 QF(double4 a); __attribute__((overloadable)) short8 QG(double8 a); __attribute__((overloadable)) short16 QH(double16 a); __attribute__((overloadable)) ushort QI(double a); __attribute__((overloadable)) ushort2 QJ(double2 a); __attribute__((overloadable)) ushort3 QK(double3 a); __attribute__((overloadable)) ushort4 QL(double4 a); __attribute__((overloadable)) ushort8 QM(double8 a); __attribute__((overloadable)) ushort16 QN(double16 a); __attribute__((overloadable)) long QO(double a); __attribute__((overloadable)) long2 QP(double2 a); __attribute__((overloadable)) long3 QQ(double3 a); __attribute__((overloadable)) long4 QR(double4 a); __attribute__((overloadable)) long8 QS(double8 a); __attribute__((overloadable)) long16 QT(double16 a); __attribute__((overloadable)) ulong QU(double a); __attribute__((overloadable)) ulong2 QV(double2 a); __attribute__((overloadable)) ulong3 QW(double3 a); __attribute__((overloadable)) ulong4 QX(double4 a); __attribute__((overloadable)) ulong8 QY(double8 a); __attribute__((overloadable)) ulong16 QZ(double16 a); __attribute__((overloadable)) float RA(double a); __attribute__((overloadable)) float2 RB(double2 a); __attribute__((overloadable)) float3 RC(double3 a); __attribute__((overloadable)) float4 RD(double4 a); __attribute__((overloadable)) float8 RE(double8 a); __attribute__((overloadable)) float16 RF(double16 a); __attribute__((overloadable)) double RG(double a); __attribute__((overloadable)) double2 RH(double2 a); __attribute__((overloadable)) double3 RI(double3 a); __attribute__((overloadable)) double4 RJ(double4 a); __attribute__((overloadable)) double8 RK(double8 a); __attribute__((overloadable)) double16 RL(double16 a); __attribute__((overloadable)) char RM(char a); __attribute__((overloadable)) char2 RN(char2 a); __attribute__((overloadable)) char3 RO(char3 a); __attribute__((overloadable)) char4 RP(char4 a); __attribute__((overloadable)) char8 RQ(char8 a); __attribute__((overloadable)) char16 RR(char16 a); __attribute__((overloadable)) uchar RS(char a); __attribute__((overloadable)) uchar2 RT(char2 a); __attribute__((overloadable)) uchar3 RU(char3 a); __attribute__((overloadable)) uchar4 RV(char4 a); __attribute__((overloadable)) uchar8 RW(char8 a); __attribute__((overloadable)) uchar16 RX(char16 a); __attribute__((overloadable)) int RY(char a); __attribute__((overloadable)) int2 RZ(char2 a); __attribute__((overloadable)) int3 SA(char3 a); __attribute__((overloadable)) int4 SB(char4 a); __attribute__((overloadable)) int8 SC(char8 a); __attribute__((overloadable)) int16 SD(char16 a); __attribute__((overloadable)) uint SE(char a); __attribute__((overloadable)) uint2 SF(char2 a); __attribute__((overloadable)) uint3 SG(char3 a); __attribute__((overloadable)) uint4 SH(char4 a); __attribute__((overloadable)) uint8 SI(char8 a); __attribute__((overloadable)) uint16 SJ(char16 a); __attribute__((overloadable)) short SK(char a); __attribute__((overloadable)) short2 SL(char2 a); __attribute__((overloadable)) short3 SM(char3 a); __attribute__((overloadable)) short4 SN(char4 a); __attribute__((overloadable)) short8 SO(char8 a); __attribute__((overloadable)) short16 SP(char16 a); __attribute__((overloadable)) ushort SQ(char a); __attribute__((overloadable)) ushort2 SR(char2 a); __attribute__((overloadable)) ushort3 SS(char3 a); __attribute__((overloadable)) ushort4 ST(char4 a); __attribute__((overloadable)) ushort8 SU(char8 a); __attribute__((overloadable)) ushort16 SV(char16 a); __attribute__((overloadable)) long SW(char a); __attribute__((overloadable)) long2 SX(char2 a); __attribute__((overloadable)) long3 SY(char3 a); __attribute__((overloadable)) long4 SZ(char4 a); __attribute__((overloadable)) long8 TA(char8 a); __attribute__((overloadable)) long16 TB(char16 a); __attribute__((overloadable)) ulong TC(char a); __attribute__((overloadable)) ulong2 TD(char2 a); __attribute__((overloadable)) ulong3 TE(char3 a); __attribute__((overloadable)) ulong4 TF(char4 a); __attribute__((overloadable)) ulong8 TG(char8 a); __attribute__((overloadable)) ulong16 TH(char16 a); __attribute__((overloadable)) float TI(char a); __attribute__((overloadable)) float2 TJ(char2 a); __attribute__((overloadable)) float3 TK(char3 a); __attribute__((overloadable)) float4 TL(char4 a); __attribute__((overloadable)) float8 TM(char8 a); __attribute__((overloadable)) float16 TN(char16 a); __attribute__((overloadable)) double TO(char a); __attribute__((overloadable)) double2 TP(char2 a); __attribute__((overloadable)) double3 TQ(char3 a); __attribute__((overloadable)) double4 TR(char4 a); __attribute__((overloadable)) double8 TS(char8 a); __attribute__((overloadable)) double16 TT(char16 a); __attribute__((overloadable)) char RM(uchar a); __attribute__((overloadable)) char2 RN(uchar2 a); __attribute__((overloadable)) char3 RO(uchar3 a); __attribute__((overloadable)) char4 RP(uchar4 a); __attribute__((overloadable)) char8 RQ(uchar8 a); __attribute__((overloadable)) char16 RR(uchar16 a); __attribute__((overloadable)) uchar RS(uchar a); __attribute__((overloadable)) uchar2 RT(uchar2 a); __attribute__((overloadable)) uchar3 RU(uchar3 a); __attribute__((overloadable)) uchar4 RV(uchar4 a); __attribute__((overloadable)) uchar8 RW(uchar8 a); __attribute__((overloadable)) uchar16 RX(uchar16 a); __attribute__((overloadable)) int RY(uchar a); __attribute__((overloadable)) int2 RZ(uchar2 a); __attribute__((overloadable)) int3 SA(uchar3 a); __attribute__((overloadable)) int4 SB(uchar4 a); __attribute__((overloadable)) int8 SC(uchar8 a); __attribute__((overloadable)) int16 SD(uchar16 a); __attribute__((overloadable)) uint SE(uchar a); __attribute__((overloadable)) uint2 SF(uchar2 a); __attribute__((overloadable)) uint3 SG(uchar3 a); __attribute__((overloadable)) uint4 SH(uchar4 a); __attribute__((overloadable)) uint8 SI(uchar8 a); __attribute__((overloadable)) uint16 SJ(uchar16 a); __attribute__((overloadable)) short SK(uchar a); __attribute__((overloadable)) short2 SL(uchar2 a); __attribute__((overloadable)) short3 SM(uchar3 a); __attribute__((overloadable)) short4 SN(uchar4 a); __attribute__((overloadable)) short8 SO(uchar8 a); __attribute__((overloadable)) short16 SP(uchar16 a); __attribute__((overloadable)) ushort SQ(uchar a); __attribute__((overloadable)) ushort2 SR(uchar2 a); __attribute__((overloadable)) ushort3 SS(uchar3 a); __attribute__((overloadable)) ushort4 ST(uchar4 a); __attribute__((overloadable)) ushort8 SU(uchar8 a); __attribute__((overloadable)) ushort16 SV(uchar16 a); __attribute__((overloadable)) long SW(uchar a); __attribute__((overloadable)) long2 SX(uchar2 a); __attribute__((overloadable)) long3 SY(uchar3 a); __attribute__((overloadable)) long4 SZ(uchar4 a); __attribute__((overloadable)) long8 TA(uchar8 a); __attribute__((overloadable)) long16 TB(uchar16 a); __attribute__((overloadable)) ulong TC(uchar a); __attribute__((overloadable)) ulong2 TD(uchar2 a); __attribute__((overloadable)) ulong3 TE(uchar3 a); __attribute__((overloadable)) ulong4 TF(uchar4 a); __attribute__((overloadable)) ulong8 TG(uchar8 a); __attribute__((overloadable)) ulong16 TH(uchar16 a); __attribute__((overloadable)) float TI(uchar a); __attribute__((overloadable)) float2 TJ(uchar2 a); __attribute__((overloadable)) float3 TK(uchar3 a); __attribute__((overloadable)) float4 TL(uchar4 a); __attribute__((overloadable)) float8 TM(uchar8 a); __attribute__((overloadable)) float16 TN(uchar16 a); __attribute__((overloadable)) double TO(uchar a); __attribute__((overloadable)) double2 TP(uchar2 a); __attribute__((overloadable)) double3 TQ(uchar3 a); __attribute__((overloadable)) double4 TR(uchar4 a); __attribute__((overloadable)) double8 TS(uchar8 a); __attribute__((overloadable)) double16 TT(uchar16 a); __attribute__((overloadable)) char RM(int a); __attribute__((overloadable)) char2 RN(int2 a); __attribute__((overloadable)) char3 RO(int3 a); __attribute__((overloadable)) char4 RP(int4 a); __attribute__((overloadable)) char8 RQ(int8 a); __attribute__((overloadable)) char16 RR(int16 a); __attribute__((overloadable)) uchar RS(int a); __attribute__((overloadable)) uchar2 RT(int2 a); __attribute__((overloadable)) uchar3 RU(int3 a); __attribute__((overloadable)) uchar4 RV(int4 a); __attribute__((overloadable)) uchar8 RW(int8 a); __attribute__((overloadable)) uchar16 RX(int16 a); __attribute__((overloadable)) int RY(int a); __attribute__((overloadable)) int2 RZ(int2 a); __attribute__((overloadable)) int3 SA(int3 a); __attribute__((overloadable)) int4 SB(int4 a); __attribute__((overloadable)) int8 SC(int8 a); __attribute__((overloadable)) int16 SD(int16 a); __attribute__((overloadable)) uint SE(int a); __attribute__((overloadable)) uint2 SF(int2 a); __attribute__((overloadable)) uint3 SG(int3 a); __attribute__((overloadable)) uint4 SH(int4 a); __attribute__((overloadable)) uint8 SI(int8 a); __attribute__((overloadable)) uint16 SJ(int16 a); __attribute__((overloadable)) short SK(int a); __attribute__((overloadable)) short2 SL(int2 a); __attribute__((overloadable)) short3 SM(int3 a); __attribute__((overloadable)) short4 SN(int4 a); __attribute__((overloadable)) short8 SO(int8 a); __attribute__((overloadable)) short16 SP(int16 a); __attribute__((overloadable)) ushort SQ(int a); __attribute__((overloadable)) ushort2 SR(int2 a); __attribute__((overloadable)) ushort3 SS(int3 a); __attribute__((overloadable)) ushort4 ST(int4 a); __attribute__((overloadable)) ushort8 SU(int8 a); __attribute__((overloadable)) ushort16 SV(int16 a); __attribute__((overloadable)) long SW(int a); __attribute__((overloadable)) long2 SX(int2 a); __attribute__((overloadable)) long3 SY(int3 a); __attribute__((overloadable)) long4 SZ(int4 a); __attribute__((overloadable)) long8 TA(int8 a); __attribute__((overloadable)) long16 TB(int16 a); __attribute__((overloadable)) ulong TC(int a); __attribute__((overloadable)) ulong2 TD(int2 a); __attribute__((overloadable)) ulong3 TE(int3 a); __attribute__((overloadable)) ulong4 TF(int4 a); __attribute__((overloadable)) ulong8 TG(int8 a); __attribute__((overloadable)) ulong16 TH(int16 a); __attribute__((overloadable)) float TI(int a); __attribute__((overloadable)) float2 TJ(int2 a); __attribute__((overloadable)) float3 TK(int3 a); __attribute__((overloadable)) float4 TL(int4 a); __attribute__((overloadable)) float8 TM(int8 a); __attribute__((overloadable)) float16 TN(int16 a); __attribute__((overloadable)) double TO(int a); __attribute__((overloadable)) double2 TP(int2 a); __attribute__((overloadable)) double3 TQ(int3 a); __attribute__((overloadable)) double4 TR(int4 a); __attribute__((overloadable)) double8 TS(int8 a); __attribute__((overloadable)) double16 TT(int16 a); __attribute__((overloadable)) char RM(uint a); __attribute__((overloadable)) char2 RN(uint2 a); __attribute__((overloadable)) char3 RO(uint3 a); __attribute__((overloadable)) char4 RP(uint4 a); __attribute__((overloadable)) char8 RQ(uint8 a); __attribute__((overloadable)) char16 RR(uint16 a); __attribute__((overloadable)) uchar RS(uint a); __attribute__((overloadable)) uchar2 RT(uint2 a); __attribute__((overloadable)) uchar3 RU(uint3 a); __attribute__((overloadable)) uchar4 RV(uint4 a); __attribute__((overloadable)) uchar8 RW(uint8 a); __attribute__((overloadable)) uchar16 RX(uint16 a); __attribute__((overloadable)) int RY(uint a); __attribute__((overloadable)) int2 RZ(uint2 a); __attribute__((overloadable)) int3 SA(uint3 a); __attribute__((overloadable)) int4 SB(uint4 a); __attribute__((overloadable)) int8 SC(uint8 a); __attribute__((overloadable)) int16 SD(uint16 a); __attribute__((overloadable)) uint SE(uint a); __attribute__((overloadable)) uint2 SF(uint2 a); __attribute__((overloadable)) uint3 SG(uint3 a); __attribute__((overloadable)) uint4 SH(uint4 a); __attribute__((overloadable)) uint8 SI(uint8 a); __attribute__((overloadable)) uint16 SJ(uint16 a); __attribute__((overloadable)) short SK(uint a); __attribute__((overloadable)) short2 SL(uint2 a); __attribute__((overloadable)) short3 SM(uint3 a); __attribute__((overloadable)) short4 SN(uint4 a); __attribute__((overloadable)) short8 SO(uint8 a); __attribute__((overloadable)) short16 SP(uint16 a); __attribute__((overloadable)) ushort SQ(uint a); __attribute__((overloadable)) ushort2 SR(uint2 a); __attribute__((overloadable)) ushort3 SS(uint3 a); __attribute__((overloadable)) ushort4 ST(uint4 a); __attribute__((overloadable)) ushort8 SU(uint8 a); __attribute__((overloadable)) ushort16 SV(uint16 a); __attribute__((overloadable)) long SW(uint a); __attribute__((overloadable)) long2 SX(uint2 a); __attribute__((overloadable)) long3 SY(uint3 a); __attribute__((overloadable)) long4 SZ(uint4 a); __attribute__((overloadable)) long8 TA(uint8 a); __attribute__((overloadable)) long16 TB(uint16 a); __attribute__((overloadable)) ulong TC(uint a); __attribute__((overloadable)) ulong2 TD(uint2 a); __attribute__((overloadable)) ulong3 TE(uint3 a); __attribute__((overloadable)) ulong4 TF(uint4 a); __attribute__((overloadable)) ulong8 TG(uint8 a); __attribute__((overloadable)) ulong16 TH(uint16 a); __attribute__((overloadable)) float TI(uint a); __attribute__((overloadable)) float2 TJ(uint2 a); __attribute__((overloadable)) float3 TK(uint3 a); __attribute__((overloadable)) float4 TL(uint4 a); __attribute__((overloadable)) float8 TM(uint8 a); __attribute__((overloadable)) float16 TN(uint16 a); __attribute__((overloadable)) double TO(uint a); __attribute__((overloadable)) double2 TP(uint2 a); __attribute__((overloadable)) double3 TQ(uint3 a); __attribute__((overloadable)) double4 TR(uint4 a); __attribute__((overloadable)) double8 TS(uint8 a); __attribute__((overloadable)) double16 TT(uint16 a); __attribute__((overloadable)) char RM(short a); __attribute__((overloadable)) char2 RN(short2 a); __attribute__((overloadable)) char3 RO(short3 a); __attribute__((overloadable)) char4 RP(short4 a); __attribute__((overloadable)) char8 RQ(short8 a); __attribute__((overloadable)) char16 RR(short16 a); __attribute__((overloadable)) uchar RS(short a); __attribute__((overloadable)) uchar2 RT(short2 a); __attribute__((overloadable)) uchar3 RU(short3 a); __attribute__((overloadable)) uchar4 RV(short4 a); __attribute__((overloadable)) uchar8 RW(short8 a); __attribute__((overloadable)) uchar16 RX(short16 a); __attribute__((overloadable)) int RY(short a); __attribute__((overloadable)) int2 RZ(short2 a); __attribute__((overloadable)) int3 SA(short3 a); __attribute__((overloadable)) int4 SB(short4 a); __attribute__((overloadable)) int8 SC(short8 a); __attribute__((overloadable)) int16 SD(short16 a); __attribute__((overloadable)) uint SE(short a); __attribute__((overloadable)) uint2 SF(short2 a); __attribute__((overloadable)) uint3 SG(short3 a); __attribute__((overloadable)) uint4 SH(short4 a); __attribute__((overloadable)) uint8 SI(short8 a); __attribute__((overloadable)) uint16 SJ(short16 a); __attribute__((overloadable)) short SK(short a); __attribute__((overloadable)) short2 SL(short2 a); __attribute__((overloadable)) short3 SM(short3 a); __attribute__((overloadable)) short4 SN(short4 a); __attribute__((overloadable)) short8 SO(short8 a); __attribute__((overloadable)) short16 SP(short16 a); __attribute__((overloadable)) ushort SQ(short a); __attribute__((overloadable)) ushort2 SR(short2 a); __attribute__((overloadable)) ushort3 SS(short3 a); __attribute__((overloadable)) ushort4 ST(short4 a); __attribute__((overloadable)) ushort8 SU(short8 a); __attribute__((overloadable)) ushort16 SV(short16 a); __attribute__((overloadable)) long SW(short a); __attribute__((overloadable)) long2 SX(short2 a); __attribute__((overloadable)) long3 SY(short3 a); __attribute__((overloadable)) long4 SZ(short4 a); __attribute__((overloadable)) long8 TA(short8 a); __attribute__((overloadable)) long16 TB(short16 a); __attribute__((overloadable)) ulong TC(short a); __attribute__((overloadable)) ulong2 TD(short2 a); __attribute__((overloadable)) ulong3 TE(short3 a); __attribute__((overloadable)) ulong4 TF(short4 a); __attribute__((overloadable)) ulong8 TG(short8 a); __attribute__((overloadable)) ulong16 TH(short16 a); __attribute__((overloadable)) float TI(short a); __attribute__((overloadable)) float2 TJ(short2 a); __attribute__((overloadable)) float3 TK(short3 a); __attribute__((overloadable)) float4 TL(short4 a); __attribute__((overloadable)) float8 TM(short8 a); __attribute__((overloadable)) float16 TN(short16 a); __attribute__((overloadable)) double TO(short a); __attribute__((overloadable)) double2 TP(short2 a); __attribute__((overloadable)) double3 TQ(short3 a); __attribute__((overloadable)) double4 TR(short4 a); __attribute__((overloadable)) double8 TS(short8 a); __attribute__((overloadable)) double16 TT(short16 a); __attribute__((overloadable)) char RM(ushort a); __attribute__((overloadable)) char2 RN(ushort2 a); __attribute__((overloadable)) char3 RO(ushort3 a); __attribute__((overloadable)) char4 RP(ushort4 a); __attribute__((overloadable)) char8 RQ(ushort8 a); __attribute__((overloadable)) char16 RR(ushort16 a); __attribute__((overloadable)) uchar RS(ushort a); __attribute__((overloadable)) uchar2 RT(ushort2 a); __attribute__((overloadable)) uchar3 RU(ushort3 a); __attribute__((overloadable)) uchar4 RV(ushort4 a); __attribute__((overloadable)) uchar8 RW(ushort8 a); __attribute__((overloadable)) uchar16 RX(ushort16 a); __attribute__((overloadable)) int RY(ushort a); __attribute__((overloadable)) int2 RZ(ushort2 a); __attribute__((overloadable)) int3 SA(ushort3 a); __attribute__((overloadable)) int4 SB(ushort4 a); __attribute__((overloadable)) int8 SC(ushort8 a); __attribute__((overloadable)) int16 SD(ushort16 a); __attribute__((overloadable)) uint SE(ushort a); __attribute__((overloadable)) uint2 SF(ushort2 a); __attribute__((overloadable)) uint3 SG(ushort3 a); __attribute__((overloadable)) uint4 SH(ushort4 a); __attribute__((overloadable)) uint8 SI(ushort8 a); __attribute__((overloadable)) uint16 SJ(ushort16 a); __attribute__((overloadable)) short SK(ushort a); __attribute__((overloadable)) short2 SL(ushort2 a); __attribute__((overloadable)) short3 SM(ushort3 a); __attribute__((overloadable)) short4 SN(ushort4 a); __attribute__((overloadable)) short8 SO(ushort8 a); __attribute__((overloadable)) short16 SP(ushort16 a); __attribute__((overloadable)) ushort SQ(ushort a); __attribute__((overloadable)) ushort2 SR(ushort2 a); __attribute__((overloadable)) ushort3 SS(ushort3 a); __attribute__((overloadable)) ushort4 ST(ushort4 a); __attribute__((overloadable)) ushort8 SU(ushort8 a); __attribute__((overloadable)) ushort16 SV(ushort16 a); __attribute__((overloadable)) long SW(ushort a); __attribute__((overloadable)) long2 SX(ushort2 a); __attribute__((overloadable)) long3 SY(ushort3 a); __attribute__((overloadable)) long4 SZ(ushort4 a); __attribute__((overloadable)) long8 TA(ushort8 a); __attribute__((overloadable)) long16 TB(ushort16 a); __attribute__((overloadable)) ulong TC(ushort a); __attribute__((overloadable)) ulong2 TD(ushort2 a); __attribute__((overloadable)) ulong3 TE(ushort3 a); __attribute__((overloadable)) ulong4 TF(ushort4 a); __attribute__((overloadable)) ulong8 TG(ushort8 a); __attribute__((overloadable)) ulong16 TH(ushort16 a); __attribute__((overloadable)) float TI(ushort a); __attribute__((overloadable)) float2 TJ(ushort2 a); __attribute__((overloadable)) float3 TK(ushort3 a); __attribute__((overloadable)) float4 TL(ushort4 a); __attribute__((overloadable)) float8 TM(ushort8 a); __attribute__((overloadable)) float16 TN(ushort16 a); __attribute__((overloadable)) double TO(ushort a); __attribute__((overloadable)) double2 TP(ushort2 a); __attribute__((overloadable)) double3 TQ(ushort3 a); __attribute__((overloadable)) double4 TR(ushort4 a); __attribute__((overloadable)) double8 TS(ushort8 a); __attribute__((overloadable)) double16 TT(ushort16 a); __attribute__((overloadable)) char RM(long a); __attribute__((overloadable)) char2 RN(long2 a); __attribute__((overloadable)) char3 RO(long3 a); __attribute__((overloadable)) char4 RP(long4 a); __attribute__((overloadable)) char8 RQ(long8 a); __attribute__((overloadable)) char16 RR(long16 a); __attribute__((overloadable)) uchar RS(long a); __attribute__((overloadable)) uchar2 RT(long2 a); __attribute__((overloadable)) uchar3 RU(long3 a); __attribute__((overloadable)) uchar4 RV(long4 a); __attribute__((overloadable)) uchar8 RW(long8 a); __attribute__((overloadable)) uchar16 RX(long16 a); __attribute__((overloadable)) int RY(long a); __attribute__((overloadable)) int2 RZ(long2 a); __attribute__((overloadable)) int3 SA(long3 a); __attribute__((overloadable)) int4 SB(long4 a); __attribute__((overloadable)) int8 SC(long8 a); __attribute__((overloadable)) int16 SD(long16 a); __attribute__((overloadable)) uint SE(long a); __attribute__((overloadable)) uint2 SF(long2 a); __attribute__((overloadable)) uint3 SG(long3 a); __attribute__((overloadable)) uint4 SH(long4 a); __attribute__((overloadable)) uint8 SI(long8 a); __attribute__((overloadable)) uint16 SJ(long16 a); __attribute__((overloadable)) short SK(long a); __attribute__((overloadable)) short2 SL(long2 a); __attribute__((overloadable)) short3 SM(long3 a); __attribute__((overloadable)) short4 SN(long4 a); __attribute__((overloadable)) short8 SO(long8 a); __attribute__((overloadable)) short16 SP(long16 a); __attribute__((overloadable)) ushort SQ(long a); __attribute__((overloadable)) ushort2 SR(long2 a); __attribute__((overloadable)) ushort3 SS(long3 a); __attribute__((overloadable)) ushort4 ST(long4 a); __attribute__((overloadable)) ushort8 SU(long8 a); __attribute__((overloadable)) ushort16 SV(long16 a); __attribute__((overloadable)) long SW(long a); __attribute__((overloadable)) long2 SX(long2 a); __attribute__((overloadable)) long3 SY(long3 a); __attribute__((overloadable)) long4 SZ(long4 a); __attribute__((overloadable)) long8 TA(long8 a); __attribute__((overloadable)) long16 TB(long16 a); __attribute__((overloadable)) ulong TC(long a); __attribute__((overloadable)) ulong2 TD(long2 a); __attribute__((overloadable)) ulong3 TE(long3 a); __attribute__((overloadable)) ulong4 TF(long4 a); __attribute__((overloadable)) ulong8 TG(long8 a); __attribute__((overloadable)) ulong16 TH(long16 a); __attribute__((overloadable)) float TI(long a); __attribute__((overloadable)) float2 TJ(long2 a); __attribute__((overloadable)) float3 TK(long3 a); __attribute__((overloadable)) float4 TL(long4 a); __attribute__((overloadable)) float8 TM(long8 a); __attribute__((overloadable)) float16 TN(long16 a); __attribute__((overloadable)) double TO(long a); __attribute__((overloadable)) double2 TP(long2 a); __attribute__((overloadable)) double3 TQ(long3 a); __attribute__((overloadable)) double4 TR(long4 a); __attribute__((overloadable)) double8 TS(long8 a); __attribute__((overloadable)) double16 TT(long16 a); __attribute__((overloadable)) char RM(ulong a); __attribute__((overloadable)) char2 RN(ulong2 a); __attribute__((overloadable)) char3 RO(ulong3 a); __attribute__((overloadable)) char4 RP(ulong4 a); __attribute__((overloadable)) char8 RQ(ulong8 a); __attribute__((overloadable)) char16 RR(ulong16 a); __attribute__((overloadable)) uchar RS(ulong a); __attribute__((overloadable)) uchar2 RT(ulong2 a); __attribute__((overloadable)) uchar3 RU(ulong3 a); __attribute__((overloadable)) uchar4 RV(ulong4 a); __attribute__((overloadable)) uchar8 RW(ulong8 a); __attribute__((overloadable)) uchar16 RX(ulong16 a); __attribute__((overloadable)) int RY(ulong a); __attribute__((overloadable)) int2 RZ(ulong2 a); __attribute__((overloadable)) int3 SA(ulong3 a); __attribute__((overloadable)) int4 SB(ulong4 a); __attribute__((overloadable)) int8 SC(ulong8 a); __attribute__((overloadable)) int16 SD(ulong16 a); __attribute__((overloadable)) uint SE(ulong a); __attribute__((overloadable)) uint2 SF(ulong2 a); __attribute__((overloadable)) uint3 SG(ulong3 a); __attribute__((overloadable)) uint4 SH(ulong4 a); __attribute__((overloadable)) uint8 SI(ulong8 a); __attribute__((overloadable)) uint16 SJ(ulong16 a); __attribute__((overloadable)) short SK(ulong a); __attribute__((overloadable)) short2 SL(ulong2 a); __attribute__((overloadable)) short3 SM(ulong3 a); __attribute__((overloadable)) short4 SN(ulong4 a); __attribute__((overloadable)) short8 SO(ulong8 a); __attribute__((overloadable)) short16 SP(ulong16 a); __attribute__((overloadable)) ushort SQ(ulong a); __attribute__((overloadable)) ushort2 SR(ulong2 a); __attribute__((overloadable)) ushort3 SS(ulong3 a); __attribute__((overloadable)) ushort4 ST(ulong4 a); __attribute__((overloadable)) ushort8 SU(ulong8 a); __attribute__((overloadable)) ushort16 SV(ulong16 a); __attribute__((overloadable)) long SW(ulong a); __attribute__((overloadable)) long2 SX(ulong2 a); __attribute__((overloadable)) long3 SY(ulong3 a); __attribute__((overloadable)) long4 SZ(ulong4 a); __attribute__((overloadable)) long8 TA(ulong8 a); __attribute__((overloadable)) long16 TB(ulong16 a); __attribute__((overloadable)) ulong TC(ulong a); __attribute__((overloadable)) ulong2 TD(ulong2 a); __attribute__((overloadable)) ulong3 TE(ulong3 a); __attribute__((overloadable)) ulong4 TF(ulong4 a); __attribute__((overloadable)) ulong8 TG(ulong8 a); __attribute__((overloadable)) ulong16 TH(ulong16 a); __attribute__((overloadable)) float TI(ulong a); __attribute__((overloadable)) float2 TJ(ulong2 a); __attribute__((overloadable)) float3 TK(ulong3 a); __attribute__((overloadable)) float4 TL(ulong4 a); __attribute__((overloadable)) float8 TM(ulong8 a); __attribute__((overloadable)) float16 TN(ulong16 a); __attribute__((overloadable)) double TO(ulong a); __attribute__((overloadable)) double2 TP(ulong2 a); __attribute__((overloadable)) double3 TQ(ulong3 a); __attribute__((overloadable)) double4 TR(ulong4 a); __attribute__((overloadable)) double8 TS(ulong8 a); __attribute__((overloadable)) double16 TT(ulong16 a); __attribute__((overloadable)) char RM(float a); __attribute__((overloadable)) char2 RN(float2 a); __attribute__((overloadable)) char3 RO(float3 a); __attribute__((overloadable)) char4 RP(float4 a); __attribute__((overloadable)) char8 RQ(float8 a); __attribute__((overloadable)) char16 RR(float16 a); __attribute__((overloadable)) uchar RS(float a); __attribute__((overloadable)) uchar2 RT(float2 a); __attribute__((overloadable)) uchar3 RU(float3 a); __attribute__((overloadable)) uchar4 RV(float4 a); __attribute__((overloadable)) uchar8 RW(float8 a); __attribute__((overloadable)) uchar16 RX(float16 a); __attribute__((overloadable)) int RY(float a); __attribute__((overloadable)) int2 RZ(float2 a); __attribute__((overloadable)) int3 SA(float3 a); __attribute__((overloadable)) int4 SB(float4 a); __attribute__((overloadable)) int8 SC(float8 a); __attribute__((overloadable)) int16 SD(float16 a); __attribute__((overloadable)) uint SE(float a); __attribute__((overloadable)) uint2 SF(float2 a); __attribute__((overloadable)) uint3 SG(float3 a); __attribute__((overloadable)) uint4 SH(float4 a); __attribute__((overloadable)) uint8 SI(float8 a); __attribute__((overloadable)) uint16 SJ(float16 a); __attribute__((overloadable)) short SK(float a); __attribute__((overloadable)) short2 SL(float2 a); __attribute__((overloadable)) short3 SM(float3 a); __attribute__((overloadable)) short4 SN(float4 a); __attribute__((overloadable)) short8 SO(float8 a); __attribute__((overloadable)) short16 SP(float16 a); __attribute__((overloadable)) ushort SQ(float a); __attribute__((overloadable)) ushort2 SR(float2 a); __attribute__((overloadable)) ushort3 SS(float3 a); __attribute__((overloadable)) ushort4 ST(float4 a); __attribute__((overloadable)) ushort8 SU(float8 a); __attribute__((overloadable)) ushort16 SV(float16 a); __attribute__((overloadable)) long SW(float a); __attribute__((overloadable)) long2 SX(float2 a); __attribute__((overloadable)) long3 SY(float3 a); __attribute__((overloadable)) long4 SZ(float4 a); __attribute__((overloadable)) long8 TA(float8 a); __attribute__((overloadable)) long16 TB(float16 a); __attribute__((overloadable)) ulong TC(float a); __attribute__((overloadable)) ulong2 TD(float2 a); __attribute__((overloadable)) ulong3 TE(float3 a); __attribute__((overloadable)) ulong4 TF(float4 a); __attribute__((overloadable)) ulong8 TG(float8 a); __attribute__((overloadable)) ulong16 TH(float16 a); __attribute__((overloadable)) float TI(float a); __attribute__((overloadable)) float2 TJ(float2 a); __attribute__((overloadable)) float3 TK(float3 a); __attribute__((overloadable)) float4 TL(float4 a); __attribute__((overloadable)) float8 TM(float8 a); __attribute__((overloadable)) float16 TN(float16 a); __attribute__((overloadable)) double TO(float a); __attribute__((overloadable)) double2 TP(float2 a); __attribute__((overloadable)) double3 TQ(float3 a); __attribute__((overloadable)) double4 TR(float4 a); __attribute__((overloadable)) double8 TS(float8 a); __attribute__((overloadable)) double16 TT(float16 a); __attribute__((overloadable)) char RM(double a); __attribute__((overloadable)) char2 RN(double2 a); __attribute__((overloadable)) char3 RO(double3 a); __attribute__((overloadable)) char4 RP(double4 a); __attribute__((overloadable)) char8 RQ(double8 a); __attribute__((overloadable)) char16 RR(double16 a); __attribute__((overloadable)) uchar RS(double a); __attribute__((overloadable)) uchar2 RT(double2 a); __attribute__((overloadable)) uchar3 RU(double3 a); __attribute__((overloadable)) uchar4 RV(double4 a); __attribute__((overloadable)) uchar8 RW(double8 a); __attribute__((overloadable)) uchar16 RX(double16 a); __attribute__((overloadable)) int RY(double a); __attribute__((overloadable)) int2 RZ(double2 a); __attribute__((overloadable)) int3 SA(double3 a); __attribute__((overloadable)) int4 SB(double4 a); __attribute__((overloadable)) int8 SC(double8 a); __attribute__((overloadable)) int16 SD(double16 a); __attribute__((overloadable)) uint SE(double a); __attribute__((overloadable)) uint2 SF(double2 a); __attribute__((overloadable)) uint3 SG(double3 a); __attribute__((overloadable)) uint4 SH(double4 a); __attribute__((overloadable)) uint8 SI(double8 a); __attribute__((overloadable)) uint16 SJ(double16 a); __attribute__((overloadable)) short SK(double a); __attribute__((overloadable)) short2 SL(double2 a); __attribute__((overloadable)) short3 SM(double3 a); __attribute__((overloadable)) short4 SN(double4 a); __attribute__((overloadable)) short8 SO(double8 a); __attribute__((overloadable)) short16 SP(double16 a); __attribute__((overloadable)) ushort SQ(double a); __attribute__((overloadable)) ushort2 SR(double2 a); __attribute__((overloadable)) ushort3 SS(double3 a); __attribute__((overloadable)) ushort4 ST(double4 a); __attribute__((overloadable)) ushort8 SU(double8 a); __attribute__((overloadable)) ushort16 SV(double16 a); __attribute__((overloadable)) long SW(double a); __attribute__((overloadable)) long2 SX(double2 a); __attribute__((overloadable)) long3 SY(double3 a); __attribute__((overloadable)) long4 SZ(double4 a); __attribute__((overloadable)) long8 TA(double8 a); __attribute__((overloadable)) long16 TB(double16 a); __attribute__((overloadable)) ulong TC(double a); __attribute__((overloadable)) ulong2 TD(double2 a); __attribute__((overloadable)) ulong3 TE(double3 a); __attribute__((overloadable)) ulong4 TF(double4 a); __attribute__((overloadable)) ulong8 TG(double8 a); __attribute__((overloadable)) ulong16 TH(double16 a); __attribute__((overloadable)) float TI(double a); __attribute__((overloadable)) float2 TJ(double2 a); __attribute__((overloadable)) float3 TK(double3 a); __attribute__((overloadable)) float4 TL(double4 a); __attribute__((overloadable)) float8 TM(double8 a); __attribute__((overloadable)) float16 TN(double16 a); __attribute__((overloadable)) double TO(double a); __attribute__((overloadable)) double2 TP(double2 a); __attribute__((overloadable)) double3 TQ(double3 a); __attribute__((overloadable)) double4 TR(double4 a); __attribute__((overloadable)) double8 TS(double8 a); __attribute__((overloadable)) double16 TT(double16 a); __attribute__((overloadable)) char TU(char a); __attribute__((overloadable)) char2 TV(char2 a); __attribute__((overloadable)) char3 TW(char3 a); __attribute__((overloadable)) char4 TX(char4 a); __attribute__((overloadable)) char8 TY(char8 a); __attribute__((overloadable)) char16 TZ(char16 a); __attribute__((overloadable)) uchar UA(char a); __attribute__((overloadable)) uchar2 UB(char2 a); __attribute__((overloadable)) uchar3 UC(char3 a); __attribute__((overloadable)) uchar4 UD(char4 a); __attribute__((overloadable)) uchar8 UE(char8 a); __attribute__((overloadable)) uchar16 UF(char16 a); __attribute__((overloadable)) int UG(char a); __attribute__((overloadable)) int2 UH(char2 a); __attribute__((overloadable)) int3 UI(char3 a); __attribute__((overloadable)) int4 UJ(char4 a); __attribute__((overloadable)) int8 UK(char8 a); __attribute__((overloadable)) int16 UL(char16 a); __attribute__((overloadable)) uint UM(char a); __attribute__((overloadable)) uint2 UN(char2 a); __attribute__((overloadable)) uint3 UO(char3 a); __attribute__((overloadable)) uint4 UP(char4 a); __attribute__((overloadable)) uint8 UQ(char8 a); __attribute__((overloadable)) uint16 UR(char16 a); __attribute__((overloadable)) short US(char a); __attribute__((overloadable)) short2 UT(char2 a); __attribute__((overloadable)) short3 UU(char3 a); __attribute__((overloadable)) short4 UV(char4 a); __attribute__((overloadable)) short8 UW(char8 a); __attribute__((overloadable)) short16 UX(char16 a); __attribute__((overloadable)) ushort UY(char a); __attribute__((overloadable)) ushort2 UZ(char2 a); __attribute__((overloadable)) ushort3 VA(char3 a); __attribute__((overloadable)) ushort4 VB(char4 a); __attribute__((overloadable)) ushort8 VC(char8 a); __attribute__((overloadable)) ushort16 VD(char16 a); __attribute__((overloadable)) long VE(char a); __attribute__((overloadable)) long2 VF(char2 a); __attribute__((overloadable)) long3 VG(char3 a); __attribute__((overloadable)) long4 VH(char4 a); __attribute__((overloadable)) long8 VI(char8 a); __attribute__((overloadable)) long16 VJ(char16 a); __attribute__((overloadable)) ulong VK(char a); __attribute__((overloadable)) ulong2 VL(char2 a); __attribute__((overloadable)) ulong3 VM(char3 a); __attribute__((overloadable)) ulong4 VN(char4 a); __attribute__((overloadable)) ulong8 VO(char8 a); __attribute__((overloadable)) ulong16 VP(char16 a); __attribute__((overloadable)) float VQ(char a); __attribute__((overloadable)) float2 VR(char2 a); __attribute__((overloadable)) float3 VS(char3 a); __attribute__((overloadable)) float4 VT(char4 a); __attribute__((overloadable)) float8 VU(char8 a); __attribute__((overloadable)) float16 VV(char16 a); __attribute__((overloadable)) double VW(char a); __attribute__((overloadable)) double2 VX(char2 a); __attribute__((overloadable)) double3 VY(char3 a); __attribute__((overloadable)) double4 VZ(char4 a); __attribute__((overloadable)) double8 WA(char8 a); __attribute__((overloadable)) double16 WB(char16 a); __attribute__((overloadable)) char TU(uchar a); __attribute__((overloadable)) char2 TV(uchar2 a); __attribute__((overloadable)) char3 TW(uchar3 a); __attribute__((overloadable)) char4 TX(uchar4 a); __attribute__((overloadable)) char8 TY(uchar8 a); __attribute__((overloadable)) char16 TZ(uchar16 a); __attribute__((overloadable)) uchar UA(uchar a); __attribute__((overloadable)) uchar2 UB(uchar2 a); __attribute__((overloadable)) uchar3 UC(uchar3 a); __attribute__((overloadable)) uchar4 UD(uchar4 a); __attribute__((overloadable)) uchar8 UE(uchar8 a); __attribute__((overloadable)) uchar16 UF(uchar16 a); __attribute__((overloadable)) int UG(uchar a); __attribute__((overloadable)) int2 UH(uchar2 a); __attribute__((overloadable)) int3 UI(uchar3 a); __attribute__((overloadable)) int4 UJ(uchar4 a); __attribute__((overloadable)) int8 UK(uchar8 a); __attribute__((overloadable)) int16 UL(uchar16 a); __attribute__((overloadable)) uint UM(uchar a); __attribute__((overloadable)) uint2 UN(uchar2 a); __attribute__((overloadable)) uint3 UO(uchar3 a); __attribute__((overloadable)) uint4 UP(uchar4 a); __attribute__((overloadable)) uint8 UQ(uchar8 a); __attribute__((overloadable)) uint16 UR(uchar16 a); __attribute__((overloadable)) short US(uchar a); __attribute__((overloadable)) short2 UT(uchar2 a); __attribute__((overloadable)) short3 UU(uchar3 a); __attribute__((overloadable)) short4 UV(uchar4 a); __attribute__((overloadable)) short8 UW(uchar8 a); __attribute__((overloadable)) short16 UX(uchar16 a); __attribute__((overloadable)) ushort UY(uchar a); __attribute__((overloadable)) ushort2 UZ(uchar2 a); __attribute__((overloadable)) ushort3 VA(uchar3 a); __attribute__((overloadable)) ushort4 VB(uchar4 a); __attribute__((overloadable)) ushort8 VC(uchar8 a); __attribute__((overloadable)) ushort16 VD(uchar16 a); __attribute__((overloadable)) long VE(uchar a); __attribute__((overloadable)) long2 VF(uchar2 a); __attribute__((overloadable)) long3 VG(uchar3 a); __attribute__((overloadable)) long4 VH(uchar4 a); __attribute__((overloadable)) long8 VI(uchar8 a); __attribute__((overloadable)) long16 VJ(uchar16 a); __attribute__((overloadable)) ulong VK(uchar a); __attribute__((overloadable)) ulong2 VL(uchar2 a); __attribute__((overloadable)) ulong3 VM(uchar3 a); __attribute__((overloadable)) ulong4 VN(uchar4 a); __attribute__((overloadable)) ulong8 VO(uchar8 a); __attribute__((overloadable)) ulong16 VP(uchar16 a); __attribute__((overloadable)) float VQ(uchar a); __attribute__((overloadable)) float2 VR(uchar2 a); __attribute__((overloadable)) float3 VS(uchar3 a); __attribute__((overloadable)) float4 VT(uchar4 a); __attribute__((overloadable)) float8 VU(uchar8 a); __attribute__((overloadable)) float16 VV(uchar16 a); __attribute__((overloadable)) double VW(uchar a); __attribute__((overloadable)) double2 VX(uchar2 a); __attribute__((overloadable)) double3 VY(uchar3 a); __attribute__((overloadable)) double4 VZ(uchar4 a); __attribute__((overloadable)) double8 WA(uchar8 a); __attribute__((overloadable)) double16 WB(uchar16 a); __attribute__((overloadable)) char TU(int a); __attribute__((overloadable)) char2 TV(int2 a); __attribute__((overloadable)) char3 TW(int3 a); __attribute__((overloadable)) char4 TX(int4 a); __attribute__((overloadable)) char8 TY(int8 a); __attribute__((overloadable)) char16 TZ(int16 a); __attribute__((overloadable)) uchar UA(int a); __attribute__((overloadable)) uchar2 UB(int2 a); __attribute__((overloadable)) uchar3 UC(int3 a); __attribute__((overloadable)) uchar4 UD(int4 a); __attribute__((overloadable)) uchar8 UE(int8 a); __attribute__((overloadable)) uchar16 UF(int16 a); __attribute__((overloadable)) int UG(int a); __attribute__((overloadable)) int2 UH(int2 a); __attribute__((overloadable)) int3 UI(int3 a); __attribute__((overloadable)) int4 UJ(int4 a); __attribute__((overloadable)) int8 UK(int8 a); __attribute__((overloadable)) int16 UL(int16 a); __attribute__((overloadable)) uint UM(int a); __attribute__((overloadable)) uint2 UN(int2 a); __attribute__((overloadable)) uint3 UO(int3 a); __attribute__((overloadable)) uint4 UP(int4 a); __attribute__((overloadable)) uint8 UQ(int8 a); __attribute__((overloadable)) uint16 UR(int16 a); __attribute__((overloadable)) short US(int a); __attribute__((overloadable)) short2 UT(int2 a); __attribute__((overloadable)) short3 UU(int3 a); __attribute__((overloadable)) short4 UV(int4 a); __attribute__((overloadable)) short8 UW(int8 a); __attribute__((overloadable)) short16 UX(int16 a); __attribute__((overloadable)) ushort UY(int a); __attribute__((overloadable)) ushort2 UZ(int2 a); __attribute__((overloadable)) ushort3 VA(int3 a); __attribute__((overloadable)) ushort4 VB(int4 a); __attribute__((overloadable)) ushort8 VC(int8 a); __attribute__((overloadable)) ushort16 VD(int16 a); __attribute__((overloadable)) long VE(int a); __attribute__((overloadable)) long2 VF(int2 a); __attribute__((overloadable)) long3 VG(int3 a); __attribute__((overloadable)) long4 VH(int4 a); __attribute__((overloadable)) long8 VI(int8 a); __attribute__((overloadable)) long16 VJ(int16 a); __attribute__((overloadable)) ulong VK(int a); __attribute__((overloadable)) ulong2 VL(int2 a); __attribute__((overloadable)) ulong3 VM(int3 a); __attribute__((overloadable)) ulong4 VN(int4 a); __attribute__((overloadable)) ulong8 VO(int8 a); __attribute__((overloadable)) ulong16 VP(int16 a); __attribute__((overloadable)) float VQ(int a); __attribute__((overloadable)) float2 VR(int2 a); __attribute__((overloadable)) float3 VS(int3 a); __attribute__((overloadable)) float4 VT(int4 a); __attribute__((overloadable)) float8 VU(int8 a); __attribute__((overloadable)) float16 VV(int16 a); __attribute__((overloadable)) double VW(int a); __attribute__((overloadable)) double2 VX(int2 a); __attribute__((overloadable)) double3 VY(int3 a); __attribute__((overloadable)) double4 VZ(int4 a); __attribute__((overloadable)) double8 WA(int8 a); __attribute__((overloadable)) double16 WB(int16 a); __attribute__((overloadable)) char TU(uint a); __attribute__((overloadable)) char2 TV(uint2 a); __attribute__((overloadable)) char3 TW(uint3 a); __attribute__((overloadable)) char4 TX(uint4 a); __attribute__((overloadable)) char8 TY(uint8 a); __attribute__((overloadable)) char16 TZ(uint16 a); __attribute__((overloadable)) uchar UA(uint a); __attribute__((overloadable)) uchar2 UB(uint2 a); __attribute__((overloadable)) uchar3 UC(uint3 a); __attribute__((overloadable)) uchar4 UD(uint4 a); __attribute__((overloadable)) uchar8 UE(uint8 a); __attribute__((overloadable)) uchar16 UF(uint16 a); __attribute__((overloadable)) int UG(uint a); __attribute__((overloadable)) int2 UH(uint2 a); __attribute__((overloadable)) int3 UI(uint3 a); __attribute__((overloadable)) int4 UJ(uint4 a); __attribute__((overloadable)) int8 UK(uint8 a); __attribute__((overloadable)) int16 UL(uint16 a); __attribute__((overloadable)) uint UM(uint a); __attribute__((overloadable)) uint2 UN(uint2 a); __attribute__((overloadable)) uint3 UO(uint3 a); __attribute__((overloadable)) uint4 UP(uint4 a); __attribute__((overloadable)) uint8 UQ(uint8 a); __attribute__((overloadable)) uint16 UR(uint16 a); __attribute__((overloadable)) short US(uint a); __attribute__((overloadable)) short2 UT(uint2 a); __attribute__((overloadable)) short3 UU(uint3 a); __attribute__((overloadable)) short4 UV(uint4 a); __attribute__((overloadable)) short8 UW(uint8 a); __attribute__((overloadable)) short16 UX(uint16 a); __attribute__((overloadable)) ushort UY(uint a); __attribute__((overloadable)) ushort2 UZ(uint2 a); __attribute__((overloadable)) ushort3 VA(uint3 a); __attribute__((overloadable)) ushort4 VB(uint4 a); __attribute__((overloadable)) ushort8 VC(uint8 a); __attribute__((overloadable)) ushort16 VD(uint16 a); __attribute__((overloadable)) long VE(uint a); __attribute__((overloadable)) long2 VF(uint2 a); __attribute__((overloadable)) long3 VG(uint3 a); __attribute__((overloadable)) long4 VH(uint4 a); __attribute__((overloadable)) long8 VI(uint8 a); __attribute__((overloadable)) long16 VJ(uint16 a); __attribute__((overloadable)) ulong VK(uint a); __attribute__((overloadable)) ulong2 VL(uint2 a); __attribute__((overloadable)) ulong3 VM(uint3 a); __attribute__((overloadable)) ulong4 VN(uint4 a); __attribute__((overloadable)) ulong8 VO(uint8 a); __attribute__((overloadable)) ulong16 VP(uint16 a); __attribute__((overloadable)) float VQ(uint a); __attribute__((overloadable)) float2 VR(uint2 a); __attribute__((overloadable)) float3 VS(uint3 a); __attribute__((overloadable)) float4 VT(uint4 a); __attribute__((overloadable)) float8 VU(uint8 a); __attribute__((overloadable)) float16 VV(uint16 a); __attribute__((overloadable)) double VW(uint a); __attribute__((overloadable)) double2 VX(uint2 a); __attribute__((overloadable)) double3 VY(uint3 a); __attribute__((overloadable)) double4 VZ(uint4 a); __attribute__((overloadable)) double8 WA(uint8 a); __attribute__((overloadable)) double16 WB(uint16 a); __attribute__((overloadable)) char TU(short a); __attribute__((overloadable)) char2 TV(short2 a); __attribute__((overloadable)) char3 TW(short3 a); __attribute__((overloadable)) char4 TX(short4 a); __attribute__((overloadable)) char8 TY(short8 a); __attribute__((overloadable)) char16 TZ(short16 a); __attribute__((overloadable)) uchar UA(short a); __attribute__((overloadable)) uchar2 UB(short2 a); __attribute__((overloadable)) uchar3 UC(short3 a); __attribute__((overloadable)) uchar4 UD(short4 a); __attribute__((overloadable)) uchar8 UE(short8 a); __attribute__((overloadable)) uchar16 UF(short16 a); __attribute__((overloadable)) int UG(short a); __attribute__((overloadable)) int2 UH(short2 a); __attribute__((overloadable)) int3 UI(short3 a); __attribute__((overloadable)) int4 UJ(short4 a); __attribute__((overloadable)) int8 UK(short8 a); __attribute__((overloadable)) int16 UL(short16 a); __attribute__((overloadable)) uint UM(short a); __attribute__((overloadable)) uint2 UN(short2 a); __attribute__((overloadable)) uint3 UO(short3 a); __attribute__((overloadable)) uint4 UP(short4 a); __attribute__((overloadable)) uint8 UQ(short8 a); __attribute__((overloadable)) uint16 UR(short16 a); __attribute__((overloadable)) short US(short a); __attribute__((overloadable)) short2 UT(short2 a); __attribute__((overloadable)) short3 UU(short3 a); __attribute__((overloadable)) short4 UV(short4 a); __attribute__((overloadable)) short8 UW(short8 a); __attribute__((overloadable)) short16 UX(short16 a); __attribute__((overloadable)) ushort UY(short a); __attribute__((overloadable)) ushort2 UZ(short2 a); __attribute__((overloadable)) ushort3 VA(short3 a); __attribute__((overloadable)) ushort4 VB(short4 a); __attribute__((overloadable)) ushort8 VC(short8 a); __attribute__((overloadable)) ushort16 VD(short16 a); __attribute__((overloadable)) long VE(short a); __attribute__((overloadable)) long2 VF(short2 a); __attribute__((overloadable)) long3 VG(short3 a); __attribute__((overloadable)) long4 VH(short4 a); __attribute__((overloadable)) long8 VI(short8 a); __attribute__((overloadable)) long16 VJ(short16 a); __attribute__((overloadable)) ulong VK(short a); __attribute__((overloadable)) ulong2 VL(short2 a); __attribute__((overloadable)) ulong3 VM(short3 a); __attribute__((overloadable)) ulong4 VN(short4 a); __attribute__((overloadable)) ulong8 VO(short8 a); __attribute__((overloadable)) ulong16 VP(short16 a); __attribute__((overloadable)) float VQ(short a); __attribute__((overloadable)) float2 VR(short2 a); __attribute__((overloadable)) float3 VS(short3 a); __attribute__((overloadable)) float4 VT(short4 a); __attribute__((overloadable)) float8 VU(short8 a); __attribute__((overloadable)) float16 VV(short16 a); __attribute__((overloadable)) double VW(short a); __attribute__((overloadable)) double2 VX(short2 a); __attribute__((overloadable)) double3 VY(short3 a); __attribute__((overloadable)) double4 VZ(short4 a); __attribute__((overloadable)) double8 WA(short8 a); __attribute__((overloadable)) double16 WB(short16 a); __attribute__((overloadable)) char TU(ushort a); __attribute__((overloadable)) char2 TV(ushort2 a); __attribute__((overloadable)) char3 TW(ushort3 a); __attribute__((overloadable)) char4 TX(ushort4 a); __attribute__((overloadable)) char8 TY(ushort8 a); __attribute__((overloadable)) char16 TZ(ushort16 a); __attribute__((overloadable)) uchar UA(ushort a); __attribute__((overloadable)) uchar2 UB(ushort2 a); __attribute__((overloadable)) uchar3 UC(ushort3 a); __attribute__((overloadable)) uchar4 UD(ushort4 a); __attribute__((overloadable)) uchar8 UE(ushort8 a); __attribute__((overloadable)) uchar16 UF(ushort16 a); __attribute__((overloadable)) int UG(ushort a); __attribute__((overloadable)) int2 UH(ushort2 a); __attribute__((overloadable)) int3 UI(ushort3 a); __attribute__((overloadable)) int4 UJ(ushort4 a); __attribute__((overloadable)) int8 UK(ushort8 a); __attribute__((overloadable)) int16 UL(ushort16 a); __attribute__((overloadable)) uint UM(ushort a); __attribute__((overloadable)) uint2 UN(ushort2 a); __attribute__((overloadable)) uint3 UO(ushort3 a); __attribute__((overloadable)) uint4 UP(ushort4 a); __attribute__((overloadable)) uint8 UQ(ushort8 a); __attribute__((overloadable)) uint16 UR(ushort16 a); __attribute__((overloadable)) short US(ushort a); __attribute__((overloadable)) short2 UT(ushort2 a); __attribute__((overloadable)) short3 UU(ushort3 a); __attribute__((overloadable)) short4 UV(ushort4 a); __attribute__((overloadable)) short8 UW(ushort8 a); __attribute__((overloadable)) short16 UX(ushort16 a); __attribute__((overloadable)) ushort UY(ushort a); __attribute__((overloadable)) ushort2 UZ(ushort2 a); __attribute__((overloadable)) ushort3 VA(ushort3 a); __attribute__((overloadable)) ushort4 VB(ushort4 a); __attribute__((overloadable)) ushort8 VC(ushort8 a); __attribute__((overloadable)) ushort16 VD(ushort16 a); __attribute__((overloadable)) long VE(ushort a); __attribute__((overloadable)) long2 VF(ushort2 a); __attribute__((overloadable)) long3 VG(ushort3 a); __attribute__((overloadable)) long4 VH(ushort4 a); __attribute__((overloadable)) long8 VI(ushort8 a); __attribute__((overloadable)) long16 VJ(ushort16 a); __attribute__((overloadable)) ulong VK(ushort a); __attribute__((overloadable)) ulong2 VL(ushort2 a); __attribute__((overloadable)) ulong3 VM(ushort3 a); __attribute__((overloadable)) ulong4 VN(ushort4 a); __attribute__((overloadable)) ulong8 VO(ushort8 a); __attribute__((overloadable)) ulong16 VP(ushort16 a); __attribute__((overloadable)) float VQ(ushort a); __attribute__((overloadable)) float2 VR(ushort2 a); __attribute__((overloadable)) float3 VS(ushort3 a); __attribute__((overloadable)) float4 VT(ushort4 a); __attribute__((overloadable)) float8 VU(ushort8 a); __attribute__((overloadable)) float16 VV(ushort16 a); __attribute__((overloadable)) double VW(ushort a); __attribute__((overloadable)) double2 VX(ushort2 a); __attribute__((overloadable)) double3 VY(ushort3 a); __attribute__((overloadable)) double4 VZ(ushort4 a); __attribute__((overloadable)) double8 WA(ushort8 a); __attribute__((overloadable)) double16 WB(ushort16 a); __attribute__((overloadable)) char TU(long a); __attribute__((overloadable)) char2 TV(long2 a); __attribute__((overloadable)) char3 TW(long3 a); __attribute__((overloadable)) char4 TX(long4 a); __attribute__((overloadable)) char8 TY(long8 a); __attribute__((overloadable)) char16 TZ(long16 a); __attribute__((overloadable)) uchar UA(long a); __attribute__((overloadable)) uchar2 UB(long2 a); __attribute__((overloadable)) uchar3 UC(long3 a); __attribute__((overloadable)) uchar4 UD(long4 a); __attribute__((overloadable)) uchar8 UE(long8 a); __attribute__((overloadable)) uchar16 UF(long16 a); __attribute__((overloadable)) int UG(long a); __attribute__((overloadable)) int2 UH(long2 a); __attribute__((overloadable)) int3 UI(long3 a); __attribute__((overloadable)) int4 UJ(long4 a); __attribute__((overloadable)) int8 UK(long8 a); __attribute__((overloadable)) int16 UL(long16 a); __attribute__((overloadable)) uint UM(long a); __attribute__((overloadable)) uint2 UN(long2 a); __attribute__((overloadable)) uint3 UO(long3 a); __attribute__((overloadable)) uint4 UP(long4 a); __attribute__((overloadable)) uint8 UQ(long8 a); __attribute__((overloadable)) uint16 UR(long16 a); __attribute__((overloadable)) short US(long a); __attribute__((overloadable)) short2 UT(long2 a); __attribute__((overloadable)) short3 UU(long3 a); __attribute__((overloadable)) short4 UV(long4 a); __attribute__((overloadable)) short8 UW(long8 a); __attribute__((overloadable)) short16 UX(long16 a); __attribute__((overloadable)) ushort UY(long a); __attribute__((overloadable)) ushort2 UZ(long2 a); __attribute__((overloadable)) ushort3 VA(long3 a); __attribute__((overloadable)) ushort4 VB(long4 a); __attribute__((overloadable)) ushort8 VC(long8 a); __attribute__((overloadable)) ushort16 VD(long16 a); __attribute__((overloadable)) long VE(long a); __attribute__((overloadable)) long2 VF(long2 a); __attribute__((overloadable)) long3 VG(long3 a); __attribute__((overloadable)) long4 VH(long4 a); __attribute__((overloadable)) long8 VI(long8 a); __attribute__((overloadable)) long16 VJ(long16 a); __attribute__((overloadable)) ulong VK(long a); __attribute__((overloadable)) ulong2 VL(long2 a); __attribute__((overloadable)) ulong3 VM(long3 a); __attribute__((overloadable)) ulong4 VN(long4 a); __attribute__((overloadable)) ulong8 VO(long8 a); __attribute__((overloadable)) ulong16 VP(long16 a); __attribute__((overloadable)) float VQ(long a); __attribute__((overloadable)) float2 VR(long2 a); __attribute__((overloadable)) float3 VS(long3 a); __attribute__((overloadable)) float4 VT(long4 a); __attribute__((overloadable)) float8 VU(long8 a); __attribute__((overloadable)) float16 VV(long16 a); __attribute__((overloadable)) double VW(long a); __attribute__((overloadable)) double2 VX(long2 a); __attribute__((overloadable)) double3 VY(long3 a); __attribute__((overloadable)) double4 VZ(long4 a); __attribute__((overloadable)) double8 WA(long8 a); __attribute__((overloadable)) double16 WB(long16 a); __attribute__((overloadable)) char TU(ulong a); __attribute__((overloadable)) char2 TV(ulong2 a); __attribute__((overloadable)) char3 TW(ulong3 a); __attribute__((overloadable)) char4 TX(ulong4 a); __attribute__((overloadable)) char8 TY(ulong8 a); __attribute__((overloadable)) char16 TZ(ulong16 a); __attribute__((overloadable)) uchar UA(ulong a); __attribute__((overloadable)) uchar2 UB(ulong2 a); __attribute__((overloadable)) uchar3 UC(ulong3 a); __attribute__((overloadable)) uchar4 UD(ulong4 a); __attribute__((overloadable)) uchar8 UE(ulong8 a); __attribute__((overloadable)) uchar16 UF(ulong16 a); __attribute__((overloadable)) int UG(ulong a); __attribute__((overloadable)) int2 UH(ulong2 a); __attribute__((overloadable)) int3 UI(ulong3 a); __attribute__((overloadable)) int4 UJ(ulong4 a); __attribute__((overloadable)) int8 UK(ulong8 a); __attribute__((overloadable)) int16 UL(ulong16 a); __attribute__((overloadable)) uint UM(ulong a); __attribute__((overloadable)) uint2 UN(ulong2 a); __attribute__((overloadable)) uint3 UO(ulong3 a); __attribute__((overloadable)) uint4 UP(ulong4 a); __attribute__((overloadable)) uint8 UQ(ulong8 a); __attribute__((overloadable)) uint16 UR(ulong16 a); __attribute__((overloadable)) short US(ulong a); __attribute__((overloadable)) short2 UT(ulong2 a); __attribute__((overloadable)) short3 UU(ulong3 a); __attribute__((overloadable)) short4 UV(ulong4 a); __attribute__((overloadable)) short8 UW(ulong8 a); __attribute__((overloadable)) short16 UX(ulong16 a); __attribute__((overloadable)) ushort UY(ulong a); __attribute__((overloadable)) ushort2 UZ(ulong2 a); __attribute__((overloadable)) ushort3 VA(ulong3 a); __attribute__((overloadable)) ushort4 VB(ulong4 a); __attribute__((overloadable)) ushort8 VC(ulong8 a); __attribute__((overloadable)) ushort16 VD(ulong16 a); __attribute__((overloadable)) long VE(ulong a); __attribute__((overloadable)) long2 VF(ulong2 a); __attribute__((overloadable)) long3 VG(ulong3 a); __attribute__((overloadable)) long4 VH(ulong4 a); __attribute__((overloadable)) long8 VI(ulong8 a); __attribute__((overloadable)) long16 VJ(ulong16 a); __attribute__((overloadable)) ulong VK(ulong a); __attribute__((overloadable)) ulong2 VL(ulong2 a); __attribute__((overloadable)) ulong3 VM(ulong3 a); __attribute__((overloadable)) ulong4 VN(ulong4 a); __attribute__((overloadable)) ulong8 VO(ulong8 a); __attribute__((overloadable)) ulong16 VP(ulong16 a); __attribute__((overloadable)) float VQ(ulong a); __attribute__((overloadable)) float2 VR(ulong2 a); __attribute__((overloadable)) float3 VS(ulong3 a); __attribute__((overloadable)) float4 VT(ulong4 a); __attribute__((overloadable)) float8 VU(ulong8 a); __attribute__((overloadable)) float16 VV(ulong16 a); __attribute__((overloadable)) double VW(ulong a); __attribute__((overloadable)) double2 VX(ulong2 a); __attribute__((overloadable)) double3 VY(ulong3 a); __attribute__((overloadable)) double4 VZ(ulong4 a); __attribute__((overloadable)) double8 WA(ulong8 a); __attribute__((overloadable)) double16 WB(ulong16 a); __attribute__((overloadable)) char TU(float a); __attribute__((overloadable)) char2 TV(float2 a); __attribute__((overloadable)) char3 TW(float3 a); __attribute__((overloadable)) char4 TX(float4 a); __attribute__((overloadable)) char8 TY(float8 a); __attribute__((overloadable)) char16 TZ(float16 a); __attribute__((overloadable)) uchar UA(float a); __attribute__((overloadable)) uchar2 UB(float2 a); __attribute__((overloadable)) uchar3 UC(float3 a); __attribute__((overloadable)) uchar4 UD(float4 a); __attribute__((overloadable)) uchar8 UE(float8 a); __attribute__((overloadable)) uchar16 UF(float16 a); __attribute__((overloadable)) int UG(float a); __attribute__((overloadable)) int2 UH(float2 a); __attribute__((overloadable)) int3 UI(float3 a); __attribute__((overloadable)) int4 UJ(float4 a); __attribute__((overloadable)) int8 UK(float8 a); __attribute__((overloadable)) int16 UL(float16 a); __attribute__((overloadable)) uint UM(float a); __attribute__((overloadable)) uint2 UN(float2 a); __attribute__((overloadable)) uint3 UO(float3 a); __attribute__((overloadable)) uint4 UP(float4 a); __attribute__((overloadable)) uint8 UQ(float8 a); __attribute__((overloadable)) uint16 UR(float16 a); __attribute__((overloadable)) short US(float a); __attribute__((overloadable)) short2 UT(float2 a); __attribute__((overloadable)) short3 UU(float3 a); __attribute__((overloadable)) short4 UV(float4 a); __attribute__((overloadable)) short8 UW(float8 a); __attribute__((overloadable)) short16 UX(float16 a); __attribute__((overloadable)) ushort UY(float a); __attribute__((overloadable)) ushort2 UZ(float2 a); __attribute__((overloadable)) ushort3 VA(float3 a); __attribute__((overloadable)) ushort4 VB(float4 a); __attribute__((overloadable)) ushort8 VC(float8 a); __attribute__((overloadable)) ushort16 VD(float16 a); __attribute__((overloadable)) long VE(float a); __attribute__((overloadable)) long2 VF(float2 a); __attribute__((overloadable)) long3 VG(float3 a); __attribute__((overloadable)) long4 VH(float4 a); __attribute__((overloadable)) long8 VI(float8 a); __attribute__((overloadable)) long16 VJ(float16 a); __attribute__((overloadable)) ulong VK(float a); __attribute__((overloadable)) ulong2 VL(float2 a); __attribute__((overloadable)) ulong3 VM(float3 a); __attribute__((overloadable)) ulong4 VN(float4 a); __attribute__((overloadable)) ulong8 VO(float8 a); __attribute__((overloadable)) ulong16 VP(float16 a); __attribute__((overloadable)) float VQ(float a); __attribute__((overloadable)) float2 VR(float2 a); __attribute__((overloadable)) float3 VS(float3 a); __attribute__((overloadable)) float4 VT(float4 a); __attribute__((overloadable)) float8 VU(float8 a); __attribute__((overloadable)) float16 VV(float16 a); __attribute__((overloadable)) double VW(float a); __attribute__((overloadable)) double2 VX(float2 a); __attribute__((overloadable)) double3 VY(float3 a); __attribute__((overloadable)) double4 VZ(float4 a); __attribute__((overloadable)) double8 WA(float8 a); __attribute__((overloadable)) double16 WB(float16 a); __attribute__((overloadable)) char TU(double a); __attribute__((overloadable)) char2 TV(double2 a); __attribute__((overloadable)) char3 TW(double3 a); __attribute__((overloadable)) char4 TX(double4 a); __attribute__((overloadable)) char8 TY(double8 a); __attribute__((overloadable)) char16 TZ(double16 a); __attribute__((overloadable)) uchar UA(double a); __attribute__((overloadable)) uchar2 UB(double2 a); __attribute__((overloadable)) uchar3 UC(double3 a); __attribute__((overloadable)) uchar4 UD(double4 a); __attribute__((overloadable)) uchar8 UE(double8 a); __attribute__((overloadable)) uchar16 UF(double16 a); __attribute__((overloadable)) int UG(double a); __attribute__((overloadable)) int2 UH(double2 a); __attribute__((overloadable)) int3 UI(double3 a); __attribute__((overloadable)) int4 UJ(double4 a); __attribute__((overloadable)) int8 UK(double8 a); __attribute__((overloadable)) int16 UL(double16 a); __attribute__((overloadable)) uint UM(double a); __attribute__((overloadable)) uint2 UN(double2 a); __attribute__((overloadable)) uint3 UO(double3 a); __attribute__((overloadable)) uint4 UP(double4 a); __attribute__((overloadable)) uint8 UQ(double8 a); __attribute__((overloadable)) uint16 UR(double16 a); __attribute__((overloadable)) short US(double a); __attribute__((overloadable)) short2 UT(double2 a); __attribute__((overloadable)) short3 UU(double3 a); __attribute__((overloadable)) short4 UV(double4 a); __attribute__((overloadable)) short8 UW(double8 a); __attribute__((overloadable)) short16 UX(double16 a); __attribute__((overloadable)) ushort UY(double a); __attribute__((overloadable)) ushort2 UZ(double2 a); __attribute__((overloadable)) ushort3 VA(double3 a); __attribute__((overloadable)) ushort4 VB(double4 a); __attribute__((overloadable)) ushort8 VC(double8 a); __attribute__((overloadable)) ushort16 VD(double16 a); __attribute__((overloadable)) long VE(double a); __attribute__((overloadable)) long2 VF(double2 a); __attribute__((overloadable)) long3 VG(double3 a); __attribute__((overloadable)) long4 VH(double4 a); __attribute__((overloadable)) long8 VI(double8 a); __attribute__((overloadable)) long16 VJ(double16 a); __attribute__((overloadable)) ulong VK(double a); __attribute__((overloadable)) ulong2 VL(double2 a); __attribute__((overloadable)) ulong3 VM(double3 a); __attribute__((overloadable)) ulong4 VN(double4 a); __attribute__((overloadable)) ulong8 VO(double8 a); __attribute__((overloadable)) ulong16 VP(double16 a); __attribute__((overloadable)) float VQ(double a); __attribute__((overloadable)) float2 VR(double2 a); __attribute__((overloadable)) float3 VS(double3 a); __attribute__((overloadable)) float4 VT(double4 a); __attribute__((overloadable)) float8 VU(double8 a); __attribute__((overloadable)) float16 VV(double16 a); __attribute__((overloadable)) double VW(double a); __attribute__((overloadable)) double2 VX(double2 a); __attribute__((overloadable)) double3 VY(double3 a); __attribute__((overloadable)) double4 VZ(double4 a); __attribute__((overloadable)) double8 WA(double8 a); __attribute__((overloadable)) double16 WB(double16 a); size_t WC(uint a); size_t WD(uint a); size_t WE(uint a); size_t WF(uint a); size_t WG(uint a); size_t WH(uint a); __attribute__((overloadable)) float WI(float a); __attribute__((overloadable)) float2 WI(float2 a); __attribute__((overloadable)) float3 WI(float3 a); __attribute__((overloadable)) float4 WI(float4 a); __attribute__((overloadable)) float8 WI(float8 a); __attribute__((overloadable)) float16 WI(float16 a); __attribute__((overloadable)) double WI(double a); __attribute__((overloadable)) double2 WI(double2 a); __attribute__((overloadable)) double3 WI(double3 a); __attribute__((overloadable)) double4 WI(double4 a); __attribute__((overloadable)) double8 WI(double8 a); __attribute__((overloadable)) double16 WI(double16 a); __attribute__((overloadable)) float WJ(float a) __asm( "llvm.ceil" ".f32"); __attribute__((overloadable)) float2 WJ(float2 a) __asm( "llvm.ceil" ".v2f32"); __attribute__((overloadable)) float3 WJ(float3 a) __asm( "llvm.ceil" ".v3f32"); __attribute__((overloadable)) float4 WJ(float4 a) __asm( "llvm.ceil" ".v4f32"); __attribute__((overloadable)) float8 WJ(float8 a) __asm( "llvm.ceil" ".v8f32"); __attribute__((overloadable)) float16 WJ(float16 a) __asm( "llvm.ceil" ".v16f32"); __attribute__((overloadable)) double WJ(double b) __asm( "llvm.ceil" ".f64"); __attribute__((overloadable)) double2 WJ(double2 b) __asm( "llvm.ceil" ".v2f64"); __attribute__((overloadable)) double3 WJ(double3 b) __asm( "llvm.ceil" ".v3f64"); __attribute__((overloadable)) double4 WJ(double4 b) __asm( "llvm.ceil" ".v4f64"); __attribute__((overloadable)) double8 WJ(double8 b) __asm( "llvm.ceil" ".v8f64"); __attribute__((overloadable)) double16 WJ(double16 b) __asm( "llvm.ceil" ".v16f64"); __attribute__((overloadable)) float WK(float, float, float) __asm( "llvm.fma" ".f32"); __attribute__((overloadable)) float2 WK(float2, float2, float2) __asm( "llvm.fma" ".v2f32"); __attribute__((overloadable)) float3 WK(float3, float3, float3) __asm( "llvm.fma" ".v3f32"); __attribute__((overloadable)) float4 WK(float4, float4, float4) __asm( "llvm.fma" ".v4f32"); __attribute__((overloadable)) float8 WK(float8, float8, float8) __asm( "llvm.fma" ".v8f32"); __attribute__((overloadable)) float16 WK(float16, float16, float16) __asm( "llvm.fma" ".v16f32"); __attribute__((overloadable)) double WK(double, double, double) __asm( "llvm.fma" ".f64"); __attribute__((overloadable)) double2 WK(double2, double2, double2) __asm( "llvm.fma" ".v2f64"); __attribute__((overloadable)) double3 WK(double3, double3, double3) __asm( "llvm.fma" ".v3f64"); __attribute__((overloadable)) double4 WK(double4, double4, double4) __asm( "llvm.fma" ".v4f64"); __attribute__((overloadable)) double8 WK(double8, double8, double8) __asm( "llvm.fma" ".v8f64"); __attribute__((overloadable)) double16 WK(double16, double16, double16) __asm( "llvm.fma" ".v16f64"); __attribute__((overloadable)) float WL(float, float) __asm( "llvm.pow" ".f32"); __attribute__((overloadable)) float2 WL(float2, float2) __asm( "llvm.pow" ".v2f32"); __attribute__((overloadable)) float3 WL(float3, float3) __asm( "llvm.pow" ".v3f32"); __attribute__((overloadable)) float4 WL(float4, float4) __asm( "llvm.pow" ".v4f32"); __attribute__((overloadable)) float8 WL(float8, float8) __asm( "llvm.pow" ".v8f32"); __attribute__((overloadable)) float16 WL(float16, float16) __asm( "llvm.pow" ".v16f32"); __attribute__((overloadable)) double WL(double, double) __asm( "llvm.pow" ".f64"); __attribute__((overloadable)) double2 WL(double2, double2) __asm( "llvm.pow" ".v2f64"); __attribute__((overloadable)) double3 WL(double3, double3) __asm( "llvm.pow" ".v3f64"); __attribute__((overloadable)) double4 WL(double4, double4) __asm( "llvm.pow" ".v4f64"); __attribute__((overloadable)) double8 WL(double8, double8) __asm( "llvm.pow" ".v8f64"); __attribute__((overloadable)) double16 WL(double16, double16) __asm( "llvm.pow" ".v16f64"); __attribute__((overloadable)) float WM(float a, int b) __asm( "llvm.powi" ".f32"); __attribute__((overloadable)) float2 WM(float2 a, int2 b); __attribute__((overloadable)) float3 WM(float3 a, int3 b); __attribute__((overloadable)) float4 WM(float4 a, int4 b); __attribute__((overloadable)) float8 WM(float8 a, int8 b); __attribute__((overloadable)) float16 WM(float16 a, int16 b); __attribute__((overloadable)) double WM(double a, int b) __asm( "llvm.powi" ".f64"); __attribute__((overloadable)) double2 WM(double2 a, int2 b); __attribute__((overloadable)) double3 WM(double3 a, int3 b); __attribute__((overloadable)) double4 WM(double4 a, int4 b); __attribute__((overloadable)) double8 WM(double8 a, int8 b); __attribute__((overloadable)) double16 WM(double16 a, int16 b); __attribute__((overloadable)) uchar WN(char a); __attribute__((overloadable)) uchar2 WN(char2 a); __attribute__((overloadable)) uchar3 WN(char3 a); __attribute__((overloadable)) uchar4 WN(char4 a); __attribute__((overloadable)) uchar8 WN(char8 a); __attribute__((overloadable)) uchar16 WN(char16 a); __attribute__((overloadable)) uchar WN(uchar a); __attribute__((overloadable)) uchar2 WN(uchar2 a); __attribute__((overloadable)) uchar3 WN(uchar3 a); __attribute__((overloadable)) uchar4 WN(uchar4 a); __attribute__((overloadable)) uchar8 WN(uchar8 a); __attribute__((overloadable)) uchar16 WN(uchar16 a); __attribute__((overloadable)) ushort WN(short a); __attribute__((overloadable)) ushort2 WN(short2 a); __attribute__((overloadable)) ushort3 WN(short3 a); __attribute__((overloadable)) ushort4 WN(short4 a); __attribute__((overloadable)) ushort8 WN(short8 a); __attribute__((overloadable)) ushort16 WN(short16 a); __attribute__((overloadable)) ushort WN(ushort a); __attribute__((overloadable)) ushort2 WN(ushort2 a); __attribute__((overloadable)) ushort3 WN(ushort3 a); __attribute__((overloadable)) ushort4 WN(ushort4 a); __attribute__((overloadable)) ushort8 WN(ushort8 a); __attribute__((overloadable)) ushort16 WN(ushort16 a); __attribute__((overloadable)) uint WN(int a); __attribute__((overloadable)) uint2 WN(int2 a); __attribute__((overloadable)) uint3 WN(int3 a); __attribute__((overloadable)) uint4 WN(int4 a); __attribute__((overloadable)) uint8 WN(int8 a); __attribute__((overloadable)) uint16 WN(int16 a); __attribute__((overloadable)) uint WN(uint a); __attribute__((overloadable)) uint2 WN(uint2 a); __attribute__((overloadable)) uint3 WN(uint3 a); __attribute__((overloadable)) uint4 WN(uint4 a); __attribute__((overloadable)) uint8 WN(uint8 a); __attribute__((overloadable)) uint16 WN(uint16 a); __attribute__((overloadable)) ulong WN(long a); __attribute__((overloadable)) ulong2 WN(long2 a); __attribute__((overloadable)) ulong3 WN(long3 a); __attribute__((overloadable)) ulong4 WN(long4 a); __attribute__((overloadable)) ulong8 WN(long8 a); __attribute__((overloadable)) ulong16 WN(long16 a); __attribute__((overloadable)) ulong WN(ulong a); __attribute__((overloadable)) ulong2 WN(ulong2 a); __attribute__((overloadable)) ulong3 WN(ulong3 a); __attribute__((overloadable)) ulong4 WN(ulong4 a); __attribute__((overloadable)) ulong8 WN(ulong8 a); __attribute__((overloadable)) ulong16 WN(ulong16 a); __attribute__((overloadable)) int WO(int a, int b, int c); __attribute__((overloadable)) int2 WO(int2 a, int2 b, int2 c); __attribute__((overloadable)) int3 WO(int3 a, int3 b, int3 c); __attribute__((overloadable)) int4 WO(int4 a, int4 b, int4 c); __attribute__((overloadable)) int8 WO(int8 a, int8 b, int8 c); __attribute__((overloadable)) int16 WO(int16 a, int16 b, int16 c); __attribute__((overloadable)) uint WO(uint a, uint b, uint c); __attribute__((overloadable)) uint2 WO(uint2 a, uint2 b, uint2 c); __attribute__((overloadable)) uint3 WO(uint3 a, uint3 b, uint3 c); __attribute__((overloadable)) uint4 WO(uint4 a, uint4 b, uint4 c); __attribute__((overloadable)) uint8 WO(uint8 a, uint8 b, uint8 c); __attribute__((overloadable)) uint16 WO(uint16 a, uint16 b, uint16 c); __attribute__((overloadable)) short WP(char a, uchar b); __attribute__((overloadable)) short2 WP(char2 a, uchar2 b); __attribute__((overloadable)) short3 WP(char3 a, uchar3 b); __attribute__((overloadable)) short4 WP(char4 a, uchar4 b); __attribute__((overloadable)) short8 WP(char8 a, uchar8 b); __attribute__((overloadable)) short16 WP(char16 a, uchar16 b); __attribute__((overloadable)) ushort WP(uchar a, uchar b); __attribute__((overloadable)) ushort2 WP(uchar2 a, uchar2 b); __attribute__((overloadable)) ushort3 WP(uchar3 a, uchar3 b); __attribute__((overloadable)) ushort4 WP(uchar4 a, uchar4 b); __attribute__((overloadable)) ushort8 WP(uchar8 a, uchar8 b); __attribute__((overloadable)) ushort16 WP(uchar16 a, uchar16 b); __attribute__((overloadable)) int WP(short a, ushort b); __attribute__((overloadable)) int2 WP(short2 a, ushort2 b); __attribute__((overloadable)) int3 WP(short3 a, ushort3 b); __attribute__((overloadable)) int4 WP(short4 a, ushort4 b); __attribute__((overloadable)) int8 WP(short8 a, ushort8 b); __attribute__((overloadable)) int16 WP(short16 a, ushort16 b); __attribute__((overloadable)) uint WP(ushort a, ushort b); __attribute__((overloadable)) uint2 WP(ushort2 a, ushort2 b); __attribute__((overloadable)) uint3 WP(ushort3 a, ushort3 b); __attribute__((overloadable)) uint4 WP(ushort4 a, ushort4 b); __attribute__((overloadable)) uint8 WP(ushort8 a, ushort8 b); __attribute__((overloadable)) uint16 WP(ushort16 a, ushort16 b); __attribute__((overloadable)) long WP(int a, uint b); __attribute__((overloadable)) long2 WP(int2 a, uint2 b); __attribute__((overloadable)) long3 WP(int3 a, uint3 b); __attribute__((overloadable)) long4 WP(int4 a, uint4 b); __attribute__((overloadable)) long8 WP(int8 a, uint8 b); __attribute__((overloadable)) long16 WP(int16 a, uint16 b); __attribute__((overloadable)) ulong WP(uint a, uint b); __attribute__((overloadable)) ulong2 WP(uint2 a, uint2 b); __attribute__((overloadable)) ulong3 WP(uint3 a, uint3 b); __attribute__((overloadable)) ulong4 WP(uint4 a, uint4 b); __attribute__((overloadable)) ulong8 WP(uint8 a, uint8 b); __attribute__((overloadable)) ulong16 WP(uint16 a, uint16 b); __attribute__((overloadable)) double2 WQ(size_t a, const __private double* b); __attribute__((overloadable)) double3 WR(size_t a, const __private double* b); __attribute__((overloadable)) double4 WS(size_t a, const __private double* b); __attribute__((overloadable)) double8 WT(size_t a, const __private double* b); __attribute__((overloadable)) double16 WU(size_t a, const __private double* b); __attribute__((overloadable)) double2 WQ(size_t a, const __local double* b); __attribute__((overloadable)) double3 WR(size_t a, const __local double* b); __attribute__((overloadable)) double4 WS(size_t a, const __local double* b); __attribute__((overloadable)) double8 WT(size_t a, const __local double* b); __attribute__((overloadable)) double16 WU(size_t a, const __local double* b); __attribute__((overloadable)) double2 WQ(size_t a, const __constant double* b); __attribute__((overloadable)) double3 WR(size_t a, const __constant double* b); __attribute__((overloadable)) double4 WS(size_t a, const __constant double* b); __attribute__((overloadable)) double8 WT(size_t a, const __constant double* b); __attribute__((overloadable)) double16 WU(size_t a, const __constant double* b); __attribute__((overloadable)) double2 WQ(size_t a, const __global double* b); __attribute__((overloadable)) double3 WR(size_t a, const __global double* b); __attribute__((overloadable)) double4 WS(size_t a, const __global double* b); __attribute__((overloadable)) double8 WT(size_t a, const __global double* b); __attribute__((overloadable)) double16 WU(size_t a, const __global double* b); __attribute__((overloadable)) char2 WQ(size_t a, const __private char* b); __attribute__((overloadable)) char3 WR(size_t a, const __private char* b); __attribute__((overloadable)) char4 WS(size_t a, const __private char* b); __attribute__((overloadable)) char8 WT(size_t a, const __private char* b); __attribute__((overloadable)) char16 WU(size_t a, const __private char* b); __attribute__((overloadable)) char2 WQ(size_t a, const __local char* b); __attribute__((overloadable)) char3 WR(size_t a, const __local char* b); __attribute__((overloadable)) char4 WS(size_t a, const __local char* b); __attribute__((overloadable)) char8 WT(size_t a, const __local char* b); __attribute__((overloadable)) char16 WU(size_t a, const __local char* b); __attribute__((overloadable)) char2 WQ(size_t a, const __constant char* b); __attribute__((overloadable)) char3 WR(size_t a, const __constant char* b); __attribute__((overloadable)) char4 WS(size_t a, const __constant char* b); __attribute__((overloadable)) char8 WT(size_t a, const __constant char* b); __attribute__((overloadable)) char16 WU(size_t a, const __constant char* b); __attribute__((overloadable)) char2 WQ(size_t a, const __global char* b); __attribute__((overloadable)) char3 WR(size_t a, const __global char* b); __attribute__((overloadable)) char4 WS(size_t a, const __global char* b); __attribute__((overloadable)) char8 WT(size_t a, const __global char* b); __attribute__((overloadable)) char16 WU(size_t a, const __global char* b); __attribute__((overloadable)) uchar2 WQ(size_t a, const __private uchar* b); __attribute__((overloadable)) uchar3 WR(size_t a, const __private uchar* b); __attribute__((overloadable)) uchar4 WS(size_t a, const __private uchar* b); __attribute__((overloadable)) uchar8 WT(size_t a, const __private uchar* b); __attribute__((overloadable)) uchar16 WU(size_t a, const __private uchar* b); __attribute__((overloadable)) uchar2 WQ(size_t a, const __local uchar* b); __attribute__((overloadable)) uchar3 WR(size_t a, const __local uchar* b); __attribute__((overloadable)) uchar4 WS(size_t a, const __local uchar* b); __attribute__((overloadable)) uchar8 WT(size_t a, const __local uchar* b); __attribute__((overloadable)) uchar16 WU(size_t a, const __local uchar* b); __attribute__((overloadable)) uchar2 WQ(size_t a, const __constant uchar* b); __attribute__((overloadable)) uchar3 WR(size_t a, const __constant uchar* b); __attribute__((overloadable)) uchar4 WS(size_t a, const __constant uchar* b); __attribute__((overloadable)) uchar8 WT(size_t a, const __constant uchar* b); __attribute__((overloadable)) uchar16 WU(size_t a, const __constant uchar* b); __attribute__((overloadable)) uchar2 WQ(size_t a, const __global uchar* b); __attribute__((overloadable)) uchar3 WR(size_t a, const __global uchar* b); __attribute__((overloadable)) uchar4 WS(size_t a, const __global uchar* b); __attribute__((overloadable)) uchar8 WT(size_t a, const __global uchar* b); __attribute__((overloadable)) uchar16 WU(size_t a, const __global uchar* b); __attribute__((overloadable)) short2 WQ(size_t a, const __private short* b); __attribute__((overloadable)) short3 WR(size_t a, const __private short* b); __attribute__((overloadable)) short4 WS(size_t a, const __private short* b); __attribute__((overloadable)) short8 WT(size_t a, const __private short* b); __attribute__((overloadable)) short16 WU(size_t a, const __private short* b); __attribute__((overloadable)) short2 WQ(size_t a, const __local short* b); __attribute__((overloadable)) short3 WR(size_t a, const __local short* b); __attribute__((overloadable)) short4 WS(size_t a, const __local short* b); __attribute__((overloadable)) short8 WT(size_t a, const __local short* b); __attribute__((overloadable)) short16 WU(size_t a, const __local short* b); __attribute__((overloadable)) short2 WQ(size_t a, const __constant short* b); __attribute__((overloadable)) short3 WR(size_t a, const __constant short* b); __attribute__((overloadable)) short4 WS(size_t a, const __constant short* b); __attribute__((overloadable)) short8 WT(size_t a, const __constant short* b); __attribute__((overloadable)) short16 WU(size_t a, const __constant short* b); __attribute__((overloadable)) short2 WQ(size_t a, const __global short* b); __attribute__((overloadable)) short3 WR(size_t a, const __global short* b); __attribute__((overloadable)) short4 WS(size_t a, const __global short* b); __attribute__((overloadable)) short8 WT(size_t a, const __global short* b); __attribute__((overloadable)) short16 WU(size_t a, const __global short* b); __attribute__((overloadable)) ushort2 WQ(size_t a, const __private ushort* b); __attribute__((overloadable)) ushort3 WR(size_t a, const __private ushort* b); __attribute__((overloadable)) ushort4 WS(size_t a, const __private ushort* b); __attribute__((overloadable)) ushort8 WT(size_t a, const __private ushort* b); __attribute__((overloadable)) ushort16 WU(size_t a, const __private ushort* b); __attribute__((overloadable)) ushort2 WQ(size_t a, const __local ushort* b); __attribute__((overloadable)) ushort3 WR(size_t a, const __local ushort* b); __attribute__((overloadable)) ushort4 WS(size_t a, const __local ushort* b); __attribute__((overloadable)) ushort8 WT(size_t a, const __local ushort* b); __attribute__((overloadable)) ushort16 WU(size_t a, const __local ushort* b); __attribute__((overloadable)) ushort2 WQ(size_t a, const __constant ushort* b); __attribute__((overloadable)) ushort3 WR(size_t a, const __constant ushort* b); __attribute__((overloadable)) ushort4 WS(size_t a, const __constant ushort* b); __attribute__((overloadable)) ushort8 WT(size_t a, const __constant ushort* b); __attribute__((overloadable)) ushort16 WU(size_t a, const __constant ushort* b); __attribute__((overloadable)) ushort2 WQ(size_t a, const __global ushort* b); __attribute__((overloadable)) ushort3 WR(size_t a, const __global ushort* b); __attribute__((overloadable)) ushort4 WS(size_t a, const __global ushort* b); __attribute__((overloadable)) ushort8 WT(size_t a, const __global ushort* b); __attribute__((overloadable)) ushort16 WU(size_t a, const __global ushort* b); __attribute__((overloadable)) int2 WQ(size_t a, const __private int* b); __attribute__((overloadable)) int3 WR(size_t a, const __private int* b); __attribute__((overloadable)) int4 WS(size_t a, const __private int* b); __attribute__((overloadable)) int8 WT(size_t a, const __private int* b); __attribute__((overloadable)) int16 WU(size_t a, const __private int* b); __attribute__((overloadable)) int2 WQ(size_t a, const __local int* b); __attribute__((overloadable)) int3 WR(size_t a, const __local int* b); __attribute__((overloadable)) int4 WS(size_t a, const __local int* b); __attribute__((overloadable)) int8 WT(size_t a, const __local int* b); __attribute__((overloadable)) int16 WU(size_t a, const __local int* b); __attribute__((overloadable)) int2 WQ(size_t a, const __constant int* b); __attribute__((overloadable)) int3 WR(size_t a, const __constant int* b); __attribute__((overloadable)) int4 WS(size_t a, const __constant int* b); __attribute__((overloadable)) int8 WT(size_t a, const __constant int* b); __attribute__((overloadable)) int16 WU(size_t a, const __constant int* b); __attribute__((overloadable)) int2 WQ(size_t a, const __global int* b); __attribute__((overloadable)) int3 WR(size_t a, const __global int* b); __attribute__((overloadable)) int4 WS(size_t a, const __global int* b); __attribute__((overloadable)) int8 WT(size_t a, const __global int* b); __attribute__((overloadable)) int16 WU(size_t a, const __global int* b); __attribute__((overloadable)) uint2 WQ(size_t a, const __private uint* b); __attribute__((overloadable)) uint3 WR(size_t a, const __private uint* b); __attribute__((overloadable)) uint4 WS(size_t a, const __private uint* b); __attribute__((overloadable)) uint8 WT(size_t a, const __private uint* b); __attribute__((overloadable)) uint16 WU(size_t a, const __private uint* b); __attribute__((overloadable)) uint2 WQ(size_t a, const __local uint* b); __attribute__((overloadable)) uint3 WR(size_t a, const __local uint* b); __attribute__((overloadable)) uint4 WS(size_t a, const __local uint* b); __attribute__((overloadable)) uint8 WT(size_t a, const __local uint* b); __attribute__((overloadable)) uint16 WU(size_t a, const __local uint* b); __attribute__((overloadable)) uint2 WQ(size_t a, const __constant uint* b); __attribute__((overloadable)) uint3 WR(size_t a, const __constant uint* b); __attribute__((overloadable)) uint4 WS(size_t a, const __constant uint* b); __attribute__((overloadable)) uint8 WT(size_t a, const __constant uint* b); __attribute__((overloadable)) uint16 WU(size_t a, const __constant uint* b); __attribute__((overloadable)) uint2 WQ(size_t a, const __global uint* b); __attribute__((overloadable)) uint3 WR(size_t a, const __global uint* b); __attribute__((overloadable)) uint4 WS(size_t a, const __global uint* b); __attribute__((overloadable)) uint8 WT(size_t a, const __global uint* b); __attribute__((overloadable)) uint16 WU(size_t a, const __global uint* b); __attribute__((overloadable)) long2 WQ(size_t a, const __private long* b); __attribute__((overloadable)) long3 WR(size_t a, const __private long* b); __attribute__((overloadable)) long4 WS(size_t a, const __private long* b); __attribute__((overloadable)) long8 WT(size_t a, const __private long* b); __attribute__((overloadable)) long16 WU(size_t a, const __private long* b); __attribute__((overloadable)) long2 WQ(size_t a, const __local long* b); __attribute__((overloadable)) long3 WR(size_t a, const __local long* b); __attribute__((overloadable)) long4 WS(size_t a, const __local long* b); __attribute__((overloadable)) long8 WT(size_t a, const __local long* b); __attribute__((overloadable)) long16 WU(size_t a, const __local long* b); __attribute__((overloadable)) long2 WQ(size_t a, const __constant long* b); __attribute__((overloadable)) long3 WR(size_t a, const __constant long* b); __attribute__((overloadable)) long4 WS(size_t a, const __constant long* b); __attribute__((overloadable)) long8 WT(size_t a, const __constant long* b); __attribute__((overloadable)) long16 WU(size_t a, const __constant long* b); __attribute__((overloadable)) long2 WQ(size_t a, const __global long* b); __attribute__((overloadable)) long3 WR(size_t a, const __global long* b); __attribute__((overloadable)) long4 WS(size_t a, const __global long* b); __attribute__((overloadable)) long8 WT(size_t a, const __global long* b); __attribute__((overloadable)) long16 WU(size_t a, const __global long* b); __attribute__((overloadable)) ulong2 WQ(size_t a, const __private ulong* b); __attribute__((overloadable)) ulong3 WR(size_t a, const __private ulong* b); __attribute__((overloadable)) ulong4 WS(size_t a, const __private ulong* b); __attribute__((overloadable)) ulong8 WT(size_t a, const __private ulong* b); __attribute__((overloadable)) ulong16 WU(size_t a, const __private ulong* b); __attribute__((overloadable)) ulong2 WQ(size_t a, const __local ulong* b); __attribute__((overloadable)) ulong3 WR(size_t a, const __local ulong* b); __attribute__((overloadable)) ulong4 WS(size_t a, const __local ulong* b); __attribute__((overloadable)) ulong8 WT(size_t a, const __local ulong* b); __attribute__((overloadable)) ulong16 WU(size_t a, const __local ulong* b); __attribute__((overloadable)) ulong2 WQ(size_t a, const __constant ulong* b); __attribute__((overloadable)) ulong3 WR(size_t a, const __constant ulong* b); __attribute__((overloadable)) ulong4 WS(size_t a, const __constant ulong* b); __attribute__((overloadable)) ulong8 WT(size_t a, const __constant ulong* b); __attribute__((overloadable)) ulong16 WU(size_t a, const __constant ulong* b); __attribute__((overloadable)) ulong2 WQ(size_t a, const __global ulong* b); __attribute__((overloadable)) ulong3 WR(size_t a, const __global ulong* b); __attribute__((overloadable)) ulong4 WS(size_t a, const __global ulong* b); __attribute__((overloadable)) ulong8 WT(size_t a, const __global ulong* b); __attribute__((overloadable)) ulong16 WU(size_t a, const __global ulong* b); __attribute__((overloadable)) float2 WQ(size_t a, const __private float* b); __attribute__((overloadable)) float3 WR(size_t a, const __private float* b); __attribute__((overloadable)) float4 WS(size_t a, const __private float* b); __attribute__((overloadable)) float8 WT(size_t a, const __private float* b); __attribute__((overloadable)) float16 WU(size_t a, const __private float* b); __attribute__((overloadable)) float2 WQ(size_t a, const __local float* b); __attribute__((overloadable)) float3 WR(size_t a, const __local float* b); __attribute__((overloadable)) float4 WS(size_t a, const __local float* b); __attribute__((overloadable)) float8 WT(size_t a, const __local float* b); __attribute__((overloadable)) float16 WU(size_t a, const __local float* b); __attribute__((overloadable)) float2 WQ(size_t a, const __constant float* b); __attribute__((overloadable)) float3 WR(size_t a, const __constant float* b); __attribute__((overloadable)) float4 WS(size_t a, const __constant float* b); __attribute__((overloadable)) float8 WT(size_t a, const __constant float* b); __attribute__((overloadable)) float16 WU(size_t a, const __constant float* b); __attribute__((overloadable)) float2 WQ(size_t a, const __global float* b); __attribute__((overloadable)) float3 WR(size_t a, const __global float* b); __attribute__((overloadable)) float4 WS(size_t a, const __global float* b); __attribute__((overloadable)) float8 WT(size_t a, const __global float* b); __attribute__((overloadable)) float16 WU(size_t a, const __global float* b); __attribute__((overloadable)) void WV(double2 a, size_t b, __private double* c); __attribute__((overloadable)) void WW(double3 a, size_t b, __private double* c); __attribute__((overloadable)) void WX(double4 a, size_t b, __private double* c); __attribute__((overloadable)) void WY(double8 a, size_t b, __private double* c); __attribute__((overloadable)) void WZ(double16 a, size_t b, __private double* c); __attribute__((overloadable)) void WV(double2 a, size_t b, __local double* c); __attribute__((overloadable)) void WW(double3 a, size_t b, __local double* c); __attribute__((overloadable)) void WX(double4 a, size_t b, __local double* c); __attribute__((overloadable)) void WY(double8 a, size_t b, __local double* c); __attribute__((overloadable)) void WZ(double16 a, size_t b, __local double* c); __attribute__((overloadable)) void WV(double2 a, size_t b, __global double* c); __attribute__((overloadable)) void WW(double3 a, size_t b, __global double* c); __attribute__((overloadable)) void WX(double4 a, size_t b, __global double* c); __attribute__((overloadable)) void WY(double8 a, size_t b, __global double* c); __attribute__((overloadable)) void WZ(double16 a, size_t b, __global double* c); __attribute__((overloadable)) void WV(char2 a, size_t b, __private char* c); __attribute__((overloadable)) void WW(char3 a, size_t b, __private char* c); __attribute__((overloadable)) void WX(char4 a, size_t b, __private char* c); __attribute__((overloadable)) void WY(char8 a, size_t b, __private char* c); __attribute__((overloadable)) void WZ(char16 a, size_t b, __private char* c); __attribute__((overloadable)) void WV(char2 a, size_t b, __local char* c); __attribute__((overloadable)) void WW(char3 a, size_t b, __local char* c); __attribute__((overloadable)) void WX(char4 a, size_t b, __local char* c); __attribute__((overloadable)) void WY(char8 a, size_t b, __local char* c); __attribute__((overloadable)) void WZ(char16 a, size_t b, __local char* c); __attribute__((overloadable)) void WV(char2 a, size_t b, __global char* c); __attribute__((overloadable)) void WW(char3 a, size_t b, __global char* c); __attribute__((overloadable)) void WX(char4 a, size_t b, __global char* c); __attribute__((overloadable)) void WY(char8 a, size_t b, __global char* c); __attribute__((overloadable)) void WZ(char16 a, size_t b, __global char* c); __attribute__((overloadable)) void WV(uchar2 a, size_t b, __private uchar* c); __attribute__((overloadable)) void WW(uchar3 a, size_t b, __private uchar* c); __attribute__((overloadable)) void WX(uchar4 a, size_t b, __private uchar* c); __attribute__((overloadable)) void WY(uchar8 a, size_t b, __private uchar* c); __attribute__((overloadable)) void WZ(uchar16 a, size_t b, __private uchar* c); __attribute__((overloadable)) void WV(uchar2 a, size_t b, __local uchar* c); __attribute__((overloadable)) void WW(uchar3 a, size_t b, __local uchar* c); __attribute__((overloadable)) void WX(uchar4 a, size_t b, __local uchar* c); __attribute__((overloadable)) void WY(uchar8 a, size_t b, __local uchar* c); __attribute__((overloadable)) void WZ(uchar16 a, size_t b, __local uchar* c); __attribute__((overloadable)) void WV(uchar2 a, size_t b, __global uchar* c); __attribute__((overloadable)) void WW(uchar3 a, size_t b, __global uchar* c); __attribute__((overloadable)) void WX(uchar4 a, size_t b, __global uchar* c); __attribute__((overloadable)) void WY(uchar8 a, size_t b, __global uchar* c); __attribute__((overloadable)) void WZ(uchar16 a, size_t b, __global uchar* c); __attribute__((overloadable)) void WV(short2 a, size_t b, __private short* c); __attribute__((overloadable)) void WW(short3 a, size_t b, __private short* c); __attribute__((overloadable)) void WX(short4 a, size_t b, __private short* c); __attribute__((overloadable)) void WY(short8 a, size_t b, __private short* c); __attribute__((overloadable)) void WZ(short16 a, size_t b, __private short* c); __attribute__((overloadable)) void WV(short2 a, size_t b, __local short* c); __attribute__((overloadable)) void WW(short3 a, size_t b, __local short* c); __attribute__((overloadable)) void WX(short4 a, size_t b, __local short* c); __attribute__((overloadable)) void WY(short8 a, size_t b, __local short* c); __attribute__((overloadable)) void WZ(short16 a, size_t b, __local short* c); __attribute__((overloadable)) void WV(short2 a, size_t b, __global short* c); __attribute__((overloadable)) void WW(short3 a, size_t b, __global short* c); __attribute__((overloadable)) void WX(short4 a, size_t b, __global short* c); __attribute__((overloadable)) void WY(short8 a, size_t b, __global short* c); __attribute__((overloadable)) void WZ(short16 a, size_t b, __global short* c); __attribute__((overloadable)) void WV(ushort2 a, size_t b, __private ushort* c); __attribute__((overloadable)) void WW(ushort3 a, size_t b, __private ushort* c); __attribute__((overloadable)) void WX(ushort4 a, size_t b, __private ushort* c); __attribute__((overloadable)) void WY(ushort8 a, size_t b, __private ushort* c); __attribute__((overloadable)) void WZ(ushort16 a, size_t b, __private ushort* c); __attribute__((overloadable)) void WV(ushort2 a, size_t b, __local ushort* c); __attribute__((overloadable)) void WW(ushort3 a, size_t b, __local ushort* c); __attribute__((overloadable)) void WX(ushort4 a, size_t b, __local ushort* c); __attribute__((overloadable)) void WY(ushort8 a, size_t b, __local ushort* c); __attribute__((overloadable)) void WZ(ushort16 a, size_t b, __local ushort* c); __attribute__((overloadable)) void WV(ushort2 a, size_t b, __global ushort* c); __attribute__((overloadable)) void WW(ushort3 a, size_t b, __global ushort* c); __attribute__((overloadable)) void WX(ushort4 a, size_t b, __global ushort* c); __attribute__((overloadable)) void WY(ushort8 a, size_t b, __global ushort* c); __attribute__((overloadable)) void WZ(ushort16 a, size_t b, __global ushort* c); __attribute__((overloadable)) void WV(int2 a, size_t b, __private int* c); __attribute__((overloadable)) void WW(int3 a, size_t b, __private int* c); __attribute__((overloadable)) void WX(int4 a, size_t b, __private int* c); __attribute__((overloadable)) void WY(int8 a, size_t b, __private int* c); __attribute__((overloadable)) void WZ(int16 a, size_t b, __private int* c); __attribute__((overloadable)) void WV(int2 a, size_t b, __local int* c); __attribute__((overloadable)) void WW(int3 a, size_t b, __local int* c); __attribute__((overloadable)) void WX(int4 a, size_t b, __local int* c); __attribute__((overloadable)) void WY(int8 a, size_t b, __local int* c); __attribute__((overloadable)) void WZ(int16 a, size_t b, __local int* c); __attribute__((overloadable)) void WV(int2 a, size_t b, __global int* c); __attribute__((overloadable)) void WW(int3 a, size_t b, __global int* c); __attribute__((overloadable)) void WX(int4 a, size_t b, __global int* c); __attribute__((overloadable)) void WY(int8 a, size_t b, __global int* c); __attribute__((overloadable)) void WZ(int16 a, size_t b, __global int* c); __attribute__((overloadable)) void WV(uint2 a, size_t b, __private uint* c); __attribute__((overloadable)) void WW(uint3 a, size_t b, __private uint* c); __attribute__((overloadable)) void WX(uint4 a, size_t b, __private uint* c); __attribute__((overloadable)) void WY(uint8 a, size_t b, __private uint* c); __attribute__((overloadable)) void WZ(uint16 a, size_t b, __private uint* c); __attribute__((overloadable)) void WV(uint2 a, size_t b, __local uint* c); __attribute__((overloadable)) void WW(uint3 a, size_t b, __local uint* c); __attribute__((overloadable)) void WX(uint4 a, size_t b, __local uint* c); __attribute__((overloadable)) void WY(uint8 a, size_t b, __local uint* c); __attribute__((overloadable)) void WZ(uint16 a, size_t b, __local uint* c); __attribute__((overloadable)) void WV(uint2 a, size_t b, __global uint* c); __attribute__((overloadable)) void WW(uint3 a, size_t b, __global uint* c); __attribute__((overloadable)) void WX(uint4 a, size_t b, __global uint* c); __attribute__((overloadable)) void WY(uint8 a, size_t b, __global uint* c); __attribute__((overloadable)) void WZ(uint16 a, size_t b, __global uint* c); __attribute__((overloadable)) void WV(long2 a, size_t b, __private long* c); __attribute__((overloadable)) void WW(long3 a, size_t b, __private long* c); __attribute__((overloadable)) void WX(long4 a, size_t b, __private long* c); __attribute__((overloadable)) void WY(long8 a, size_t b, __private long* c); __attribute__((overloadable)) void WZ(long16 a, size_t b, __private long* c); __attribute__((overloadable)) void WV(long2 a, size_t b, __local long* c); __attribute__((overloadable)) void WW(long3 a, size_t b, __local long* c); __attribute__((overloadable)) void WX(long4 a, size_t b, __local long* c); __attribute__((overloadable)) void WY(long8 a, size_t b, __local long* c); __attribute__((overloadable)) void WZ(long16 a, size_t b, __local long* c); __attribute__((overloadable)) void WV(long2 a, size_t b, __global long* c); __attribute__((overloadable)) void WW(long3 a, size_t b, __global long* c); __attribute__((overloadable)) void WX(long4 a, size_t b, __global long* c); __attribute__((overloadable)) void WY(long8 a, size_t b, __global long* c); __attribute__((overloadable)) void WZ(long16 a, size_t b, __global long* c); __attribute__((overloadable)) void WV(ulong2 a, size_t b, __private ulong* c); __attribute__((overloadable)) void WW(ulong3 a, size_t b, __private ulong* c); __attribute__((overloadable)) void WX(ulong4 a, size_t b, __private ulong* c); __attribute__((overloadable)) void WY(ulong8 a, size_t b, __private ulong* c); __attribute__((overloadable)) void WZ(ulong16 a, size_t b, __private ulong* c); __attribute__((overloadable)) void WV(ulong2 a, size_t b, __local ulong* c); __attribute__((overloadable)) void WW(ulong3 a, size_t b, __local ulong* c); __attribute__((overloadable)) void WX(ulong4 a, size_t b, __local ulong* c); __attribute__((overloadable)) void WY(ulong8 a, size_t b, __local ulong* c); __attribute__((overloadable)) void WZ(ulong16 a, size_t b, __local ulong* c); __attribute__((overloadable)) void WV(ulong2 a, size_t b, __global ulong* c); __attribute__((overloadable)) void WW(ulong3 a, size_t b, __global ulong* c); __attribute__((overloadable)) void WX(ulong4 a, size_t b, __global ulong* c); __attribute__((overloadable)) void WY(ulong8 a, size_t b, __global ulong* c); __attribute__((overloadable)) void WZ(ulong16 a, size_t b, __global ulong* c); __attribute__((overloadable)) void WV(float2 a, size_t b, __private float* c); __attribute__((overloadable)) void WW(float3 a, size_t b, __private float* c); __attribute__((overloadable)) void WX(float4 a, size_t b, __private float* c); __attribute__((overloadable)) void WY(float8 a, size_t b, __private float* c); __attribute__((overloadable)) void WZ(float16 a, size_t b, __private float* c); __attribute__((overloadable)) void WV(float2 a, size_t b, __local float* c); __attribute__((overloadable)) void WW(float3 a, size_t b, __local float* c); __attribute__((overloadable)) void WX(float4 a, size_t b, __local float* c); __attribute__((overloadable)) void WY(float8 a, size_t b, __local float* c); __attribute__((overloadable)) void WZ(float16 a, size_t b, __local float* c); __attribute__((overloadable)) void WV(float2 a, size_t b, __global float* c); __attribute__((overloadable)) void WW(float3 a, size_t b, __global float* c); __attribute__((overloadable)) void WX(float4 a, size_t b, __global float* c); __attribute__((overloadable)) void WY(float8 a, size_t b, __global float* c); __attribute__((overloadable)) void WZ(float16 a, size_t b, __global float* c); __attribute__((overloadable)) float3 XA(float3 a, float3 b); __attribute__((overloadable)) float4 XA(float4 a, float4 b); __attribute__((overloadable)) double3 XA(double3 a, double3 b); __attribute__((overloadable)) double4 XA(double4 a, double4 b); __attribute__((overloadable)) float XB(float a, float b); __attribute__((overloadable)) float XB(float2 a, float2 b); __attribute__((overloadable)) float XB(float3 a, float3 b); __attribute__((overloadable)) float XB(float4 a, float4 b); __attribute__((overloadable)) double XB(double a, double b); __attribute__((overloadable)) double XB(double2 a, double2 b); __attribute__((overloadable)) double XB(double3 a, double3 b); __attribute__((overloadable)) double XB(double4 a, double4 b); __attribute__((overloadable)) int XC(char a); __attribute__((overloadable)) int XC(char2 a); __attribute__((overloadable)) int XC(char3 a); __attribute__((overloadable)) int XC(char4 a); __attribute__((overloadable)) int XC(char8 a); __attribute__((overloadable)) int XC(char16 a); __attribute__((overloadable)) int XC(short a); __attribute__((overloadable)) int XC(short2 a); __attribute__((overloadable)) int XC(short3 a); __attribute__((overloadable)) int XC(short4 a); __attribute__((overloadable)) int XC(short8 a); __attribute__((overloadable)) int XC(short16 a); __attribute__((overloadable)) int XC(int a); __attribute__((overloadable)) int XC(int2 a); __attribute__((overloadable)) int XC(int3 a); __attribute__((overloadable)) int XC(int4 a); __attribute__((overloadable)) int XC(int8 a); __attribute__((overloadable)) int XC(int16 a); __attribute__((overloadable)) int XC(long a); __attribute__((overloadable)) int XC(long2 a); __attribute__((overloadable)) int XC(long3 a); __attribute__((overloadable)) int XC(long4 a); __attribute__((overloadable)) int XC(long8 a); __attribute__((overloadable)) int XC(long16 a); __attribute__((overloadable)) int XD(char a); __attribute__((overloadable)) int XD(char2 a); __attribute__((overloadable)) int XD(char3 a); __attribute__((overloadable)) int XD(char4 a); __attribute__((overloadable)) int XD(char8 a); __attribute__((overloadable)) int XD(char16 a); __attribute__((overloadable)) int XD(short a); __attribute__((overloadable)) int XD(short2 a); __attribute__((overloadable)) int XD(short3 a); __attribute__((overloadable)) int XD(short4 a); __attribute__((overloadable)) int XD(short8 a); __attribute__((overloadable)) int XD(short16 a); __attribute__((overloadable)) int XD(int a); __attribute__((overloadable)) int XD(int2 a); __attribute__((overloadable)) int XD(int3 a); __attribute__((overloadable)) int XD(int4 a); __attribute__((overloadable)) int XD(int8 a); __attribute__((overloadable)) int XD(int16 a); __attribute__((overloadable)) int XD(long a); __attribute__((overloadable)) int XD(long2 a); __attribute__((overloadable)) int XD(long3 a); __attribute__((overloadable)) int XD(long4 a); __attribute__((overloadable)) int XD(long8 a); __attribute__((overloadable)) int XD(long16 a); __attribute__((overloadable)) int XE(float a, float b); __attribute__((overloadable)) int2 XE(float2 a, float2 b); __attribute__((overloadable)) int3 XE(float3 a, float3 b); __attribute__((overloadable)) int4 XE(float4 a, float4 b); __attribute__((overloadable)) int8 XE(float8 a, float8 b); __attribute__((overloadable)) int16 XE(float16 a, float16 b); __attribute__((overloadable)) int XE(double a, double b); __attribute__((overloadable)) long2 XE(double2 a, double2 b); __attribute__((overloadable)) long3 XE(double3 a, double3 b); __attribute__((overloadable)) long4 XE(double4 a, double4 b); __attribute__((overloadable)) long8 XE(double8 a, double8 b); __attribute__((overloadable)) long16 XE(double16 a, double16 b); __attribute__((overloadable)) int XF(float a); __attribute__((overloadable)) int2 XF(float2 a); __attribute__((overloadable)) int3 XF(float3 a); __attribute__((overloadable)) int4 XF(float4 a); __attribute__((overloadable)) int8 XF(float8 a); __attribute__((overloadable)) int16 XF(float16 a); __attribute__((overloadable)) int XF(double a); __attribute__((overloadable)) long2 XF(double2 a); __attribute__((overloadable)) long3 XF(double3 a); __attribute__((overloadable)) long4 XF(double4 a); __attribute__((overloadable)) long8 XF(double8 a); __attribute__((overloadable)) long16 XF(double16 a); __attribute__((overloadable)) int XG(float); __attribute__((overloadable)) int2 XG(float2); __attribute__((overloadable)) int3 XG(float3); __attribute__((overloadable)) int4 XG(float4); __attribute__((overloadable)) int8 XG(float8); __attribute__((overloadable)) int16 XG(float16); __attribute__((overloadable)) int XG(double); __attribute__((overloadable)) long2 XG(double2); __attribute__((overloadable)) long3 XG(double3); __attribute__((overloadable)) long4 XG(double4); __attribute__((overloadable)) long8 XG(double8); __attribute__((overloadable)) long16 XG(double16); __attribute__((overloadable)) int XH(float); __attribute__((overloadable)) int2 XH(float2); __attribute__((overloadable)) int3 XH(float3); __attribute__((overloadable)) int4 XH(float4); __attribute__((overloadable)) int8 XH(float8); __attribute__((overloadable)) int16 XH(float16); __attribute__((overloadable)) int XH(double); __attribute__((overloadable)) long2 XH(double2); __attribute__((overloadable)) long3 XH(double3); __attribute__((overloadable)) long4 XH(double4); __attribute__((overloadable)) long8 XH(double8); __attribute__((overloadable)) long16 XH(double16); typedef uint cl_mem_fence_flags; void XI(cl_mem_fence_flags a); __attribute__((overloadable)) event_t XJ(local char* a, const global char* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local char2* a, const global char2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local char4* a, const global char4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local char8* a, const global char8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local char16* a, const global char16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uchar* a, const global uchar* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uchar2* a, const global uchar2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uchar4* a, const global uchar4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uchar8* a, const global uchar8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uchar16* a, const global uchar16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local short* a, const global short* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local short2* a, const global short2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local short4* a, const global short4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local short8* a, const global short8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local short16* a, const global short16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ushort* a, const global ushort* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ushort2* a, const global ushort2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ushort4* a, const global ushort4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ushort8* a, const global ushort8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ushort16* a, const global ushort16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local int* a, const global int* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local int2* a, const global int2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local int4* a, const global int4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local int8* a, const global int8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local int16* a, const global int16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uint* a, const global uint* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uint2* a, const global uint2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uint4* a, const global uint4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uint8* a, const global uint8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local uint16* a, const global uint16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local float* a, const global float* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local float2* a, const global float2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local float4* a, const global float4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local float8* a, const global float8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local float16* a, const global float16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local long* a, const global long* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local long2* a, const global long2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local long4* a, const global long4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local long8* a, const global long8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local long16* a, const global long16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ulong* a, const global ulong* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ulong2* a, const global ulong2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ulong4* a, const global ulong4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ulong8* a, const global ulong8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local ulong16* a, const global ulong16* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local double* a, const global double* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local double2* a, const global double2* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local double4* a, const global double4* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local double8* a, const global double8* b, size_t c, event_t d); __attribute__((overloadable)) event_t XJ(local double16* a, const global double16* b, size_t c, event_t d); void XK(int a, event_t* b); __attribute__((overloadable)) int XL(volatile global int*, int); __attribute__((overloadable)) int XL(volatile local int*, int); __attribute__((overloadable)) uint XL(volatile global uint*, uint); __attribute__((overloadable)) uint XL(volatile local uint*, uint); __attribute__((overloadable)) int XM(volatile global int*, int, int); __attribute__((overloadable)) int XM(volatile local int*, int, int); __attribute__((overloadable)) uint XM(volatile global uint*, uint, uint); __attribute__((overloadable)) uint XM(volatile local uint*, uint, uint); XN(float); __attribute__((overloadable)) int XO(global int* a, int b); __attribute__((overloadable)) unsigned int XO(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XP(global int* a, int b, int c); __attribute__((overloadable)) unsigned int XP(global unsigned int* a, unsigned int b, unsigned int c); __attribute__((overloadable)) int XQ(global int* a); __attribute__((overloadable)) unsigned int XQ(global unsigned int* a); __attribute__((overloadable)) int XR(global int* a); __attribute__((overloadable)) unsigned int XR(global unsigned int* a); __attribute__((overloadable)) int XS(global int* a, int b); __attribute__((overloadable)) unsigned int XS(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XT(global int* a, int b); __attribute__((overloadable)) unsigned int XT(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XU(global int* a, int b); __attribute__((overloadable)) unsigned int XU(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XV(global int* a, int b); __attribute__((overloadable)) unsigned int XV(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XW(global int* a, int b); __attribute__((overloadable)) unsigned int XW(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XX(global int* a, int b); __attribute__((overloadable)) unsigned int XX(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XY(global int* a, int b); __attribute__((overloadable)) unsigned int XY(global unsigned int* a, unsigned int b); __attribute__((overloadable)) int XO(local int* a, int b); __attribute__((overloadable)) unsigned int XO(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XP(local int* a, int b, int c); __attribute__((overloadable)) unsigned int XP(local unsigned int* a, unsigned int b, unsigned int c); __attribute__((overloadable)) int XQ(local int* a); __attribute__((overloadable)) unsigned int XQ(local unsigned int* a); __attribute__((overloadable)) int XR(local int* a); __attribute__((overloadable)) unsigned int XR(local unsigned int* a); __attribute__((overloadable)) int XS(local int* a, int b); __attribute__((overloadable)) unsigned int XS(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XT(local int* a, int b); __attribute__((overloadable)) unsigned int XT(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XU(local int* a, int b); __attribute__((overloadable)) unsigned int XU(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XV(local int* a, int b); __attribute__((overloadable)) unsigned int XV(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XW(local int* a, int b); __attribute__((overloadable)) unsigned int XW(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XX(local int* a, int b); __attribute__((overloadable)) unsigned int XX(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XY(local int* a, int b); __attribute__((overloadable)) unsigned int XY(local unsigned int* a, unsigned int b); __attribute__((overloadable)) int XZ(image2d_t a); __attribute__((overloadable)) int XZ(image3d_t a); __attribute__((overloadable)) int YA(image2d_t a); __attribute__((overloadable)) int YA(image3d_t a); __attribute__((overloadable)) int YB(image3d_t a); __attribute__((overloadable)) int YC(image2d_t a); __attribute__((overloadable)) int YC(image3d_t a); __attribute__((overloadable)) int YD(image2d_t a); __attribute__((overloadable)) int YD(image3d_t a); __attribute__((overloadable)) int2 YE(image2d_t a); __attribute__((overloadable)) int4 YE(image3d_t a); __attribute__((overloadable)) void YF(image2d_t a, int2 b, float4 c); __attribute__((overloadable)) void YG(image2d_t a, int2 b, int4 c); __attribute__((overloadable)) void YH(image2d_t a, int2 b, uint4 c); __attribute__((overloadable)) float4 YI(image2d_t a, sampler_t b, int2 c); __attribute__((overloadable)) float4 YI(image2d_t a, sampler_t b, float2 c); __attribute__((overloadable)) int4 YJ(image2d_t a, sampler_t b, int2 c); __attribute__((overloadable)) int4 YJ(image2d_t a, sampler_t b, float2 c); __attribute__((overloadable)) uint4 YK(image2d_t a, sampler_t b, int2 c); __attribute__((overloadable)) uint4 YK(image2d_t a, sampler_t b, float2 c); char YL(char, char); uchar YM(uchar, uchar); short YN(short, short); ushort YO(ushort, ushort); int YP(int, int); uint YQ(uint, uint); long YR(long, long); ulong YS(ulong, ulong); __attribute__((overloadable)) __attribute__((always_inline)) char YT(char a, char b) {
  return YL(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) uchar YT(uchar a, uchar b) {
  return YM(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) short YT(short a, short b) {
  return YN(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) ushort YT(ushort a, ushort b) {
  return YO(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) int YT(int a, int b) {
  return YP(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) uint YT(uint a, uint b) {
  return YQ(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) long YT(long a, long b) {
  return YR(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) ulong YT(ulong a, ulong b) {
  return YS(a, b);
}

__attribute__((overloadable)) __attribute__((always_inline)) char2 YT(char2 a, char2 b) { return ( char2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) char3 YT(char3 a, char3 b) { return ( char3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) char4 YT(char4 a, char4 b) { return ( char4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) char8 YT(char8 a, char8 b) { return ( char8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) char16 YT(char16 a, char16 b) { return ( char16a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) uchar2 YT(uchar2 a, uchar2 b) { return ( uchar2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) uchar3 YT(uchar3 a, uchar3 b) { return ( uchar3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) uchar4 YT(uchar4 a, uchar4 b) { return ( uchar4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) uchar8 YT(uchar8 a, uchar8 b) { return ( uchar8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) uchar16 YT(uchar16 a, uchar16 b) { return ( uchar16a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) short2 YT(short2 a, short2 b) { return ( short2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) short3 YT(short3 a, short3 b) { return ( short3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) short4 YT(short4 a, short4 b) { return ( short4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) short8 YT(short8 a, short8 b) { return ( short8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) short16 YT(short16 a, short16 b) { return ( short16a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) ushort2 YT(ushort2 a, ushort2 b) { return ( ushort2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) ushort3 YT(ushort3 a, ushort3 b) { return ( ushort3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) ushort4 YT(ushort4 a, ushort4 b) { return ( ushort4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) ushort8 YT(ushort8 a, ushort8 b) { return ( ushort8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) ushort16 YT(ushort16 a, ushort16 b) { return ( ushort16a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) int2 YT(int2 a, int2 b) { return ( int2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) int3 YT(int3 a, int3 b) { return ( int3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) int4 YT(int4 a, int4 b) { return ( int4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) int8 YT(int8 a, int8 b) { return ( int8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) int16 YT(int16 a, int16 b) { return ( int16a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) uint2 YT(uint2 a, uint2 b) { return ( uint2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) uint3 YT(uint3 a, uint3 b) { return ( uint3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) uint4 YT(uint4 a, uint4 b) { return ( uint4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) uint8 YT(uint8 a, uint8 b) { return ( uint8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) uint16 YT(uint16 a, uint16 b) { return ( uint16a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) long2 YT(long2 a, long2 b) { return ( long2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) long3 YT(long3 a, long3 b) { return ( long3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) long4 YT(long4 a, long4 b) { return ( long4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) long8 YT(long8 a, long8 b) { return ( long8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) long16 YT(long16 a, long16 b) { return ( long16a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) ulong2 YT(ulong2 a, ulong2 b) { return ( ulong2a(YT b.x)a YT b.y));
}
__attribute__((overloadable)) __attribute__((always_inline)) ulong3 YT(ulong3 a, ulong3 b) { return ( ulong3a(YT b.x)a YT b.y)a YT b.z));
}
__attribute__((overloadable)) __attribute__((always_inline)) ulong4 YT(ulong4 a, ulong4 b) { return ( ulong4a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) ulong8 YT(ulong8 a, ulong8 b) { return ( ulong8a(YT, b.lo)a YT, b.hi));
}
__attribute__((overloadable)) __attribute__((always_inline)) ulong16 YT(ulong16 a, ulong16 b) { return ( ulong16a(YT, b.lo)a YT, b.hi));
}