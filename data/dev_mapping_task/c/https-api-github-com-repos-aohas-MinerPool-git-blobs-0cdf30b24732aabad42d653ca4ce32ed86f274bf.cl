__attribute__((reqd_work_group_size(128, 1, 1))) __kernel void A(volatile __global uint* restrict a, const uint b, const uint c, const uint d, const uint e, const uint f, const uint g, const uint h, const uint i, const uint j, const uint k, const uint l, const uint m, const uint n, const uint o, const uint p, const uint q, const uint r, const uint s, const uint t, const uint u) {
  const uint v = get_global_id(0);
  const uint w = 0x80000001UL;
  const uint x = 0x00000000UL;
  const uint y = 0x000005a0UL;

  const uint z = 0x243F6A88UL;
  const uint aa = 0x85A308D3UL;
  const uint ab = 0x13198A2EUL;
  const uint ac = 0x03707344UL;
  const uint ad = 0xA4093822UL;
  const uint ae = 0x299F31D0UL;
  const uint af = 0x082EFA98UL;
  const uint ag = 0xEC4E6C89UL;
  const uint ah = 0x452821E6UL;
  const uint ai = 0x38D01377UL;
  const uint aj = 0xBE5466CFUL;
  const uint ak = 0x34E90C6CUL;
  const uint al = 0xC0AC29B7UL;
  const uint am = 0xC97C50DDUL;
  const uint an = 0x3F84D5B5UL;
  const uint ao = 0xB5470917UL;

  uint ap, aq, ar, as, at, au, av, aw;
  uint ax, ay, az, ba, bb, bc, bd, be;
  uint bf;

  ap = b;
  aq = c;
  ar = d;
  as = e;
  at = f;
  au = g;
  av = h;
  bf = aw = i;

  ax = z;
  ay = aa;
  az = ab;
  ba = ac;
  bb = 0xA4093D82UL;
  bc = 0x299F3470UL;
  bd = af;
  be = ag;

  ap = ap + (j ^ aa);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (l ^ ac);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (m ^ ae);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (o ^ ag);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (n ^ ad);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (p ^ af);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (v ^ ab);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (k ^ z);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (q ^ ai);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (s ^ ak);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (u ^ am);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (x ^ ao);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (w ^ al);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (y ^ an);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (t ^ aj);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (r ^ ah);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (x ^ aj);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (m ^ ah);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (r ^ ao);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (w ^ af);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (y ^ ai);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (o ^ am);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (q ^ ad);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (s ^ an);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (k ^ al);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (j ^ ab);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (t ^ ag);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (n ^ ac);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (p ^ ak);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (v ^ ae);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (l ^ z);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (u ^ aa);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (t ^ ah);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (u ^ z);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (n ^ ab);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (y ^ am);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (l ^ ae);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (w ^ ao);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (j ^ al);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (q ^ ak);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (s ^ an);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (v ^ af);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (p ^ aa);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (r ^ ad);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (k ^ ag);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (m ^ ai);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (o ^ ac);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (x ^ aj);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (p ^ ai);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (v ^ aa);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (w ^ al);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (t ^ an);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (u ^ am);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (x ^ ak);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (k ^ ac);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (r ^ ag);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (l ^ af);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (n ^ aj);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (m ^ z);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (y ^ ah);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (j ^ ad);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (q ^ ao);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (s ^ ae);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (o ^ ab);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (r ^ z);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (n ^ ag);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (l ^ ad);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (s ^ ao);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (m ^ ab);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (y ^ aj);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (p ^ ae);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (j ^ ai);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (x ^ aa);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (t ^ al);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (o ^ ah);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (v ^ am);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (q ^ af);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (w ^ ac);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (u ^ ak);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (k ^ an);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (l ^ al);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (o ^ aj);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (j ^ ak);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (q ^ ac);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (t ^ z);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (v ^ ah);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (s ^ af);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (u ^ ab);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (m ^ am);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (p ^ ae);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (y ^ an);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (k ^ ai);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (x ^ ao);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (r ^ aa);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (n ^ ag);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (w ^ ad);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (u ^ ae);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (k ^ ao);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (x ^ am);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (m ^ aj);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (w ^ an);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (s ^ ad);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (y ^ aa);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (n ^ al);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (j ^ ag);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (o ^ ac);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (r ^ ab);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (q ^ ak);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (l ^ ai);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (t ^ ah);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (v ^ af);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (p ^ z);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (w ^ ak);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (p ^ an);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (u ^ aa);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (v ^ ai);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (k ^ al);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (r ^ ac);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (x ^ ag);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (t ^ am);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (n ^ z);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (y ^ ad);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (q ^ af);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (l ^ aj);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (o ^ ah);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (s ^ ab);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (m ^ ao);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (j ^ ae);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (o ^ ao);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (x ^ ai);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (t ^ ac);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (j ^ ah);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (v ^ ak);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (q ^ z);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (r ^ an);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (y ^ af);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (u ^ ab);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (w ^ ag);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (k ^ ad);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (s ^ ae);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (m ^ aa);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (n ^ aj);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (p ^ am);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (l ^ al);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (s ^ ab);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (q ^ ad);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (p ^ af);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (k ^ ae);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (o ^ ag);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (n ^ aa);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (m ^ ah);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (l ^ aj);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (y ^ ak);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (r ^ an);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (v ^ al);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (w ^ z);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (u ^ ac);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (j ^ am);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (x ^ ai);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (t ^ ao);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (j ^ aa);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (l ^ ac);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (m ^ ae);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (o ^ ag);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (n ^ ad);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (p ^ af);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (v ^ ab);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (k ^ z);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (q ^ ai);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (s ^ ak);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (u ^ am);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (x ^ ao);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (w ^ al);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (y ^ an);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (t ^ aj);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (r ^ ah);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (x ^ aj);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (m ^ ah);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (r ^ ao);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (w ^ af);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (y ^ ai);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (o ^ am);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (q ^ ad);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (s ^ an);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (k ^ al);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (j ^ ab);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (t ^ ag);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (n ^ ac);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (p ^ ak);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (v ^ ae);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (l ^ z);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (u ^ aa);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (t ^ ah);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (u ^ z);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (n ^ ab);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (y ^ am);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (l ^ ae);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (w ^ ao);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (j ^ al);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (q ^ ak);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (s ^ an);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (v ^ af);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (p ^ aa);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (r ^ ad);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (k ^ ag);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (m ^ ai);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (o ^ ac);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (x ^ aj);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (p ^ ai);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 12U));
  aq = aq + (v ^ aa);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 12U));
  ar = ar + (w ^ al);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 12U));
  as = as + (t ^ an);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 12U));
  ar = ar + (u ^ am);
  ar = ar + av;
  bd = bd ^ ar;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  az = az + bd;
  av = av ^ az;
  av = rotate(av, (uint)(32U - 7U));
  as = as + (x ^ ak);
  as = as + aw;
  be = be ^ as;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  ba = ba + be;
  aw = aw ^ ba;
  aw = rotate(aw, (uint)(32U - 7U));
  aq = aq + (k ^ ac);
  aq = aq + au;
  bc = bc ^ aq;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ay = ay + bc;
  au = au ^ ay;
  au = rotate(au, (uint)(32U - 7U));
  ap = ap + (r ^ ag);
  ap = ap + at;
  bb = bb ^ ap;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ax = ax + bb;
  at = at ^ ax;
  at = rotate(at, (uint)(32U - 7U));
  ap = ap + (l ^ af);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).zwxy, uint);
  az = az + be;
  au = au ^ az;
  au = rotate(au, (uint)(32U - 12U));
  aq = aq + (n ^ aj);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).zwxy, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 12U));
  ar = ar + (m ^ z);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).zwxy, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 12U));
  as = as + (y ^ ah);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).zwxy, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 12U));
  ar = ar + (j ^ ad);
  ar = ar + aw;
  bc = bc ^ ar;
  bc = __builtin_astype(__builtin_astype(bc, uchar4).yzwx, uint);
  ax = ax + bc;
  aw = aw ^ ax;
  aw = rotate(aw, (uint)(32U - 7U));
  as = as + (q ^ ao);
  as = as + at;
  bd = bd ^ as;
  bd = __builtin_astype(__builtin_astype(bd, uchar4).yzwx, uint);
  ay = ay + bd;
  at = at ^ ay;
  at = rotate(at, (uint)(32U - 7U));
  aq = aq + (s ^ ae);
  aq = aq + av;
  bb = bb ^ aq;
  bb = __builtin_astype(__builtin_astype(bb, uchar4).yzwx, uint);
  ba = ba + bb;
  av = av ^ ba;
  av = rotate(av, (uint)(32U - 7U));
  ap = ap + (o ^ ab);
  ap = ap + au;
  be = be ^ ap;
  be = __builtin_astype(__builtin_astype(be, uchar4).yzwx, uint);
  if (bf ^ aw ^ be)
    return;

  a[a[0xFF]++] = v;
}