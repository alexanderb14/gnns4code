typedef uchar uint8_t; typedef char int8_t; typedef ushort uint16_t; typedef short int16_t; typedef uint uint32_t; typedef int int32_t; typedef ulong uint64_t; typedef long int64_t; typedef uint32_t host_size_t; typedef struct dyna_salt_t {
  host_size_t salt_cmp_size;
  host_size_t bitfield_and_offset;
} dyna_salt;
inline uint A(uint a) {
  return bitselect(rotate(a, 24U), rotate(a, 8U), 0x00FF00FFU);
}
typedef struct {
  uint8_t v[87];
  uint32_t length;
} pwsafe_pass;

typedef struct { uint32_t cracked; } pwsafe_hash;

typedef struct {
  int version;
  uint32_t iterations;
  uint8_t hash[32];
  uint8_t salt[32];
} pwsafe_salt;

inline void B(uint32_t* a, uint32_t* b) {
  uint32_t c = b[0];
  uint32_t d = b[1];
  uint32_t e = b[2];
  uint32_t f = b[3];
  uint32_t g = b[4];
  uint32_t h = b[5];
  uint32_t i = b[6];
  uint32_t j = b[7];

  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x428a2f98 + a[0];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x71374491 + a[1];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0xb5c0fbcf + a[2];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0xe9b5dba5 + a[3];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0x3956c25b + a[4];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0x59f111f1 + a[5];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0x923f82a4 + a[6];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0xab1c5ed5 + a[7];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;
  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0xd807aa98 + a[8];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x12835b01 + a[9];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x243185be + a[10];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0x550c7dc3 + a[11];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0x72be5d74 + a[12];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0x80deb1fe + a[13];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0x9bdc06a7 + a[14];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0xc19bf174 + a[15];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;

  a[0] += ((rotate(a[14], 32U - 17)) ^ (rotate(a[14], 32U - 19)) ^ (a[14] >> 10)) + a[9] + ((rotate(a[1], 32U - 7)) ^ (rotate(a[1], 32U - 18)) ^ (a[1] >> 3));
  a[1] += ((rotate(a[15], 32U - 17)) ^ (rotate(a[15], 32U - 19)) ^ (a[15] >> 10)) + a[10] + ((rotate(a[2], 32U - 7)) ^ (rotate(a[2], 32U - 18)) ^ (a[2] >> 3));
  a[2] += ((rotate(a[0], 32U - 17)) ^ (rotate(a[0], 32U - 19)) ^ (a[0] >> 10)) + a[11] + ((rotate(a[3], 32U - 7)) ^ (rotate(a[3], 32U - 18)) ^ (a[3] >> 3));
  a[3] += ((rotate(a[1], 32U - 17)) ^ (rotate(a[1], 32U - 19)) ^ (a[1] >> 10)) + a[12] + ((rotate(a[4], 32U - 7)) ^ (rotate(a[4], 32U - 18)) ^ (a[4] >> 3));
  a[4] += ((rotate(a[2], 32U - 17)) ^ (rotate(a[2], 32U - 19)) ^ (a[2] >> 10)) + a[13] + ((rotate(a[5], 32U - 7)) ^ (rotate(a[5], 32U - 18)) ^ (a[5] >> 3));
  a[5] += ((rotate(a[3], 32U - 17)) ^ (rotate(a[3], 32U - 19)) ^ (a[3] >> 10)) + a[14] + ((rotate(a[6], 32U - 7)) ^ (rotate(a[6], 32U - 18)) ^ (a[6] >> 3));
  a[6] += ((rotate(a[4], 32U - 17)) ^ (rotate(a[4], 32U - 19)) ^ (a[4] >> 10)) + a[15] + ((rotate(a[7], 32U - 7)) ^ (rotate(a[7], 32U - 18)) ^ (a[7] >> 3));
  a[7] += ((rotate(a[5], 32U - 17)) ^ (rotate(a[5], 32U - 19)) ^ (a[5] >> 10)) + a[0] + ((rotate(a[8], 32U - 7)) ^ (rotate(a[8], 32U - 18)) ^ (a[8] >> 3));
  a[8] += ((rotate(a[6], 32U - 17)) ^ (rotate(a[6], 32U - 19)) ^ (a[6] >> 10)) + a[1] + ((rotate(a[9], 32U - 7)) ^ (rotate(a[9], 32U - 18)) ^ (a[9] >> 3));
  a[9] += ((rotate(a[7], 32U - 17)) ^ (rotate(a[7], 32U - 19)) ^ (a[7] >> 10)) + a[2] + ((rotate(a[10], 32U - 7)) ^ (rotate(a[10], 32U - 18)) ^ (a[10] >> 3));
  a[10] += ((rotate(a[8], 32U - 17)) ^ (rotate(a[8], 32U - 19)) ^ (a[8] >> 10)) + a[3] + ((rotate(a[11], 32U - 7)) ^ (rotate(a[11], 32U - 18)) ^ (a[11] >> 3));
  a[11] += ((rotate(a[9], 32U - 17)) ^ (rotate(a[9], 32U - 19)) ^ (a[9] >> 10)) + a[4] + ((rotate(a[12], 32U - 7)) ^ (rotate(a[12], 32U - 18)) ^ (a[12] >> 3));
  a[12] += ((rotate(a[10], 32U - 17)) ^ (rotate(a[10], 32U - 19)) ^ (a[10] >> 10)) + a[5] + ((rotate(a[13], 32U - 7)) ^ (rotate(a[13], 32U - 18)) ^ (a[13] >> 3));
  a[13] += ((rotate(a[11], 32U - 17)) ^ (rotate(a[11], 32U - 19)) ^ (a[11] >> 10)) + a[6] + ((rotate(a[14], 32U - 7)) ^ (rotate(a[14], 32U - 18)) ^ (a[14] >> 3));
  a[14] += ((rotate(a[12], 32U - 17)) ^ (rotate(a[12], 32U - 19)) ^ (a[12] >> 10)) + a[7] + ((rotate(a[15], 32U - 7)) ^ (rotate(a[15], 32U - 18)) ^ (a[15] >> 3));
  a[15] += ((rotate(a[13], 32U - 17)) ^ (rotate(a[13], 32U - 19)) ^ (a[13] >> 10)) + a[8] + ((rotate(a[0], 32U - 7)) ^ (rotate(a[0], 32U - 18)) ^ (a[0] >> 3));
  ;

  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0xe49b69c1 + a[0];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0xefbe4786 + a[1];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x0fc19dc6 + a[2];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0x240ca1cc + a[3];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0x2de92c6f + a[4];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0x4a7484aa + a[5];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0x5cb0a9dc + a[6];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x76f988da + a[7];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;
  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x983e5152 + a[8];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0xa831c66d + a[9];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0xb00327c8 + a[10];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0xbf597fc7 + a[11];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0xc6e00bf3 + a[12];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0xd5a79147 + a[13];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0x06ca6351 + a[14];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x14292967 + a[15];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;

  a[0] += ((rotate(a[14], 32U - 17)) ^ (rotate(a[14], 32U - 19)) ^ (a[14] >> 10)) + a[9] + ((rotate(a[1], 32U - 7)) ^ (rotate(a[1], 32U - 18)) ^ (a[1] >> 3));
  a[1] += ((rotate(a[15], 32U - 17)) ^ (rotate(a[15], 32U - 19)) ^ (a[15] >> 10)) + a[10] + ((rotate(a[2], 32U - 7)) ^ (rotate(a[2], 32U - 18)) ^ (a[2] >> 3));
  a[2] += ((rotate(a[0], 32U - 17)) ^ (rotate(a[0], 32U - 19)) ^ (a[0] >> 10)) + a[11] + ((rotate(a[3], 32U - 7)) ^ (rotate(a[3], 32U - 18)) ^ (a[3] >> 3));
  a[3] += ((rotate(a[1], 32U - 17)) ^ (rotate(a[1], 32U - 19)) ^ (a[1] >> 10)) + a[12] + ((rotate(a[4], 32U - 7)) ^ (rotate(a[4], 32U - 18)) ^ (a[4] >> 3));
  a[4] += ((rotate(a[2], 32U - 17)) ^ (rotate(a[2], 32U - 19)) ^ (a[2] >> 10)) + a[13] + ((rotate(a[5], 32U - 7)) ^ (rotate(a[5], 32U - 18)) ^ (a[5] >> 3));
  a[5] += ((rotate(a[3], 32U - 17)) ^ (rotate(a[3], 32U - 19)) ^ (a[3] >> 10)) + a[14] + ((rotate(a[6], 32U - 7)) ^ (rotate(a[6], 32U - 18)) ^ (a[6] >> 3));
  a[6] += ((rotate(a[4], 32U - 17)) ^ (rotate(a[4], 32U - 19)) ^ (a[4] >> 10)) + a[15] + ((rotate(a[7], 32U - 7)) ^ (rotate(a[7], 32U - 18)) ^ (a[7] >> 3));
  a[7] += ((rotate(a[5], 32U - 17)) ^ (rotate(a[5], 32U - 19)) ^ (a[5] >> 10)) + a[0] + ((rotate(a[8], 32U - 7)) ^ (rotate(a[8], 32U - 18)) ^ (a[8] >> 3));
  a[8] += ((rotate(a[6], 32U - 17)) ^ (rotate(a[6], 32U - 19)) ^ (a[6] >> 10)) + a[1] + ((rotate(a[9], 32U - 7)) ^ (rotate(a[9], 32U - 18)) ^ (a[9] >> 3));
  a[9] += ((rotate(a[7], 32U - 17)) ^ (rotate(a[7], 32U - 19)) ^ (a[7] >> 10)) + a[2] + ((rotate(a[10], 32U - 7)) ^ (rotate(a[10], 32U - 18)) ^ (a[10] >> 3));
  a[10] += ((rotate(a[8], 32U - 17)) ^ (rotate(a[8], 32U - 19)) ^ (a[8] >> 10)) + a[3] + ((rotate(a[11], 32U - 7)) ^ (rotate(a[11], 32U - 18)) ^ (a[11] >> 3));
  a[11] += ((rotate(a[9], 32U - 17)) ^ (rotate(a[9], 32U - 19)) ^ (a[9] >> 10)) + a[4] + ((rotate(a[12], 32U - 7)) ^ (rotate(a[12], 32U - 18)) ^ (a[12] >> 3));
  a[12] += ((rotate(a[10], 32U - 17)) ^ (rotate(a[10], 32U - 19)) ^ (a[10] >> 10)) + a[5] + ((rotate(a[13], 32U - 7)) ^ (rotate(a[13], 32U - 18)) ^ (a[13] >> 3));
  a[13] += ((rotate(a[11], 32U - 17)) ^ (rotate(a[11], 32U - 19)) ^ (a[11] >> 10)) + a[6] + ((rotate(a[14], 32U - 7)) ^ (rotate(a[14], 32U - 18)) ^ (a[14] >> 3));
  a[14] += ((rotate(a[12], 32U - 17)) ^ (rotate(a[12], 32U - 19)) ^ (a[12] >> 10)) + a[7] + ((rotate(a[15], 32U - 7)) ^ (rotate(a[15], 32U - 18)) ^ (a[15] >> 3));
  a[15] += ((rotate(a[13], 32U - 17)) ^ (rotate(a[13], 32U - 19)) ^ (a[13] >> 10)) + a[8] + ((rotate(a[0], 32U - 7)) ^ (rotate(a[0], 32U - 18)) ^ (a[0] >> 3));
  ;

  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x27b70a85 + a[0];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x2e1b2138 + a[1];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x4d2c6dfc + a[2];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0x53380d13 + a[3];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0x650a7354 + a[4];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0x766a0abb + a[5];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0x81c2c92e + a[6];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x92722c85 + a[7];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;
  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0xa2bfe8a1 + a[8];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0xa81a664b + a[9];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0xc24b8b70 + a[10];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0xc76c51a3 + a[11];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0xd192e819 + a[12];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0xd6990624 + a[13];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0xf40e3585 + a[14];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x106aa070 + a[15];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;

  a[0] += ((rotate(a[14], 32U - 17)) ^ (rotate(a[14], 32U - 19)) ^ (a[14] >> 10)) + a[9] + ((rotate(a[1], 32U - 7)) ^ (rotate(a[1], 32U - 18)) ^ (a[1] >> 3));
  a[1] += ((rotate(a[15], 32U - 17)) ^ (rotate(a[15], 32U - 19)) ^ (a[15] >> 10)) + a[10] + ((rotate(a[2], 32U - 7)) ^ (rotate(a[2], 32U - 18)) ^ (a[2] >> 3));
  a[2] += ((rotate(a[0], 32U - 17)) ^ (rotate(a[0], 32U - 19)) ^ (a[0] >> 10)) + a[11] + ((rotate(a[3], 32U - 7)) ^ (rotate(a[3], 32U - 18)) ^ (a[3] >> 3));
  a[3] += ((rotate(a[1], 32U - 17)) ^ (rotate(a[1], 32U - 19)) ^ (a[1] >> 10)) + a[12] + ((rotate(a[4], 32U - 7)) ^ (rotate(a[4], 32U - 18)) ^ (a[4] >> 3));
  a[4] += ((rotate(a[2], 32U - 17)) ^ (rotate(a[2], 32U - 19)) ^ (a[2] >> 10)) + a[13] + ((rotate(a[5], 32U - 7)) ^ (rotate(a[5], 32U - 18)) ^ (a[5] >> 3));
  a[5] += ((rotate(a[3], 32U - 17)) ^ (rotate(a[3], 32U - 19)) ^ (a[3] >> 10)) + a[14] + ((rotate(a[6], 32U - 7)) ^ (rotate(a[6], 32U - 18)) ^ (a[6] >> 3));
  a[6] += ((rotate(a[4], 32U - 17)) ^ (rotate(a[4], 32U - 19)) ^ (a[4] >> 10)) + a[15] + ((rotate(a[7], 32U - 7)) ^ (rotate(a[7], 32U - 18)) ^ (a[7] >> 3));
  a[7] += ((rotate(a[5], 32U - 17)) ^ (rotate(a[5], 32U - 19)) ^ (a[5] >> 10)) + a[0] + ((rotate(a[8], 32U - 7)) ^ (rotate(a[8], 32U - 18)) ^ (a[8] >> 3));
  a[8] += ((rotate(a[6], 32U - 17)) ^ (rotate(a[6], 32U - 19)) ^ (a[6] >> 10)) + a[1] + ((rotate(a[9], 32U - 7)) ^ (rotate(a[9], 32U - 18)) ^ (a[9] >> 3));
  a[9] += ((rotate(a[7], 32U - 17)) ^ (rotate(a[7], 32U - 19)) ^ (a[7] >> 10)) + a[2] + ((rotate(a[10], 32U - 7)) ^ (rotate(a[10], 32U - 18)) ^ (a[10] >> 3));
  a[10] += ((rotate(a[8], 32U - 17)) ^ (rotate(a[8], 32U - 19)) ^ (a[8] >> 10)) + a[3] + ((rotate(a[11], 32U - 7)) ^ (rotate(a[11], 32U - 18)) ^ (a[11] >> 3));
  a[11] += ((rotate(a[9], 32U - 17)) ^ (rotate(a[9], 32U - 19)) ^ (a[9] >> 10)) + a[4] + ((rotate(a[12], 32U - 7)) ^ (rotate(a[12], 32U - 18)) ^ (a[12] >> 3));
  a[12] += ((rotate(a[10], 32U - 17)) ^ (rotate(a[10], 32U - 19)) ^ (a[10] >> 10)) + a[5] + ((rotate(a[13], 32U - 7)) ^ (rotate(a[13], 32U - 18)) ^ (a[13] >> 3));
  a[13] += ((rotate(a[11], 32U - 17)) ^ (rotate(a[11], 32U - 19)) ^ (a[11] >> 10)) + a[6] + ((rotate(a[14], 32U - 7)) ^ (rotate(a[14], 32U - 18)) ^ (a[14] >> 3));
  a[14] += ((rotate(a[12], 32U - 17)) ^ (rotate(a[12], 32U - 19)) ^ (a[12] >> 10)) + a[7] + ((rotate(a[15], 32U - 7)) ^ (rotate(a[15], 32U - 18)) ^ (a[15] >> 3));
  a[15] += ((rotate(a[13], 32U - 17)) ^ (rotate(a[13], 32U - 19)) ^ (a[13] >> 10)) + a[8] + ((rotate(a[0], 32U - 7)) ^ (rotate(a[0], 32U - 18)) ^ (a[0] >> 3));
  ;

  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x19a4c116 + a[0];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x1e376c08 + a[1];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x2748774c + a[2];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0x34b0bcb5 + a[3];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0x391c0cb3 + a[4];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0x4ed8aa4a + a[5];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0x5b9cca4f + a[6];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x682e6ff3 + a[7];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;
  j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x748f82ee + a[8];
  f += j;
  j += ((rotate(c, 32U - 2)) ^ (rotate(c, 32U - 13)) ^ (rotate(c, 32U - 22))) + bitselect(c, d, e ^ c);
  ;
  i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x78a5636f + a[9];
  e += i;
  i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, c, d ^ j);
  ;
  h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x84c87814 + a[10];
  d += h;
  h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, c ^ i);
  ;
  g += ((rotate(d, 32U - 6)) ^ (rotate(d, 32U - 11)) ^ (rotate(d, 32U - 25))) + bitselect(f, e, d) + 0x8cc70208 + a[11];
  c += g;
  g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
  ;
  f += ((rotate(c, 32U - 6)) ^ (rotate(c, 32U - 11)) ^ (rotate(c, 32U - 25))) + bitselect(e, d, c) + 0x90befffa + a[12];
  j += f;
  f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
  ;
  e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(d, c, j) + 0xa4506ceb + a[13];
  i += e;
  e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
  ;
  d += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(c, j, i) + 0xbef9a3f7 + a[14];
  h += d;
  d += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
  ;
  c += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0xc67178f2 + a[15];
  g += c;
  c += ((rotate(d, 32U - 2)) ^ (rotate(d, 32U - 13)) ^ (rotate(d, 32U - 22))) + bitselect(d, e, f ^ d);
  ;

  b[0] += c;
  b[1] += d;
  b[2] += e;
  b[3] += f;
  b[4] += g;
  b[5] += h;
  b[6] += i;
  b[7] += j;
}

__kernel void C(__global pwsafe_pass* a, __global pwsafe_salt* b) {
  uint32_t c = get_global_id(0);
  uint32_t d = a[c].length, e;
  __global uint32_t* f = (__global uint32_t*)a[c].v;
  uint32_t g[32] = {0};
  uint32_t h[8] = {0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19};

  if (d < 24) {
    for (e = 0; e < d; e++) {
      g[e / 4] |= (((uint32_t)a[c].v[e]) << ((3 - (e & 0x3)) << 3));
    }
    for (; e < 32 + d; e++) {
      g[e / 4] |= (((uint32_t)b->salt[e - d]) << ((3 - (e & 0x3)) << 3));
    }
    g[e / 4] |= (((uint32_t)0x80) << ((3 - (e & 0x3)) << 3));
    g[15] = e * 8;
    B(g, h);
  } else {
    for (e = 0; e < d; e++) {
      g[e / 4] |= (((uint32_t)a[c].v[e]) << ((3 - (e & 0x3)) << 3));
    }
    for (; e < 32 + d; e++) {
      g[e / 4] |= (((uint32_t)b->salt[e - d]) << ((3 - (e & 0x3)) << 3));
    }
    g[e / 4] |= (((uint32_t)0x80) << ((3 - (e & 0x3)) << 3));
    g[31] = e * 8;
    B(g, h);
    B(&g[16], h);
  }

  f[0] = h[0];
  f[1] = h[1];
  f[2] = h[2];
  f[3] = h[3];
  f[4] = h[4];
  f[5] = h[5];
  f[6] = h[6];
  f[7] = h[7];
  a[c].length = b->iterations + 1;
}

__kernel void D(__global pwsafe_pass* a) {
  uint32_t b = get_global_id(0);
  uint32_t c = (258 > a[b].length) ? a[b].length : 258;
  a[b].length -= c;
  __global uint32_t* d = (__global uint32_t*)a[b].v;

  uint32_t e, f, g, h, i, j, k, l;

  uint32_t m[16];
  m[0] = d[0];
  m[1] = d[1];
  m[2] = d[2];
  m[3] = d[3];
  m[4] = d[4];
  m[5] = d[5];
  m[6] = d[6];
  m[7] = d[7];

  while (c > 0) {
    c--;
    e = 0x6a09e667;
    f = 0xbb67ae85;
    g = 0x3c6ef372;
    h = 0xa54ff53a;
    i = 0x510e527f;
    j = 0x9b05688c;
    k = 0x1f83d9ab;
    l = 0x5be0cd19;

    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0x428a2f98 + m[0];
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x71374491 + m[1];
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0xb5c0fbcf + m[2];
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0xe9b5dba5 + m[3];
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x3956c25b + m[4];
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0x59f111f1 + m[5];
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0x923f82a4 + m[6];
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0xab1c5ed5 + m[7];
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;
    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0x5807aa98;
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x12835b01;
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x243185be;
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x550c7dc3;
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x72be5d74;
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0x80deb1fe;
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0x9bdc06a7;
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0xc19bf274;
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;

    m[0] += ((rotate(m[1], 32U - 7)) ^ (rotate(m[1], 32U - 18)) ^ (m[1] >> 3));
    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0xe49b69c1 + m[0];
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    m[1] += 0x00a00000 + ((rotate(m[2], 32U - 7)) ^ (rotate(m[2], 32U - 18)) ^ (m[2] >> 3));
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0xefbe4786 + m[1];
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    m[2] += ((rotate(m[0], 32U - 17)) ^ (rotate(m[0], 32U - 19)) ^ (m[0] >> 10)) + ((rotate(m[3], 32U - 7)) ^ (rotate(m[3], 32U - 18)) ^ (m[3] >> 3));
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x0fc19dc6 + m[2];
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    m[3] += ((rotate(m[1], 32U - 17)) ^ (rotate(m[1], 32U - 19)) ^ (m[1] >> 10)) + ((rotate(m[4], 32U - 7)) ^ (rotate(m[4], 32U - 18)) ^ (m[4] >> 3));
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x240ca1cc + m[3];
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    m[4] += ((rotate(m[2], 32U - 17)) ^ (rotate(m[2], 32U - 19)) ^ (m[2] >> 10)) + ((rotate(m[5], 32U - 7)) ^ (rotate(m[5], 32U - 18)) ^ (m[5] >> 3));
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x2de92c6f + m[4];
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    m[5] += ((rotate(m[3], 32U - 17)) ^ (rotate(m[3], 32U - 19)) ^ (m[3] >> 10)) + ((rotate(m[6], 32U - 7)) ^ (rotate(m[6], 32U - 18)) ^ (m[6] >> 3));
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0x4a7484aa + m[5];
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    m[6] += ((rotate(m[4], 32U - 17)) ^ (rotate(m[4], 32U - 19)) ^ (m[4] >> 10)) + 256 + ((rotate(m[7], 32U - 7)) ^ (rotate(m[7], 32U - 18)) ^ (m[7] >> 3));
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0x5cb0a9dc + m[6];
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    m[7] += ((rotate(m[5], 32U - 17)) ^ (rotate(m[5], 32U - 19)) ^ (m[5] >> 10)) + m[0] + 0x11002000;
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0x76f988da + m[7];
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;
    m[8] = 0x80000000 + ((rotate(m[6], 32U - 17)) ^ (rotate(m[6], 32U - 19)) ^ (m[6] >> 10)) + m[1];
    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0x983e5152 + m[8];
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    m[9] = ((rotate(m[7], 32U - 17)) ^ (rotate(m[7], 32U - 19)) ^ (m[7] >> 10)) + m[2];
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0xa831c66d + m[9];
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    m[10] = ((rotate(m[8], 32U - 17)) ^ (rotate(m[8], 32U - 19)) ^ (m[8] >> 10)) + m[3];
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0xb00327c8 + m[10];
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    m[11] = ((rotate(m[9], 32U - 17)) ^ (rotate(m[9], 32U - 19)) ^ (m[9] >> 10)) + m[4];
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0xbf597fc7 + m[11];
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    m[12] = ((rotate(m[10], 32U - 17)) ^ (rotate(m[10], 32U - 19)) ^ (m[10] >> 10)) + m[5];
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0xc6e00bf3 + m[12];
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    m[13] = ((rotate(m[11], 32U - 17)) ^ (rotate(m[11], 32U - 19)) ^ (m[11] >> 10)) + m[6];
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0xd5a79147 + m[13];
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    m[14] = ((rotate(m[12], 32U - 17)) ^ (rotate(m[12], 32U - 19)) ^ (m[12] >> 10)) + m[7] + 0x00400022;
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0x06ca6351 + m[14];
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    m[15] = 256 + ((rotate(m[13], 32U - 17)) ^ (rotate(m[13], 32U - 19)) ^ (m[13] >> 10)) + m[8] + ((rotate(m[0], 32U - 7)) ^ (rotate(m[0], 32U - 18)) ^ (m[0] >> 3));
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0x14292967 + m[15];
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;

    m[0] += ((rotate(m[14], 32U - 17)) ^ (rotate(m[14], 32U - 19)) ^ (m[14] >> 10)) + m[9] + ((rotate(m[1], 32U - 7)) ^ (rotate(m[1], 32U - 18)) ^ (m[1] >> 3));
    m[1] += ((rotate(m[15], 32U - 17)) ^ (rotate(m[15], 32U - 19)) ^ (m[15] >> 10)) + m[10] + ((rotate(m[2], 32U - 7)) ^ (rotate(m[2], 32U - 18)) ^ (m[2] >> 3));
    m[2] += ((rotate(m[0], 32U - 17)) ^ (rotate(m[0], 32U - 19)) ^ (m[0] >> 10)) + m[11] + ((rotate(m[3], 32U - 7)) ^ (rotate(m[3], 32U - 18)) ^ (m[3] >> 3));
    m[3] += ((rotate(m[1], 32U - 17)) ^ (rotate(m[1], 32U - 19)) ^ (m[1] >> 10)) + m[12] + ((rotate(m[4], 32U - 7)) ^ (rotate(m[4], 32U - 18)) ^ (m[4] >> 3));
    m[4] += ((rotate(m[2], 32U - 17)) ^ (rotate(m[2], 32U - 19)) ^ (m[2] >> 10)) + m[13] + ((rotate(m[5], 32U - 7)) ^ (rotate(m[5], 32U - 18)) ^ (m[5] >> 3));
    m[5] += ((rotate(m[3], 32U - 17)) ^ (rotate(m[3], 32U - 19)) ^ (m[3] >> 10)) + m[14] + ((rotate(m[6], 32U - 7)) ^ (rotate(m[6], 32U - 18)) ^ (m[6] >> 3));
    m[6] += ((rotate(m[4], 32U - 17)) ^ (rotate(m[4], 32U - 19)) ^ (m[4] >> 10)) + m[15] + ((rotate(m[7], 32U - 7)) ^ (rotate(m[7], 32U - 18)) ^ (m[7] >> 3));
    m[7] += ((rotate(m[5], 32U - 17)) ^ (rotate(m[5], 32U - 19)) ^ (m[5] >> 10)) + m[0] + ((rotate(m[8], 32U - 7)) ^ (rotate(m[8], 32U - 18)) ^ (m[8] >> 3));
    m[8] += ((rotate(m[6], 32U - 17)) ^ (rotate(m[6], 32U - 19)) ^ (m[6] >> 10)) + m[1] + ((rotate(m[9], 32U - 7)) ^ (rotate(m[9], 32U - 18)) ^ (m[9] >> 3));
    m[9] += ((rotate(m[7], 32U - 17)) ^ (rotate(m[7], 32U - 19)) ^ (m[7] >> 10)) + m[2] + ((rotate(m[10], 32U - 7)) ^ (rotate(m[10], 32U - 18)) ^ (m[10] >> 3));
    m[10] += ((rotate(m[8], 32U - 17)) ^ (rotate(m[8], 32U - 19)) ^ (m[8] >> 10)) + m[3] + ((rotate(m[11], 32U - 7)) ^ (rotate(m[11], 32U - 18)) ^ (m[11] >> 3));
    m[11] += ((rotate(m[9], 32U - 17)) ^ (rotate(m[9], 32U - 19)) ^ (m[9] >> 10)) + m[4] + ((rotate(m[12], 32U - 7)) ^ (rotate(m[12], 32U - 18)) ^ (m[12] >> 3));
    m[12] += ((rotate(m[10], 32U - 17)) ^ (rotate(m[10], 32U - 19)) ^ (m[10] >> 10)) + m[5] + ((rotate(m[13], 32U - 7)) ^ (rotate(m[13], 32U - 18)) ^ (m[13] >> 3));
    m[13] += ((rotate(m[11], 32U - 17)) ^ (rotate(m[11], 32U - 19)) ^ (m[11] >> 10)) + m[6] + ((rotate(m[14], 32U - 7)) ^ (rotate(m[14], 32U - 18)) ^ (m[14] >> 3));
    m[14] += ((rotate(m[12], 32U - 17)) ^ (rotate(m[12], 32U - 19)) ^ (m[12] >> 10)) + m[7] + ((rotate(m[15], 32U - 7)) ^ (rotate(m[15], 32U - 18)) ^ (m[15] >> 3));
    m[15] += ((rotate(m[13], 32U - 17)) ^ (rotate(m[13], 32U - 19)) ^ (m[13] >> 10)) + m[8] + ((rotate(m[0], 32U - 7)) ^ (rotate(m[0], 32U - 18)) ^ (m[0] >> 3));
    ;

    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0x27b70a85 + m[0];
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x2e1b2138 + m[1];
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x4d2c6dfc + m[2];
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x53380d13 + m[3];
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x650a7354 + m[4];
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0x766a0abb + m[5];
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0x81c2c92e + m[6];
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0x92722c85 + m[7];
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;
    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0xa2bfe8a1 + m[8];
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0xa81a664b + m[9];
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0xc24b8b70 + m[10];
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0xc76c51a3 + m[11];
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0xd192e819 + m[12];
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0xd6990624 + m[13];
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0xf40e3585 + m[14];
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0x106aa070 + m[15];
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;

    m[0] += ((rotate(m[14], 32U - 17)) ^ (rotate(m[14], 32U - 19)) ^ (m[14] >> 10)) + m[9] + ((rotate(m[1], 32U - 7)) ^ (rotate(m[1], 32U - 18)) ^ (m[1] >> 3));
    m[1] += ((rotate(m[15], 32U - 17)) ^ (rotate(m[15], 32U - 19)) ^ (m[15] >> 10)) + m[10] + ((rotate(m[2], 32U - 7)) ^ (rotate(m[2], 32U - 18)) ^ (m[2] >> 3));
    m[2] += ((rotate(m[0], 32U - 17)) ^ (rotate(m[0], 32U - 19)) ^ (m[0] >> 10)) + m[11] + ((rotate(m[3], 32U - 7)) ^ (rotate(m[3], 32U - 18)) ^ (m[3] >> 3));
    m[3] += ((rotate(m[1], 32U - 17)) ^ (rotate(m[1], 32U - 19)) ^ (m[1] >> 10)) + m[12] + ((rotate(m[4], 32U - 7)) ^ (rotate(m[4], 32U - 18)) ^ (m[4] >> 3));
    m[4] += ((rotate(m[2], 32U - 17)) ^ (rotate(m[2], 32U - 19)) ^ (m[2] >> 10)) + m[13] + ((rotate(m[5], 32U - 7)) ^ (rotate(m[5], 32U - 18)) ^ (m[5] >> 3));
    m[5] += ((rotate(m[3], 32U - 17)) ^ (rotate(m[3], 32U - 19)) ^ (m[3] >> 10)) + m[14] + ((rotate(m[6], 32U - 7)) ^ (rotate(m[6], 32U - 18)) ^ (m[6] >> 3));
    m[6] += ((rotate(m[4], 32U - 17)) ^ (rotate(m[4], 32U - 19)) ^ (m[4] >> 10)) + m[15] + ((rotate(m[7], 32U - 7)) ^ (rotate(m[7], 32U - 18)) ^ (m[7] >> 3));
    m[7] += ((rotate(m[5], 32U - 17)) ^ (rotate(m[5], 32U - 19)) ^ (m[5] >> 10)) + m[0] + ((rotate(m[8], 32U - 7)) ^ (rotate(m[8], 32U - 18)) ^ (m[8] >> 3));
    m[8] += ((rotate(m[6], 32U - 17)) ^ (rotate(m[6], 32U - 19)) ^ (m[6] >> 10)) + m[1] + ((rotate(m[9], 32U - 7)) ^ (rotate(m[9], 32U - 18)) ^ (m[9] >> 3));
    m[9] += ((rotate(m[7], 32U - 17)) ^ (rotate(m[7], 32U - 19)) ^ (m[7] >> 10)) + m[2] + ((rotate(m[10], 32U - 7)) ^ (rotate(m[10], 32U - 18)) ^ (m[10] >> 3));
    m[10] += ((rotate(m[8], 32U - 17)) ^ (rotate(m[8], 32U - 19)) ^ (m[8] >> 10)) + m[3] + ((rotate(m[11], 32U - 7)) ^ (rotate(m[11], 32U - 18)) ^ (m[11] >> 3));
    m[11] += ((rotate(m[9], 32U - 17)) ^ (rotate(m[9], 32U - 19)) ^ (m[9] >> 10)) + m[4] + ((rotate(m[12], 32U - 7)) ^ (rotate(m[12], 32U - 18)) ^ (m[12] >> 3));
    m[12] += ((rotate(m[10], 32U - 17)) ^ (rotate(m[10], 32U - 19)) ^ (m[10] >> 10)) + m[5] + ((rotate(m[13], 32U - 7)) ^ (rotate(m[13], 32U - 18)) ^ (m[13] >> 3));
    m[13] += ((rotate(m[11], 32U - 17)) ^ (rotate(m[11], 32U - 19)) ^ (m[11] >> 10)) + m[6] + ((rotate(m[14], 32U - 7)) ^ (rotate(m[14], 32U - 18)) ^ (m[14] >> 3));
    m[14] += ((rotate(m[12], 32U - 17)) ^ (rotate(m[12], 32U - 19)) ^ (m[12] >> 10)) + m[7] + ((rotate(m[15], 32U - 7)) ^ (rotate(m[15], 32U - 18)) ^ (m[15] >> 3));
    m[15] += ((rotate(m[13], 32U - 17)) ^ (rotate(m[13], 32U - 19)) ^ (m[13] >> 10)) + m[8] + ((rotate(m[0], 32U - 7)) ^ (rotate(m[0], 32U - 18)) ^ (m[0] >> 3));
    ;

    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0x19a4c116 + m[0];
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x1e376c08 + m[1];
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x2748774c + m[2];
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x34b0bcb5 + m[3];
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x391c0cb3 + m[4];
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0x4ed8aa4a + m[5];
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0x5b9cca4f + m[6];
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0x682e6ff3 + m[7];
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;
    l += ((rotate(i, 32U - 6)) ^ (rotate(i, 32U - 11)) ^ (rotate(i, 32U - 25))) + bitselect(k, j, i) + 0x748f82ee + m[8];
    h += l;
    l += ((rotate(e, 32U - 2)) ^ (rotate(e, 32U - 13)) ^ (rotate(e, 32U - 22))) + bitselect(e, f, g ^ e);
    ;
    k += ((rotate(h, 32U - 6)) ^ (rotate(h, 32U - 11)) ^ (rotate(h, 32U - 25))) + bitselect(j, i, h) + 0x78a5636f + m[9];
    g += k;
    k += ((rotate(l, 32U - 2)) ^ (rotate(l, 32U - 13)) ^ (rotate(l, 32U - 22))) + bitselect(l, e, f ^ l);
    ;
    j += ((rotate(g, 32U - 6)) ^ (rotate(g, 32U - 11)) ^ (rotate(g, 32U - 25))) + bitselect(i, h, g) + 0x84c87814 + m[10];
    f += j;
    j += ((rotate(k, 32U - 2)) ^ (rotate(k, 32U - 13)) ^ (rotate(k, 32U - 22))) + bitselect(k, l, e ^ k);
    ;
    i += ((rotate(f, 32U - 6)) ^ (rotate(f, 32U - 11)) ^ (rotate(f, 32U - 25))) + bitselect(h, g, f) + 0x8cc70208 + m[11];
    e += i;
    i += ((rotate(j, 32U - 2)) ^ (rotate(j, 32U - 13)) ^ (rotate(j, 32U - 22))) + bitselect(j, k, l ^ j);
    ;
    h += ((rotate(e, 32U - 6)) ^ (rotate(e, 32U - 11)) ^ (rotate(e, 32U - 25))) + bitselect(g, f, e) + 0x90befffa + m[12];
    l += h;
    h += ((rotate(i, 32U - 2)) ^ (rotate(i, 32U - 13)) ^ (rotate(i, 32U - 22))) + bitselect(i, j, k ^ i);
    ;
    g += ((rotate(l, 32U - 6)) ^ (rotate(l, 32U - 11)) ^ (rotate(l, 32U - 25))) + bitselect(f, e, l) + 0xa4506ceb + m[13];
    k += g;
    g += ((rotate(h, 32U - 2)) ^ (rotate(h, 32U - 13)) ^ (rotate(h, 32U - 22))) + bitselect(h, i, j ^ h);
    ;
    f += ((rotate(k, 32U - 6)) ^ (rotate(k, 32U - 11)) ^ (rotate(k, 32U - 25))) + bitselect(e, l, k) + 0xbef9a3f7 + m[14];
    j += f;
    f += ((rotate(g, 32U - 2)) ^ (rotate(g, 32U - 13)) ^ (rotate(g, 32U - 22))) + bitselect(g, h, i ^ g);
    ;
    e += ((rotate(j, 32U - 6)) ^ (rotate(j, 32U - 11)) ^ (rotate(j, 32U - 25))) + bitselect(l, k, j) + 0xc67178f2 + m[15];
    i += e;
    e += ((rotate(f, 32U - 2)) ^ (rotate(f, 32U - 13)) ^ (rotate(f, 32U - 22))) + bitselect(f, g, h ^ f);
    ;

    m[0] = 0x6a09e667 + e;
    m[1] = 0xbb67ae85 + f;
    m[2] = 0x3c6ef372 + g;
    m[3] = 0xa54ff53a + h;
    m[4] = 0x510e527f + i;
    m[5] = 0x9b05688c + j;
    m[6] = 0x1f83d9ab + k;
    m[7] = 0x5be0cd19 + l;
  }

  d[0] = m[0];
  d[1] = m[1];
  d[2] = m[2];
  d[3] = m[3];
  d[4] = m[4];
  d[5] = m[5];
  d[6] = m[6];
  d[7] = m[7];
}

__kernel void E(__global pwsafe_pass* a, __global pwsafe_hash* b, __global pwsafe_salt* c) {
  uint32_t d = get_global_id(0);
  __global uint32_t* e = (__global uint32_t*)a[d].v;
  uint32_t f = 0;
  __global uint32_t* g = (__global uint32_t*)c->hash;
  if (*g++ == e[0]) {
    uint32_t h;
    h = *g++ ^ (e[1]);
    h |= *g++ ^ (e[2]);
    h |= *g++ ^ (e[3]);
    h |= *g++ ^ (e[4]);
    h |= *g++ ^ (e[5]);
    h |= *g++ ^ (e[6]);
    h |= *g++ ^ (e[7]);
    f = !h;
  }
  b[d].cracked = f;
}