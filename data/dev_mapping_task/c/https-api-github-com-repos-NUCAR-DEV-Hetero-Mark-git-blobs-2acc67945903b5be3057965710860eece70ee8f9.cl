__constant uchar Ga[256] = {0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76, 0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0, 0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15, 0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2, 0xEB, 0x27, 0xB2, 0x75,
                            0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84, 0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF, 0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C, 0x9F, 0xA8, 0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5, 0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2,
                            0xCD, 0x0C, 0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73, 0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB, 0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79, 0xE7, 0xC8, 0x37, 0x6D, 0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08,
                            0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A, 0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E, 0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF, 0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16};

void A(uchar* a) {
  a[0] = Ga[a[0]];
  a[1] = Ga[a[1]];
  a[2] = Ga[a[2]];
  a[3] = Ga[a[3]];
  a[4] = Ga[a[4]];
  a[5] = Ga[a[5]];
  a[6] = Ga[a[6]];
  a[7] = Ga[a[7]];
  a[8] = Ga[a[8]];
  a[9] = Ga[a[9]];
  a[10] = Ga[a[10]];
  a[11] = Ga[a[11]];
  a[12] = Ga[a[12]];
  a[13] = Ga[a[13]];
  a[14] = Ga[a[14]];
  a[15] = Ga[a[15]];
}

void B(uchar* a) {
  for (int b = 0; b < 4; b++) {
    uchar c[4];
    uchar d[4];
    uchar e;
    uchar f;
    for (e = 0; e < 4; e++) {
      c[e] = a[(4 * b + e)];
      f = c[e] & 0x80;
      d[e] = c[e] << 1;
      if (f == 0x80) {
        d[e] ^= 0x1b;
      }
    }
    a[b * 4 + 0] = d[0] ^ c[3] ^ c[2] ^ d[1] ^ c[1];
    a[b * 4 + 1] = d[1] ^ c[0] ^ c[3] ^ d[2] ^ c[2];
    a[b * 4 + 2] = d[2] ^ c[1] ^ c[0] ^ d[3] ^ c[3];
    a[b * 4 + 3] = d[3] ^ c[2] ^ c[1] ^ d[0] ^ c[0];
  }
}

void C(uchar* a) {
  uchar b[16];
  b[0] = a[0];
  b[1] = a[5];
  b[2] = a[10];
  b[3] = a[15];
  b[4] = a[4];
  b[5] = a[9];
  b[6] = a[14];
  b[7] = a[3];
  b[8] = a[8];
  b[9] = a[13];
  b[10] = a[2];
  b[11] = a[7];
  b[12] = a[12];
  b[13] = a[1];
  b[14] = a[6];
  b[15] = a[11];

  a[0] = b[0];
  a[1] = b[1];
  a[2] = b[2];
  a[3] = b[3];
  a[4] = b[4];
  a[5] = b[5];
  a[6] = b[6];
  a[7] = b[7];
  a[8] = b[8];
  a[9] = b[9];
  a[10] = b[10];
  a[11] = b[11];
  a[12] = b[12];
  a[13] = b[13];
  a[14] = b[14];
  a[15] = b[15];
}

void D(uchar* a, __global uint* b, int c) {
  for (int d = 0; d < 4; d++) {
    uint e = b[c + d];
    uchar f[4];

    f[0] = (e & 0xff000000) >> 24;
    f[1] = (e & 0x00ff0000) >> 16;
    f[2] = (e & 0x0000ff00) >> 8;
    f[3] = (e & 0x000000ff) >> 0;

    a[d * 4] ^= f[0];
    a[d * 4 + 1] ^= f[1];
    a[d * 4 + 2] ^= f[2];
    a[d * 4 + 3] ^= f[3];
  }
}

__kernel void E(__global uchar* a, __global uint* b) {
  uchar c[16];

  int d = get_global_id(0);

  for (int e = 0; e < 16; e++) {
    c[e] = a[d * 16 + e];
  }

  D(c, b, 0);

  for (int e = 1; e < 14; e++) {
    A(c);
    C(c);
    B(c);
    D(c, b, e * 4);
  }

  A(c);
  C(c);
  D(c, b, 14 * 4);

  for (int e = 0; e < 16; e++) {
    a[d * 16 + e] = c[e];
  }
}