kernel void A(global float* a, global float* b, constant float* c, int d, int e, int f) {
  int g = get_global_id(0);
  int h = get_global_id(1);
  int i;

  float j;
  float k;
  float l;
  float m;
  float n;
  float o;
  float p;
  float q;
  float r;
  float s;
  float t = 3 * c[0];

  if ((g < d) && (h < e)) {
    o = 0.;
    n = a[(8 + d) * ((8 + e) * (-4 + 4) + h + 4) + g + 4];
    m = a[(8 + d) * ((8 + e) * (-3 + 4) + h + 4) + g + 4];
    l = a[(8 + d) * ((8 + e) * (-2 + 4) + h + 4) + g + 4];
    k = a[(8 + d) * ((8 + e) * (-1 + 4) + h + 4) + g + 4];
    p = a[(8 + d) * ((8 + e) * (0 + 4) + h + 4) + g + 4];
    q = a[(8 + d) * ((8 + e) * (1 + 4) + h + 4) + g + 4];
    r = a[(8 + d) * ((8 + e) * (2 + 4) + h + 4) + g + 4];
    s = a[(8 + d) * ((8 + e) * (3 + 4) + h + 4) + g + 4];

    for (i = 0; i < f; i++) {
      o = n;
      n = m;
      m = l;
      l = k;
      k = p;
      p = q;
      q = r;
      r = s;
      s = a[(8 + d) * ((8 + e) * ((i + 4) + 4) + h + 4) + g + 4];

      j = t * k + c[1] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g + 1 + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g - 1 + 4]) + c[2] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g + 2 + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g - 2 + 4]) + c[3] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g + 3 + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g - 3 + 4]) + c[4] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g + 4 + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g - 4 + 4])

          + c[1] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 1 + 4) + g + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h - 1 + 4) + g + 4]) + c[2] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 2 + 4) + g + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h - 2 + 4) + g + 4]) + c[3] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 3 + 4) + g + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h - 3 + 4) + g + 4]) + c[4] * (a[(8 + d) * ((8 + e) * (i + 4) + h + 4 + 4) + g + 4] + a[(8 + d) * ((8 + e) * (i + 4) + h - 4 + 4) + g + 4])

          + c[1] * (p + l) + c[2] * (q + m) + c[3] * (r + n) + c[4] * (s + o);
      b[(8 + d) * ((8 + e) * (i + 4) + h + 4) + g + 4] = k + j;
    }
  }
}